# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/avs/messages/service_command_message.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='src/avs/messages/service_command_message.proto',
  package='avsoftware.avs.messages',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n.src/avs/messages/service_command_message.proto\x12\x17\x61vsoftware.avs.messages\"\x9f\x01\n\x16ServiceSpecificCommand\x12\x42\n\x04type\x18\x01 \x01(\x0e\x32\x34.avsoftware.avs.messages.ServiceSpecificCommand.Type\x12\x14\n\x0cservice_name\x18\x02 \x01(\t\"+\n\x04Type\x12\x0c\n\x08NO_VALUE\x10\x00\x12\x0b\n\x07RESTART\x10\x01\x12\x08\n\x04STOP\x10\x02\"\xe9\x01\n\x0eServiceCommand\x12S\n\x18service_specific_command\x18\x01 \x01(\x0b\x32/.avsoftware.avs.messages.ServiceSpecificCommandH\x00\x12K\n\x0c\x61ll_services\x18\x02 \x01(\x0e\x32\x33.avsoftware.avs.messages.ServiceCommand.AllServicesH\x00\"*\n\x0b\x41llServices\x12\x0c\n\x08STOP_ALL\x10\x00\x12\r\n\tSTART_ALL\x10\x01\x42\t\n\x07\x63ommandb\x06proto3')
)



_SERVICESPECIFICCOMMAND_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='avsoftware.avs.messages.ServiceSpecificCommand.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NO_VALUE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RESTART', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STOP', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=192,
  serialized_end=235,
)
_sym_db.RegisterEnumDescriptor(_SERVICESPECIFICCOMMAND_TYPE)

_SERVICECOMMAND_ALLSERVICES = _descriptor.EnumDescriptor(
  name='AllServices',
  full_name='avsoftware.avs.messages.ServiceCommand.AllServices',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='STOP_ALL', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='START_ALL', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=418,
  serialized_end=460,
)
_sym_db.RegisterEnumDescriptor(_SERVICECOMMAND_ALLSERVICES)


_SERVICESPECIFICCOMMAND = _descriptor.Descriptor(
  name='ServiceSpecificCommand',
  full_name='avsoftware.avs.messages.ServiceSpecificCommand',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='avsoftware.avs.messages.ServiceSpecificCommand.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='service_name', full_name='avsoftware.avs.messages.ServiceSpecificCommand.service_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SERVICESPECIFICCOMMAND_TYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=76,
  serialized_end=235,
)


_SERVICECOMMAND = _descriptor.Descriptor(
  name='ServiceCommand',
  full_name='avsoftware.avs.messages.ServiceCommand',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='service_specific_command', full_name='avsoftware.avs.messages.ServiceCommand.service_specific_command', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='all_services', full_name='avsoftware.avs.messages.ServiceCommand.all_services', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SERVICECOMMAND_ALLSERVICES,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='command', full_name='avsoftware.avs.messages.ServiceCommand.command',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=238,
  serialized_end=471,
)

_SERVICESPECIFICCOMMAND.fields_by_name['type'].enum_type = _SERVICESPECIFICCOMMAND_TYPE
_SERVICESPECIFICCOMMAND_TYPE.containing_type = _SERVICESPECIFICCOMMAND
_SERVICECOMMAND.fields_by_name['service_specific_command'].message_type = _SERVICESPECIFICCOMMAND
_SERVICECOMMAND.fields_by_name['all_services'].enum_type = _SERVICECOMMAND_ALLSERVICES
_SERVICECOMMAND_ALLSERVICES.containing_type = _SERVICECOMMAND
_SERVICECOMMAND.oneofs_by_name['command'].fields.append(
  _SERVICECOMMAND.fields_by_name['service_specific_command'])
_SERVICECOMMAND.fields_by_name['service_specific_command'].containing_oneof = _SERVICECOMMAND.oneofs_by_name['command']
_SERVICECOMMAND.oneofs_by_name['command'].fields.append(
  _SERVICECOMMAND.fields_by_name['all_services'])
_SERVICECOMMAND.fields_by_name['all_services'].containing_oneof = _SERVICECOMMAND.oneofs_by_name['command']
DESCRIPTOR.message_types_by_name['ServiceSpecificCommand'] = _SERVICESPECIFICCOMMAND
DESCRIPTOR.message_types_by_name['ServiceCommand'] = _SERVICECOMMAND
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ServiceSpecificCommand = _reflection.GeneratedProtocolMessageType('ServiceSpecificCommand', (_message.Message,), dict(
  DESCRIPTOR = _SERVICESPECIFICCOMMAND,
  __module__ = 'src.avs.messages.service_command_message_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.avs.messages.ServiceSpecificCommand)
  ))
_sym_db.RegisterMessage(ServiceSpecificCommand)

ServiceCommand = _reflection.GeneratedProtocolMessageType('ServiceCommand', (_message.Message,), dict(
  DESCRIPTOR = _SERVICECOMMAND,
  __module__ = 'src.avs.messages.service_command_message_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.avs.messages.ServiceCommand)
  ))
_sym_db.RegisterMessage(ServiceCommand)


# @@protoc_insertion_point(module_scope)
