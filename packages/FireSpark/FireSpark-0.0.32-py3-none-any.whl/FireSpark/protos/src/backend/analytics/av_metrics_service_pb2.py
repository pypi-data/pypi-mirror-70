# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/backend/analytics/av_metrics_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from FireSpark.protos.src.backend.analytics.proto import derived_metrics_pb2 as src_dot_backend_dot_analytics_dot_proto_dot_derived__metrics__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='src/backend/analytics/av_metrics_service.proto',
  package='avsoftware.analytics',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n.src/backend/analytics/av_metrics_service.proto\x12\x14\x61vsoftware.analytics\x1a\x31src/backend/analytics/proto/derived_metrics.proto\"\n\n\x08Response2i\n\x10MetricsPublisher\x12U\n\x07Publish\x12(.avsoftware.analytics.DerivedMetricBatch\x1a\x1e.avsoftware.analytics.Response\"\x00\x62\x06proto3')
  ,
  dependencies=[src_dot_backend_dot_analytics_dot_proto_dot_derived__metrics__pb2.DESCRIPTOR,])




_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='avsoftware.analytics.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=123,
  serialized_end=133,
)

DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSE,
  __module__ = 'src.backend.analytics.av_metrics_service_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.analytics.Response)
  ))
_sym_db.RegisterMessage(Response)



_METRICSPUBLISHER = _descriptor.ServiceDescriptor(
  name='MetricsPublisher',
  full_name='avsoftware.analytics.MetricsPublisher',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=135,
  serialized_end=240,
  methods=[
  _descriptor.MethodDescriptor(
    name='Publish',
    full_name='avsoftware.analytics.MetricsPublisher.Publish',
    index=0,
    containing_service=None,
    input_type=src_dot_backend_dot_analytics_dot_proto_dot_derived__metrics__pb2._DERIVEDMETRICBATCH,
    output_type=_RESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_METRICSPUBLISHER)

DESCRIPTOR.services_by_name['MetricsPublisher'] = _METRICSPUBLISHER

# @@protoc_insertion_point(module_scope)
