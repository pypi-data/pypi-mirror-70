# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from FireSpark.protos.src.backend.analytics import av_metrics_service_pb2 as src_dot_backend_dot_analytics_dot_av__metrics__service__pb2
from FireSpark.protos.src.backend.analytics.proto import derived_metrics_pb2 as src_dot_backend_dot_analytics_dot_proto_dot_derived__metrics__pb2


class MetricsPublisherStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Publish = channel.unary_unary(
        '/avsoftware.analytics.MetricsPublisher/Publish',
        request_serializer=src_dot_backend_dot_analytics_dot_proto_dot_derived__metrics__pb2.DerivedMetricBatch.SerializeToString,
        response_deserializer=src_dot_backend_dot_analytics_dot_av__metrics__service__pb2.Response.FromString,
        )


class MetricsPublisherServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Publish(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MetricsPublisherServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Publish': grpc.unary_unary_rpc_method_handler(
          servicer.Publish,
          request_deserializer=src_dot_backend_dot_analytics_dot_proto_dot_derived__metrics__pb2.DerivedMetricBatch.FromString,
          response_serializer=src_dot_backend_dot_analytics_dot_av__metrics__service__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'avsoftware.analytics.MetricsPublisher', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
