# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/backend/analytics/proto/bender.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='src/backend/analytics/proto/bender.proto',
  package='avsoftware.avbender',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n(src/backend/analytics/proto/bender.proto\x12\x13\x61vsoftware.avbender\"R\n\x08HostInfo\x12\x10\n\x08hostname\x18\x01 \x01(\t\x12\x19\n\x11\x62\x65nder_binary_md5\x18\x02 \x01(\t\x12\x19\n\x11status_script_md5\x18\x03 \x01(\t\"\x80\x01\n\tSmartData\x12\x16\n\x0epower_on_hours\x18\x01 \x01(\x05\x12\x10\n\x08temp_max\x18\x02 \x01(\x05\x12\x1a\n\x12total_lbas_written\x18\x03 \x01(\x03\x12\x17\n\x0ftotal_lbas_read\x18\x04 \x01(\x03\x12\x14\n\x0ctemp_current\x18\x05 \x01(\x05\"\x9c\x01\n\tDriveInfo\x12\x14\n\x0c\x64\x65vice_model\x18\x01 \x01(\t\x12\x15\n\rserial_number\x18\x02 \x01(\t\x12\x18\n\x10\x66irmware_version\x18\x03 \x01(\t\x12\x14\n\x0csata_version\x18\x04 \x01(\t\x12\x32\n\nsmart_data\x18\x05 \x01(\x0b\x32\x1e.avsoftware.avbender.SmartData\"\xc4\x01\n\x08SlotInfo\x12\x13\n\x0bslot_number\x18\x01 \x01(\x05\x12\x13\n\x0b\x64\x65vice_name\x18\x02 \x01(\t\x12\x18\n\x10used_space_bytes\x18\x03 \x01(\x03\x12\x19\n\x11total_space_bytes\x18\x04 \x01(\x03\x12\x11\n\tbags_left\x18\x05 \x01(\x03\x12\x12\n\nglogs_left\x18\x06 \x01(\x03\x12\x32\n\ndrive_info\x18\x07 \x01(\x0b\x32\x1e.avsoftware.avbender.DriveInfo\"q\n\x0bStatusEvent\x12\x30\n\thost_info\x18\x01 \x01(\x0b\x32\x1d.avsoftware.avbender.HostInfo\x12\x30\n\tslot_info\x18\x02 \x03(\x0b\x32\x1d.avsoftware.avbender.SlotInfob\x06proto3')
)




_HOSTINFO = _descriptor.Descriptor(
  name='HostInfo',
  full_name='avsoftware.avbender.HostInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hostname', full_name='avsoftware.avbender.HostInfo.hostname', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bender_binary_md5', full_name='avsoftware.avbender.HostInfo.bender_binary_md5', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='status_script_md5', full_name='avsoftware.avbender.HostInfo.status_script_md5', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=65,
  serialized_end=147,
)


_SMARTDATA = _descriptor.Descriptor(
  name='SmartData',
  full_name='avsoftware.avbender.SmartData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='power_on_hours', full_name='avsoftware.avbender.SmartData.power_on_hours', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='temp_max', full_name='avsoftware.avbender.SmartData.temp_max', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='total_lbas_written', full_name='avsoftware.avbender.SmartData.total_lbas_written', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='total_lbas_read', full_name='avsoftware.avbender.SmartData.total_lbas_read', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='temp_current', full_name='avsoftware.avbender.SmartData.temp_current', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=150,
  serialized_end=278,
)


_DRIVEINFO = _descriptor.Descriptor(
  name='DriveInfo',
  full_name='avsoftware.avbender.DriveInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_model', full_name='avsoftware.avbender.DriveInfo.device_model', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='serial_number', full_name='avsoftware.avbender.DriveInfo.serial_number', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='firmware_version', full_name='avsoftware.avbender.DriveInfo.firmware_version', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sata_version', full_name='avsoftware.avbender.DriveInfo.sata_version', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='smart_data', full_name='avsoftware.avbender.DriveInfo.smart_data', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=281,
  serialized_end=437,
)


_SLOTINFO = _descriptor.Descriptor(
  name='SlotInfo',
  full_name='avsoftware.avbender.SlotInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='slot_number', full_name='avsoftware.avbender.SlotInfo.slot_number', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='device_name', full_name='avsoftware.avbender.SlotInfo.device_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='used_space_bytes', full_name='avsoftware.avbender.SlotInfo.used_space_bytes', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='total_space_bytes', full_name='avsoftware.avbender.SlotInfo.total_space_bytes', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bags_left', full_name='avsoftware.avbender.SlotInfo.bags_left', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='glogs_left', full_name='avsoftware.avbender.SlotInfo.glogs_left', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='drive_info', full_name='avsoftware.avbender.SlotInfo.drive_info', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=440,
  serialized_end=636,
)


_STATUSEVENT = _descriptor.Descriptor(
  name='StatusEvent',
  full_name='avsoftware.avbender.StatusEvent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='host_info', full_name='avsoftware.avbender.StatusEvent.host_info', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='slot_info', full_name='avsoftware.avbender.StatusEvent.slot_info', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=638,
  serialized_end=751,
)

_DRIVEINFO.fields_by_name['smart_data'].message_type = _SMARTDATA
_SLOTINFO.fields_by_name['drive_info'].message_type = _DRIVEINFO
_STATUSEVENT.fields_by_name['host_info'].message_type = _HOSTINFO
_STATUSEVENT.fields_by_name['slot_info'].message_type = _SLOTINFO
DESCRIPTOR.message_types_by_name['HostInfo'] = _HOSTINFO
DESCRIPTOR.message_types_by_name['SmartData'] = _SMARTDATA
DESCRIPTOR.message_types_by_name['DriveInfo'] = _DRIVEINFO
DESCRIPTOR.message_types_by_name['SlotInfo'] = _SLOTINFO
DESCRIPTOR.message_types_by_name['StatusEvent'] = _STATUSEVENT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

HostInfo = _reflection.GeneratedProtocolMessageType('HostInfo', (_message.Message,), dict(
  DESCRIPTOR = _HOSTINFO,
  __module__ = 'src.backend.analytics.proto.bender_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.avbender.HostInfo)
  ))
_sym_db.RegisterMessage(HostInfo)

SmartData = _reflection.GeneratedProtocolMessageType('SmartData', (_message.Message,), dict(
  DESCRIPTOR = _SMARTDATA,
  __module__ = 'src.backend.analytics.proto.bender_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.avbender.SmartData)
  ))
_sym_db.RegisterMessage(SmartData)

DriveInfo = _reflection.GeneratedProtocolMessageType('DriveInfo', (_message.Message,), dict(
  DESCRIPTOR = _DRIVEINFO,
  __module__ = 'src.backend.analytics.proto.bender_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.avbender.DriveInfo)
  ))
_sym_db.RegisterMessage(DriveInfo)

SlotInfo = _reflection.GeneratedProtocolMessageType('SlotInfo', (_message.Message,), dict(
  DESCRIPTOR = _SLOTINFO,
  __module__ = 'src.backend.analytics.proto.bender_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.avbender.SlotInfo)
  ))
_sym_db.RegisterMessage(SlotInfo)

StatusEvent = _reflection.GeneratedProtocolMessageType('StatusEvent', (_message.Message,), dict(
  DESCRIPTOR = _STATUSEVENT,
  __module__ = 'src.backend.analytics.proto.bender_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.avbender.StatusEvent)
  ))
_sym_db.RegisterMessage(StatusEvent)


# @@protoc_insertion_point(module_scope)
