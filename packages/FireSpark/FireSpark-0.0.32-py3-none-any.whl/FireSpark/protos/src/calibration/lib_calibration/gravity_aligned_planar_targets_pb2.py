# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/calibration/lib_calibration/gravity_aligned_planar_targets.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from FireSpark.protos.src.common.serialization import eigen_serialization_pb2 as src_dot_common_dot_serialization_dot_eigen__serialization__pb2
from FireSpark.protos.src.common.time import time_pb2 as src_dot_common_dot_time_dot_time__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='src/calibration/lib_calibration/gravity_aligned_planar_targets.proto',
  package='avsoftware.calibration',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\nDsrc/calibration/lib_calibration/gravity_aligned_planar_targets.proto\x12\x16\x61vsoftware.calibration\x1a\x32src/common/serialization/eigen_serialization.proto\x1a\x1asrc/common/time/time.proto\"`\n\x11Pose3DWithIDProto\x12\n\n\x02id\x18\x01 \x01(\x05\x12\r\n\x05valid\x18\x02 \x01(\x08\x12\x30\n\x04pose\x18\x03 \x01(\x0b\x32\".avsoftware.common.Isometry3dProto\"\x9b\x01\n\x14GAPlanerTargetsProto\x12\x1a\n\x12gravity_surface_id\x18\x01 \x01(\x05\x12\x1c\n\x14reference_surface_id\x18\x02 \x01(\x05\x12I\n\x16reference_from_targets\x18\x03 \x03(\x0b\x32).avsoftware.calibration.Pose3DWithIDProtob\x06proto3')
  ,
  dependencies=[src_dot_common_dot_serialization_dot_eigen__serialization__pb2.DESCRIPTOR,src_dot_common_dot_time_dot_time__pb2.DESCRIPTOR,])




_POSE3DWITHIDPROTO = _descriptor.Descriptor(
  name='Pose3DWithIDProto',
  full_name='avsoftware.calibration.Pose3DWithIDProto',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='avsoftware.calibration.Pose3DWithIDProto.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='valid', full_name='avsoftware.calibration.Pose3DWithIDProto.valid', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pose', full_name='avsoftware.calibration.Pose3DWithIDProto.pose', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=176,
  serialized_end=272,
)


_GAPLANERTARGETSPROTO = _descriptor.Descriptor(
  name='GAPlanerTargetsProto',
  full_name='avsoftware.calibration.GAPlanerTargetsProto',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='gravity_surface_id', full_name='avsoftware.calibration.GAPlanerTargetsProto.gravity_surface_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reference_surface_id', full_name='avsoftware.calibration.GAPlanerTargetsProto.reference_surface_id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reference_from_targets', full_name='avsoftware.calibration.GAPlanerTargetsProto.reference_from_targets', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=275,
  serialized_end=430,
)

_POSE3DWITHIDPROTO.fields_by_name['pose'].message_type = src_dot_common_dot_serialization_dot_eigen__serialization__pb2._ISOMETRY3DPROTO
_GAPLANERTARGETSPROTO.fields_by_name['reference_from_targets'].message_type = _POSE3DWITHIDPROTO
DESCRIPTOR.message_types_by_name['Pose3DWithIDProto'] = _POSE3DWITHIDPROTO
DESCRIPTOR.message_types_by_name['GAPlanerTargetsProto'] = _GAPLANERTARGETSPROTO
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Pose3DWithIDProto = _reflection.GeneratedProtocolMessageType('Pose3DWithIDProto', (_message.Message,), dict(
  DESCRIPTOR = _POSE3DWITHIDPROTO,
  __module__ = 'src.calibration.lib_calibration.gravity_aligned_planar_targets_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.calibration.Pose3DWithIDProto)
  ))
_sym_db.RegisterMessage(Pose3DWithIDProto)

GAPlanerTargetsProto = _reflection.GeneratedProtocolMessageType('GAPlanerTargetsProto', (_message.Message,), dict(
  DESCRIPTOR = _GAPLANERTARGETSPROTO,
  __module__ = 'src.calibration.lib_calibration.gravity_aligned_planar_targets_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.calibration.GAPlanerTargetsProto)
  ))
_sym_db.RegisterMessage(GAPlanerTargetsProto)


# @@protoc_insertion_point(module_scope)
