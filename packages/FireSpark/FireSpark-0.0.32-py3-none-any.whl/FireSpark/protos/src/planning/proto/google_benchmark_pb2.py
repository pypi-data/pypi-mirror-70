# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/planning/proto/google_benchmark.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='src/planning/proto/google_benchmark.proto',
  package='avsoftware.planning',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n)src/planning/proto/google_benchmark.proto\x12\x13\x61vsoftware.planning\"\x92\x02\n\x16GoogleBenchmarkContext\x12\x0c\n\x04\x64\x61te\x18\x01 \x01(\t\x12\x10\n\x08num_cpus\x18\x02 \x01(\x05\x12\x13\n\x0bmhz_per_cpu\x18\x03 \x01(\x05\x12\x1b\n\x13\x63pu_scaling_enabled\x18\x04 \x01(\x08\x12\x41\n\x06\x63\x61\x63hes\x18\x05 \x03(\x0b\x32\x31.avsoftware.planning.GoogleBenchmarkContext.Cache\x12\x1a\n\x12library_build_type\x18\x06 \x01(\t\x1aG\n\x05\x43\x61\x63he\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\r\n\x05level\x18\x02 \x01(\x05\x12\x0c\n\x04size\x18\x03 \x01(\x03\x12\x13\n\x0bnum_sharing\x18\x04 \x01(\x05\"k\n\x0fGoogleBenchmark\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x12\n\niterations\x18\x02 \x01(\x05\x12\x11\n\treal_time\x18\x03 \x01(\x01\x12\x10\n\x08\x63pu_time\x18\x04 \x01(\x01\x12\x11\n\ttime_unit\x18\x05 \x01(\t\"\xa3\x01\n\x19GoogleBenchmarkTestResult\x12<\n\x07\x63ontext\x18\x01 \x01(\x0b\x32+.avsoftware.planning.GoogleBenchmarkContext\x12\x38\n\nbenchmarks\x18\x02 \x03(\x0b\x32$.avsoftware.planning.GoogleBenchmark\x12\x0e\n\x06target\x18\x03 \x01(\t\"!\n\x1bPlanningBenchmarkTestResult:\x02\x18\x01\x62\x06proto3')
)




_GOOGLEBENCHMARKCONTEXT_CACHE = _descriptor.Descriptor(
  name='Cache',
  full_name='avsoftware.planning.GoogleBenchmarkContext.Cache',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='avsoftware.planning.GoogleBenchmarkContext.Cache.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='level', full_name='avsoftware.planning.GoogleBenchmarkContext.Cache.level', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='size', full_name='avsoftware.planning.GoogleBenchmarkContext.Cache.size', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='num_sharing', full_name='avsoftware.planning.GoogleBenchmarkContext.Cache.num_sharing', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=270,
  serialized_end=341,
)

_GOOGLEBENCHMARKCONTEXT = _descriptor.Descriptor(
  name='GoogleBenchmarkContext',
  full_name='avsoftware.planning.GoogleBenchmarkContext',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='date', full_name='avsoftware.planning.GoogleBenchmarkContext.date', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='num_cpus', full_name='avsoftware.planning.GoogleBenchmarkContext.num_cpus', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mhz_per_cpu', full_name='avsoftware.planning.GoogleBenchmarkContext.mhz_per_cpu', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cpu_scaling_enabled', full_name='avsoftware.planning.GoogleBenchmarkContext.cpu_scaling_enabled', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='caches', full_name='avsoftware.planning.GoogleBenchmarkContext.caches', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='library_build_type', full_name='avsoftware.planning.GoogleBenchmarkContext.library_build_type', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_GOOGLEBENCHMARKCONTEXT_CACHE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=67,
  serialized_end=341,
)


_GOOGLEBENCHMARK = _descriptor.Descriptor(
  name='GoogleBenchmark',
  full_name='avsoftware.planning.GoogleBenchmark',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='avsoftware.planning.GoogleBenchmark.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='iterations', full_name='avsoftware.planning.GoogleBenchmark.iterations', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='real_time', full_name='avsoftware.planning.GoogleBenchmark.real_time', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cpu_time', full_name='avsoftware.planning.GoogleBenchmark.cpu_time', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='time_unit', full_name='avsoftware.planning.GoogleBenchmark.time_unit', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=343,
  serialized_end=450,
)


_GOOGLEBENCHMARKTESTRESULT = _descriptor.Descriptor(
  name='GoogleBenchmarkTestResult',
  full_name='avsoftware.planning.GoogleBenchmarkTestResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='context', full_name='avsoftware.planning.GoogleBenchmarkTestResult.context', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='benchmarks', full_name='avsoftware.planning.GoogleBenchmarkTestResult.benchmarks', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='target', full_name='avsoftware.planning.GoogleBenchmarkTestResult.target', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=453,
  serialized_end=616,
)


_PLANNINGBENCHMARKTESTRESULT = _descriptor.Descriptor(
  name='PlanningBenchmarkTestResult',
  full_name='avsoftware.planning.PlanningBenchmarkTestResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\030\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=618,
  serialized_end=651,
)

_GOOGLEBENCHMARKCONTEXT_CACHE.containing_type = _GOOGLEBENCHMARKCONTEXT
_GOOGLEBENCHMARKCONTEXT.fields_by_name['caches'].message_type = _GOOGLEBENCHMARKCONTEXT_CACHE
_GOOGLEBENCHMARKTESTRESULT.fields_by_name['context'].message_type = _GOOGLEBENCHMARKCONTEXT
_GOOGLEBENCHMARKTESTRESULT.fields_by_name['benchmarks'].message_type = _GOOGLEBENCHMARK
DESCRIPTOR.message_types_by_name['GoogleBenchmarkContext'] = _GOOGLEBENCHMARKCONTEXT
DESCRIPTOR.message_types_by_name['GoogleBenchmark'] = _GOOGLEBENCHMARK
DESCRIPTOR.message_types_by_name['GoogleBenchmarkTestResult'] = _GOOGLEBENCHMARKTESTRESULT
DESCRIPTOR.message_types_by_name['PlanningBenchmarkTestResult'] = _PLANNINGBENCHMARKTESTRESULT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

GoogleBenchmarkContext = _reflection.GeneratedProtocolMessageType('GoogleBenchmarkContext', (_message.Message,), dict(

  Cache = _reflection.GeneratedProtocolMessageType('Cache', (_message.Message,), dict(
    DESCRIPTOR = _GOOGLEBENCHMARKCONTEXT_CACHE,
    __module__ = 'src.planning.proto.google_benchmark_pb2'
    # @@protoc_insertion_point(class_scope:avsoftware.planning.GoogleBenchmarkContext.Cache)
    ))
  ,
  DESCRIPTOR = _GOOGLEBENCHMARKCONTEXT,
  __module__ = 'src.planning.proto.google_benchmark_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.planning.GoogleBenchmarkContext)
  ))
_sym_db.RegisterMessage(GoogleBenchmarkContext)
_sym_db.RegisterMessage(GoogleBenchmarkContext.Cache)

GoogleBenchmark = _reflection.GeneratedProtocolMessageType('GoogleBenchmark', (_message.Message,), dict(
  DESCRIPTOR = _GOOGLEBENCHMARK,
  __module__ = 'src.planning.proto.google_benchmark_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.planning.GoogleBenchmark)
  ))
_sym_db.RegisterMessage(GoogleBenchmark)

GoogleBenchmarkTestResult = _reflection.GeneratedProtocolMessageType('GoogleBenchmarkTestResult', (_message.Message,), dict(
  DESCRIPTOR = _GOOGLEBENCHMARKTESTRESULT,
  __module__ = 'src.planning.proto.google_benchmark_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.planning.GoogleBenchmarkTestResult)
  ))
_sym_db.RegisterMessage(GoogleBenchmarkTestResult)

PlanningBenchmarkTestResult = _reflection.GeneratedProtocolMessageType('PlanningBenchmarkTestResult', (_message.Message,), dict(
  DESCRIPTOR = _PLANNINGBENCHMARKTESTRESULT,
  __module__ = 'src.planning.proto.google_benchmark_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.planning.PlanningBenchmarkTestResult)
  ))
_sym_db.RegisterMessage(PlanningBenchmarkTestResult)


_PLANNINGBENCHMARKTESTRESULT._options = None
# @@protoc_insertion_point(module_scope)
