# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/slam/metrics/proto/metrics.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='src/slam/metrics/proto/metrics.proto',
  package='avsoftware.slam',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n$src/slam/metrics/proto/metrics.proto\x12\x0f\x61vsoftware.slam\"[\n\x0bPercentiles\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0b\n\x03p50\x18\x02 \x01(\x01\x12\x0b\n\x03p90\x18\x03 \x01(\x01\x12\x0b\n\x03p95\x18\x04 \x01(\x01\x12\x0b\n\x03p99\x18\x05 \x01(\x01\x12\x0c\n\x04p100\x18\x06 \x01(\x01\"d\n\x0c\x44istribution\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04mean\x18\x02 \x01(\x01\x12\x1a\n\x12standard_deviation\x18\x03 \x01(\x01\x12\x1e\n\x16number_of_measurements\x18\x04 \x01(\x03\"y\n\x06Metric\x12\n\n\x02id\x18\x01 \x01(\t\x12.\n\x08p_values\x18\x02 \x03(\x0b\x32\x1c.avsoftware.slam.Percentiles\x12\x33\n\x0c\x64istribution\x18\x03 \x03(\x0b\x32\x1d.avsoftware.slam.Distribution\"\x96\x01\n\x13MetersPerLargeError\x12\x1e\n\x16meters_per_large_error\x18\x01 \x01(\x01\x12\x12\n\nnum_errors\x18\x02 \x01(\x03\x12,\n$total_distance_without_errors_meters\x18\x03 \x01(\x01\x12\x1d\n\x15total_distance_meters\x18\x04 \x01(\x01\"F\n\x05Input\x12(\n\x04type\x18\x01 \x01(\x0e\x32\x1a.avsoftware.slam.InputType\x12\x13\n\x0b\x63\x61libration\x18\x02 \x01(\t\"\'\n\x06Geomap\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x10\n\x08\x66ilename\x18\x02 \x01(\t\"\xc5\x02\n\x07Metrics\x12\x0f\n\x07git_sha\x18\x01 \x01(\t\x12\x14\n\x0cgit_sha_date\x18\x02 \x01(\t\x12%\n\x05input\x18\x03 \x01(\x0b\x32\x16.avsoftware.slam.Input\x12\'\n\x06geomap\x18\x04 \x01(\x0b\x32\x17.avsoftware.slam.Geomap\x12\x1b\n\x13time_to_localize_ms\x18\x05 \x01(\x03\x12\x1a\n\x12localization_ratio\x18\x06 \x01(\x02\x12(\n\x07metrics\x18\x07 \x03(\x0b\x32\x17.avsoftware.slam.Metric\x12\x44\n\x16meters_per_large_error\x18\x0b \x03(\x0b\x32$.avsoftware.slam.MetersPerLargeError\x12\x0c\n\x04\x61rgs\x18\x08 \x03(\t\x12\x0c\n\x04tags\x18\t \x03(\t*3\n\tInputType\x12\x0f\n\x0bSENSOR_DATA\x10\x00\x12\x15\n\x11ONLINE_TRAJECTORY\x10\x01\x62\x06proto3')
)

_INPUTTYPE = _descriptor.EnumDescriptor(
  name='InputType',
  full_name='avsoftware.slam.InputType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SENSOR_DATA', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ONLINE_TRAJECTORY', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=969,
  serialized_end=1020,
)
_sym_db.RegisterEnumDescriptor(_INPUTTYPE)

InputType = enum_type_wrapper.EnumTypeWrapper(_INPUTTYPE)
SENSOR_DATA = 0
ONLINE_TRAJECTORY = 1



_PERCENTILES = _descriptor.Descriptor(
  name='Percentiles',
  full_name='avsoftware.slam.Percentiles',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='avsoftware.slam.Percentiles.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='p50', full_name='avsoftware.slam.Percentiles.p50', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='p90', full_name='avsoftware.slam.Percentiles.p90', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='p95', full_name='avsoftware.slam.Percentiles.p95', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='p99', full_name='avsoftware.slam.Percentiles.p99', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='p100', full_name='avsoftware.slam.Percentiles.p100', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=57,
  serialized_end=148,
)


_DISTRIBUTION = _descriptor.Descriptor(
  name='Distribution',
  full_name='avsoftware.slam.Distribution',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='avsoftware.slam.Distribution.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mean', full_name='avsoftware.slam.Distribution.mean', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='standard_deviation', full_name='avsoftware.slam.Distribution.standard_deviation', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='number_of_measurements', full_name='avsoftware.slam.Distribution.number_of_measurements', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=150,
  serialized_end=250,
)


_METRIC = _descriptor.Descriptor(
  name='Metric',
  full_name='avsoftware.slam.Metric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='avsoftware.slam.Metric.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='p_values', full_name='avsoftware.slam.Metric.p_values', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='distribution', full_name='avsoftware.slam.Metric.distribution', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=252,
  serialized_end=373,
)


_METERSPERLARGEERROR = _descriptor.Descriptor(
  name='MetersPerLargeError',
  full_name='avsoftware.slam.MetersPerLargeError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='meters_per_large_error', full_name='avsoftware.slam.MetersPerLargeError.meters_per_large_error', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='num_errors', full_name='avsoftware.slam.MetersPerLargeError.num_errors', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='total_distance_without_errors_meters', full_name='avsoftware.slam.MetersPerLargeError.total_distance_without_errors_meters', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='total_distance_meters', full_name='avsoftware.slam.MetersPerLargeError.total_distance_meters', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=376,
  serialized_end=526,
)


_INPUT = _descriptor.Descriptor(
  name='Input',
  full_name='avsoftware.slam.Input',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='avsoftware.slam.Input.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='calibration', full_name='avsoftware.slam.Input.calibration', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=528,
  serialized_end=598,
)


_GEOMAP = _descriptor.Descriptor(
  name='Geomap',
  full_name='avsoftware.slam.Geomap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='url', full_name='avsoftware.slam.Geomap.url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='filename', full_name='avsoftware.slam.Geomap.filename', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=600,
  serialized_end=639,
)


_METRICS = _descriptor.Descriptor(
  name='Metrics',
  full_name='avsoftware.slam.Metrics',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='git_sha', full_name='avsoftware.slam.Metrics.git_sha', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='git_sha_date', full_name='avsoftware.slam.Metrics.git_sha_date', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='input', full_name='avsoftware.slam.Metrics.input', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='geomap', full_name='avsoftware.slam.Metrics.geomap', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='time_to_localize_ms', full_name='avsoftware.slam.Metrics.time_to_localize_ms', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='localization_ratio', full_name='avsoftware.slam.Metrics.localization_ratio', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='metrics', full_name='avsoftware.slam.Metrics.metrics', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='meters_per_large_error', full_name='avsoftware.slam.Metrics.meters_per_large_error', index=7,
      number=11, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='args', full_name='avsoftware.slam.Metrics.args', index=8,
      number=8, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tags', full_name='avsoftware.slam.Metrics.tags', index=9,
      number=9, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=642,
  serialized_end=967,
)

_METRIC.fields_by_name['p_values'].message_type = _PERCENTILES
_METRIC.fields_by_name['distribution'].message_type = _DISTRIBUTION
_INPUT.fields_by_name['type'].enum_type = _INPUTTYPE
_METRICS.fields_by_name['input'].message_type = _INPUT
_METRICS.fields_by_name['geomap'].message_type = _GEOMAP
_METRICS.fields_by_name['metrics'].message_type = _METRIC
_METRICS.fields_by_name['meters_per_large_error'].message_type = _METERSPERLARGEERROR
DESCRIPTOR.message_types_by_name['Percentiles'] = _PERCENTILES
DESCRIPTOR.message_types_by_name['Distribution'] = _DISTRIBUTION
DESCRIPTOR.message_types_by_name['Metric'] = _METRIC
DESCRIPTOR.message_types_by_name['MetersPerLargeError'] = _METERSPERLARGEERROR
DESCRIPTOR.message_types_by_name['Input'] = _INPUT
DESCRIPTOR.message_types_by_name['Geomap'] = _GEOMAP
DESCRIPTOR.message_types_by_name['Metrics'] = _METRICS
DESCRIPTOR.enum_types_by_name['InputType'] = _INPUTTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Percentiles = _reflection.GeneratedProtocolMessageType('Percentiles', (_message.Message,), dict(
  DESCRIPTOR = _PERCENTILES,
  __module__ = 'src.slam.metrics.proto.metrics_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.slam.Percentiles)
  ))
_sym_db.RegisterMessage(Percentiles)

Distribution = _reflection.GeneratedProtocolMessageType('Distribution', (_message.Message,), dict(
  DESCRIPTOR = _DISTRIBUTION,
  __module__ = 'src.slam.metrics.proto.metrics_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.slam.Distribution)
  ))
_sym_db.RegisterMessage(Distribution)

Metric = _reflection.GeneratedProtocolMessageType('Metric', (_message.Message,), dict(
  DESCRIPTOR = _METRIC,
  __module__ = 'src.slam.metrics.proto.metrics_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.slam.Metric)
  ))
_sym_db.RegisterMessage(Metric)

MetersPerLargeError = _reflection.GeneratedProtocolMessageType('MetersPerLargeError', (_message.Message,), dict(
  DESCRIPTOR = _METERSPERLARGEERROR,
  __module__ = 'src.slam.metrics.proto.metrics_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.slam.MetersPerLargeError)
  ))
_sym_db.RegisterMessage(MetersPerLargeError)

Input = _reflection.GeneratedProtocolMessageType('Input', (_message.Message,), dict(
  DESCRIPTOR = _INPUT,
  __module__ = 'src.slam.metrics.proto.metrics_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.slam.Input)
  ))
_sym_db.RegisterMessage(Input)

Geomap = _reflection.GeneratedProtocolMessageType('Geomap', (_message.Message,), dict(
  DESCRIPTOR = _GEOMAP,
  __module__ = 'src.slam.metrics.proto.metrics_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.slam.Geomap)
  ))
_sym_db.RegisterMessage(Geomap)

Metrics = _reflection.GeneratedProtocolMessageType('Metrics', (_message.Message,), dict(
  DESCRIPTOR = _METRICS,
  __module__ = 'src.slam.metrics.proto.metrics_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.slam.Metrics)
  ))
_sym_db.RegisterMessage(Metrics)


# @@protoc_insertion_point(module_scope)
