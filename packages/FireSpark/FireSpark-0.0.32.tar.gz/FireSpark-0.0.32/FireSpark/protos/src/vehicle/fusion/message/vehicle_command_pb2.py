# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/vehicle/fusion/message/vehicle_command.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from FireSpark.protos.src.avs.messages import lyft_car_time_pb2 as src_dot_avs_dot_messages_dot_lyft__car__time__pb2
from FireSpark.protos.src.avs.messages import lyft_car_time_with_source_pb2 as src_dot_avs_dot_messages_dot_lyft__car__time__with__source__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='src/vehicle/fusion/message/vehicle_command.proto',
  package='avsoftware',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n0src/vehicle/fusion/message/vehicle_command.proto\x12\navsoftware\x1a$src/avs/messages/lyft_car_time.proto\x1a\x30src/avs/messages/lyft_car_time_with_source.proto\"\xe5\x02\n\x0eVehicleCommand\x12/\n\x08steering\x18\x01 \x01(\x0b\x32\x1b.avsoftware.SteeringCommandH\x00\x12)\n\x05\x62rake\x18\x02 \x01(\x0b\x32\x18.avsoftware.BrakeCommandH\x00\x12/\n\x08throttle\x18\x03 \x01(\x0b\x32\x1b.avsoftware.ThrottleCommandH\x00\x12\x34\n\x0bturn_signal\x18\x04 \x01(\x0b\x32\x1d.avsoftware.TurnSignalCommandH\x00\x12:\n\x14source_lyft_car_time\x18\xe8\x07 \x01(\x0b\x32\x17.avsoftware.LyftCarTimeB\x02\x18\x01\x12G\n\x1blyft_car_times_with_sources\x18\xe9\x07 \x03(\x0b\x32!.avsoftware.LyftCarTimeWithSourceB\x0b\n\tsubsystem\"Z\n\x0fSteeringCommand\x12 \n\x18steering_wheel_angle_rad\x18\x01 \x01(\x02\x12%\n\x1dsteering_wheel_velocity_radps\x18\x02 \x01(\x02\"\x1d\n\x0cPedalCommand\x12\r\n\x05ratio\x18\x01 \x01(\x02\"7\n\x0c\x42rakeCommand\x12\'\n\x05pedal\x18\x01 \x01(\x0b\x32\x18.avsoftware.PedalCommand\":\n\x0fThrottleCommand\x12\'\n\x05pedal\x18\x01 \x01(\x0b\x32\x18.avsoftware.PedalCommand\";\n\x11TurnSignalCommand\x12&\n\x06signal\x18\x01 \x01(\x0e\x32\x16.avsoftware.TurnSignal*R\n\nTurnSignal\x12\x17\n\x13TURN_SIGNAL_NOT_SET\x10\x00\x12\x14\n\x10TURN_SIGNAL_LEFT\x10\x01\x12\x15\n\x11TURN_SIGNAL_RIGHT\x10\x02\x62\x06proto3')
  ,
  dependencies=[src_dot_avs_dot_messages_dot_lyft__car__time__pb2.DESCRIPTOR,src_dot_avs_dot_messages_dot_lyft__car__time__with__source__pb2.DESCRIPTOR,])

_TURNSIGNAL = _descriptor.EnumDescriptor(
  name='TurnSignal',
  full_name='avsoftware.TurnSignal',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TURN_SIGNAL_NOT_SET', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TURN_SIGNAL_LEFT', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TURN_SIGNAL_RIGHT', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=813,
  serialized_end=895,
)
_sym_db.RegisterEnumDescriptor(_TURNSIGNAL)

TurnSignal = enum_type_wrapper.EnumTypeWrapper(_TURNSIGNAL)
TURN_SIGNAL_NOT_SET = 0
TURN_SIGNAL_LEFT = 1
TURN_SIGNAL_RIGHT = 2



_VEHICLECOMMAND = _descriptor.Descriptor(
  name='VehicleCommand',
  full_name='avsoftware.VehicleCommand',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='steering', full_name='avsoftware.VehicleCommand.steering', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='brake', full_name='avsoftware.VehicleCommand.brake', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='throttle', full_name='avsoftware.VehicleCommand.throttle', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='turn_signal', full_name='avsoftware.VehicleCommand.turn_signal', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='source_lyft_car_time', full_name='avsoftware.VehicleCommand.source_lyft_car_time', index=4,
      number=1000, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\030\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='lyft_car_times_with_sources', full_name='avsoftware.VehicleCommand.lyft_car_times_with_sources', index=5,
      number=1001, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='subsystem', full_name='avsoftware.VehicleCommand.subsystem',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=153,
  serialized_end=510,
)


_STEERINGCOMMAND = _descriptor.Descriptor(
  name='SteeringCommand',
  full_name='avsoftware.SteeringCommand',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='steering_wheel_angle_rad', full_name='avsoftware.SteeringCommand.steering_wheel_angle_rad', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='steering_wheel_velocity_radps', full_name='avsoftware.SteeringCommand.steering_wheel_velocity_radps', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=512,
  serialized_end=602,
)


_PEDALCOMMAND = _descriptor.Descriptor(
  name='PedalCommand',
  full_name='avsoftware.PedalCommand',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ratio', full_name='avsoftware.PedalCommand.ratio', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=604,
  serialized_end=633,
)


_BRAKECOMMAND = _descriptor.Descriptor(
  name='BrakeCommand',
  full_name='avsoftware.BrakeCommand',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pedal', full_name='avsoftware.BrakeCommand.pedal', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=635,
  serialized_end=690,
)


_THROTTLECOMMAND = _descriptor.Descriptor(
  name='ThrottleCommand',
  full_name='avsoftware.ThrottleCommand',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pedal', full_name='avsoftware.ThrottleCommand.pedal', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=692,
  serialized_end=750,
)


_TURNSIGNALCOMMAND = _descriptor.Descriptor(
  name='TurnSignalCommand',
  full_name='avsoftware.TurnSignalCommand',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='signal', full_name='avsoftware.TurnSignalCommand.signal', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=752,
  serialized_end=811,
)

_VEHICLECOMMAND.fields_by_name['steering'].message_type = _STEERINGCOMMAND
_VEHICLECOMMAND.fields_by_name['brake'].message_type = _BRAKECOMMAND
_VEHICLECOMMAND.fields_by_name['throttle'].message_type = _THROTTLECOMMAND
_VEHICLECOMMAND.fields_by_name['turn_signal'].message_type = _TURNSIGNALCOMMAND
_VEHICLECOMMAND.fields_by_name['source_lyft_car_time'].message_type = src_dot_avs_dot_messages_dot_lyft__car__time__pb2._LYFTCARTIME
_VEHICLECOMMAND.fields_by_name['lyft_car_times_with_sources'].message_type = src_dot_avs_dot_messages_dot_lyft__car__time__with__source__pb2._LYFTCARTIMEWITHSOURCE
_VEHICLECOMMAND.oneofs_by_name['subsystem'].fields.append(
  _VEHICLECOMMAND.fields_by_name['steering'])
_VEHICLECOMMAND.fields_by_name['steering'].containing_oneof = _VEHICLECOMMAND.oneofs_by_name['subsystem']
_VEHICLECOMMAND.oneofs_by_name['subsystem'].fields.append(
  _VEHICLECOMMAND.fields_by_name['brake'])
_VEHICLECOMMAND.fields_by_name['brake'].containing_oneof = _VEHICLECOMMAND.oneofs_by_name['subsystem']
_VEHICLECOMMAND.oneofs_by_name['subsystem'].fields.append(
  _VEHICLECOMMAND.fields_by_name['throttle'])
_VEHICLECOMMAND.fields_by_name['throttle'].containing_oneof = _VEHICLECOMMAND.oneofs_by_name['subsystem']
_VEHICLECOMMAND.oneofs_by_name['subsystem'].fields.append(
  _VEHICLECOMMAND.fields_by_name['turn_signal'])
_VEHICLECOMMAND.fields_by_name['turn_signal'].containing_oneof = _VEHICLECOMMAND.oneofs_by_name['subsystem']
_BRAKECOMMAND.fields_by_name['pedal'].message_type = _PEDALCOMMAND
_THROTTLECOMMAND.fields_by_name['pedal'].message_type = _PEDALCOMMAND
_TURNSIGNALCOMMAND.fields_by_name['signal'].enum_type = _TURNSIGNAL
DESCRIPTOR.message_types_by_name['VehicleCommand'] = _VEHICLECOMMAND
DESCRIPTOR.message_types_by_name['SteeringCommand'] = _STEERINGCOMMAND
DESCRIPTOR.message_types_by_name['PedalCommand'] = _PEDALCOMMAND
DESCRIPTOR.message_types_by_name['BrakeCommand'] = _BRAKECOMMAND
DESCRIPTOR.message_types_by_name['ThrottleCommand'] = _THROTTLECOMMAND
DESCRIPTOR.message_types_by_name['TurnSignalCommand'] = _TURNSIGNALCOMMAND
DESCRIPTOR.enum_types_by_name['TurnSignal'] = _TURNSIGNAL
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

VehicleCommand = _reflection.GeneratedProtocolMessageType('VehicleCommand', (_message.Message,), dict(
  DESCRIPTOR = _VEHICLECOMMAND,
  __module__ = 'src.vehicle.fusion.message.vehicle_command_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.VehicleCommand)
  ))
_sym_db.RegisterMessage(VehicleCommand)

SteeringCommand = _reflection.GeneratedProtocolMessageType('SteeringCommand', (_message.Message,), dict(
  DESCRIPTOR = _STEERINGCOMMAND,
  __module__ = 'src.vehicle.fusion.message.vehicle_command_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.SteeringCommand)
  ))
_sym_db.RegisterMessage(SteeringCommand)

PedalCommand = _reflection.GeneratedProtocolMessageType('PedalCommand', (_message.Message,), dict(
  DESCRIPTOR = _PEDALCOMMAND,
  __module__ = 'src.vehicle.fusion.message.vehicle_command_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.PedalCommand)
  ))
_sym_db.RegisterMessage(PedalCommand)

BrakeCommand = _reflection.GeneratedProtocolMessageType('BrakeCommand', (_message.Message,), dict(
  DESCRIPTOR = _BRAKECOMMAND,
  __module__ = 'src.vehicle.fusion.message.vehicle_command_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.BrakeCommand)
  ))
_sym_db.RegisterMessage(BrakeCommand)

ThrottleCommand = _reflection.GeneratedProtocolMessageType('ThrottleCommand', (_message.Message,), dict(
  DESCRIPTOR = _THROTTLECOMMAND,
  __module__ = 'src.vehicle.fusion.message.vehicle_command_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.ThrottleCommand)
  ))
_sym_db.RegisterMessage(ThrottleCommand)

TurnSignalCommand = _reflection.GeneratedProtocolMessageType('TurnSignalCommand', (_message.Message,), dict(
  DESCRIPTOR = _TURNSIGNALCOMMAND,
  __module__ = 'src.vehicle.fusion.message.vehicle_command_pb2'
  # @@protoc_insertion_point(class_scope:avsoftware.TurnSignalCommand)
  ))
_sym_db.RegisterMessage(TurnSignalCommand)


_VEHICLECOMMAND.fields_by_name['source_lyft_car_time']._options = None
# @@protoc_insertion_point(module_scope)
