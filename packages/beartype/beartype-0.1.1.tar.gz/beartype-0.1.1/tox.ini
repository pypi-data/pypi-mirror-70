# --------------------( LICENSE                           )--------------------
# Copyright (c) 2014-2020 Cecil Curry.
# See "LICENSE" for further details.
#
# --------------------( SYNOPSIS                          )--------------------
# Project-wide tox configuration.
#
# tox is a high-level Python-specific testing utility wrapping comparatively
# lower-level Python-specific testing frameworks (e.g., py.test, unittest2).
# Whereas the latter only exercise this project's codebase from the current
# working directory (CWD) without installing this project and hence exercising
# this project's installation, tox exercises both.
#
# Specifically, tox iteratively:
#
# 1. Creates a source-based tarball distribution of this project (e.g., via
#    "python setup.py sdist").
# 2. Installs this tarball *AND* a system-agnostic Python interpreter into one
#    isolated virtual environment for each testing configuration.
# 3. Tests this installation with the specified testing framework.
#
# --------------------( VARIABLES                         )--------------------
# tox dynamically substitutes "{"- and "}"-delimited variable names with the
# strings to which those variables expand. Supported variable names include:
#
# * "{envtmpdir}", the absolute dirname of a temporary directory specific to
#   the current virtual environment to which this project has been installed.
# * "{posargs}", the whitespace-delimited list of all command-line arguments
#   passed to the current invocation of the "tox" command.
# * "{toxinidir}", the absolute dirname of the directory containing this file
#   (e.g., the project root).

# ....................{ TOX                               }....................
# Metadata specific to tox itself.
[tox]

#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# WARNING: Changes to this setting *MUST* be manually synchronized with:
# * The "[gh-actions]" subsection below.
# * The ".github/workflows/pythonpackage.yml" .
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Test matrix defined as a bash-interpolated string, where tox implicitly
# expands "py" to "python" and delimits the subsequent two digits with a dot to
# associate each resulting test configuration with the basename of an external
# command running an externally installed Python interpreter.
#
# For example, setting "envlist = py27,py38" produces a test matrix exercising
# the externally installed "python2.7" and "python3.8" commands. See also:
#     https://tox.readthedocs.io/en/latest/config.html#generating-environments-conditional-settings
envlist = py3{5,6,7,8},pypy3

#FIXME: Override this from within CI configurations by passing the
#"--skip-missing-interpreters=false" when running the "tox" command,
#preventing CI runs from erroneously returning success on missing interpreters.

# Ignore Python interpreters *NOT* externally installed on the current system.
# By default, 
skip_missing_interpreters = true

# ....................{ LIB ~ tox-gh-actions              }....................
# Metadata specific to the third-party "tox-gh-actions" package automating
# integration of "tox" with GitHub Actions (i.e., GitHub-hosted continuous
# integration (CI) services).
[gh-actions]

#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# WARNING: Changes to this setting *MUST* be manually synchronized with:
# * The "[tox]" subsection above.
# * The ".github/workflows/pythonpackage.yml" .
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
python =
    3.5: py35
    3.6: py36
    3.7: py37
    3.8: py38
    pypy3: pypy3

# ....................{ LIB ~ pytest                      }....................
# Metadata specific to the third-party "pytest" testing framework.
[testenv]

# Comma- and newline-delimited string listing the names of all "setup.py"-based 
# "extras" required as mandatory or optional dependencies when testing this
# project.
extras =
    # Install all optional runtime dependencies to maximize test coverage.
    all

    # Install all mandatory test-specific dependencies. This is the official
    # solution supported by "tox" developers for eliminating redundancy between
    # testing dependencies listed within this file and the top-level "setup.py"
    # script. While non-intuitive, we have little recourse. See also:
    #     https://stackoverflow.com/questions/39922650/tox-tests-use-setup-py-extra-require-as-tox-deps-source
    #     https://github.com/tox-dev/tox/issues/13#issuecomment-247788280
    test

# Absolute dirname of the directory to change to for the current test
# configuration, required to avoid accidental import collisions with
# uninstalled packages of the same name residing in "{toxinidir}". See also the
# following pertinent blog post, "Testing your python package as installed":
#     https://blog.ganssle.io/articles/2019/08/test-as-installed.html
changedir = {envtmpdir}

# Command running the current test configuration. For disambiguity, avoid
# running any Python-based commands *EXCEPT* those explicitly prefixed by
# "{envpython}": the absolute filename of the venv-specific Python interpreter.
commands =
    # Print metadata on the current versions of Python and pytest (in order).
    {envpython} --version
    {envpython} -m pytest --version

    # Run the entire pytest-based test suite under the following options:
    #
    # * "--maxfail=3", halting testing on the third failure.
    {envpython} -m pytest --maxfail=3 {posargs} {toxinidir}

# Human-readable string synopsizing the current test configuration.
description = Exercise "{toxinidir}" with "{basepython} -m pytest".
