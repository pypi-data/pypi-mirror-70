import subprocess
import xml.dom.minidom


class SVGRenderer:
    def initialize(self, width, height):
        self.doc = xml.dom.minidom.Document()
        self.root = self.doc.createElement('svg')
        self.root.setAttribute('version', '1.1')
        self.root.setAttribute('xmlns', 'http://www.w3.org/2000/svg')
        self.root.setAttribute('width', f'{width}px')
        self.root.setAttribute('height', f'{height}px')
        self.root.setAttribute('viewBox', f'0 0 {width} {height}')
        self.doc.appendChild(self.root)

    def rect(self, x, y, width, height):
        rect = self.doc.createElement('rect')
        rect.setAttribute('x', str(x))
        rect.setAttribute('y', str(y))
        rect.setAttribute('width', str(width))
        rect.setAttribute('height', str(height))
        rect.setAttribute('fill', '#000')
        self.root.appendChild(rect)

    def to_bytes(self):
        return self.doc.toprettyxml(indent='  ').encode('utf-8')


class SimpleTextSVGRenderer(SVGRenderer):
    def text(self, characters, x, y):
        text_el = self.doc.createElement('text')
        text_el.appendChild(self.doc.createTextNode(characters))
        text_el.setAttribute('x', str(x))
        text_el.setAttribute('y', str(y))
        text_el.setAttribute('style', 'font-size: 16pt; font-family: Arial;')
        self.root.appendChild(text_el)


class InkscapeSVGRenderer(SimpleTextSVGRenderer):
    """ Convert texts to paths so that the file renders the same everywhere """

    def to_bytes(self):
        plain_svg = super().to_bytes()
        proc = subprocess.run(
            ['inkscape', '--export-text-to-path', '-', '--export-plain-svg', '-'],
            input=plain_svg, stdout=subprocess.PIPE, check=True)
        return proc.stdout


# Digits as paths (so that they render the same on every machine, no matter the local fonts).
# Picked from our template. Looks to be just Arial or a variant thereof.
_DIGIT_PATH = {
    '1': 'M 7.9479169,0 H 6.0729168 v -11.947917 q -0.6770833,0.645833 -1.78125,1.291667 -1.09375,0.645833 -1.9687501,0.9687497 V -11.5 q 1.5729167,-0.739584 2.7500001,-1.791667 1.1770834,-1.052083 1.6666667,-2.041667 h 1.2083334 z',  # noqa
    '2': 'M 10.739584,-1.8020834 V 0 H 0.64583335 Q 0.62500002,-0.67708335 0.86458336,-1.3020834 1.25,-2.3333334 2.0937501,-3.3333334 q 0.8541667,-1.0000001 2.4583334,-2.3125001 2.4895834,-2.0416667 3.3645834,-3.2291668 0.875,-1.1979167 0.875,-2.2604167 0,-1.114583 -0.8020833,-1.875 -0.7916667,-0.770833 -2.0729168,-0.770833 -1.3541667,0 -2.1666667,0.8125 -0.8125,0.8125 -0.8229167,2.25 L 1,-10.916667 q 0.1979167,-2.15625 1.4895834,-3.28125 1.2916667,-1.135417 3.4687501,-1.135417 2.1979167,0 3.4791668,1.21875 1.2812497,1.21875 1.2812497,3.020834 0,0.916666 -0.375,1.8020831 -0.3749997,0.8854166 -1.2499997,1.8645833 -0.8645834,0.9791667 -2.8854168,2.6875001 -1.6875,1.4166667 -2.1666667,1.9270834 -0.4791667,0.5 -0.7916667,1.0104167 z',  # noqa
    '3': 'm 0.89583336,-4.0312501 1.87500004,-0.25 q 0.3229167,1.59375 1.09375,2.3020834 0.7812501,0.6979167 1.8958334,0.6979167 1.3229167,0 2.2291668,-0.9166667 0.9166667,-0.9166667 0.9166667,-2.2708334 0,-1.2916667 -0.8437501,-2.1250001 -0.84375,-0.84375 -2.1458334,-0.84375 -0.53125,0 -1.3229167,0.2083333 l 0.2083334,-1.6458334 q 0.1875,0.020833 0.3020833,0.020833 1.1979167,0 2.1562501,-0.625 0.9583333,-0.6250001 0.9583333,-1.9270831 0,-1.03125 -0.6979166,-1.708334 -0.6979167,-0.677083 -1.8020834,-0.677083 -1.0937501,0 -1.8229168,0.6875 -0.7291666,0.6875 -0.9375,2.0625 l -1.875,-0.333333 q 0.34375,-1.885417 1.5625,-2.916667 1.21875,-1.041667 3.0312501,-1.041667 1.25,0 2.3020834,0.541667 1.0520834,0.53125 1.6041667,1.458333 0.5625004,0.927084 0.5625004,1.96875 0,0.989584 -0.5312504,1.8020837 -0.53125,0.8125 -1.5729167,1.2916667 1.3541667,0.3125 2.1041671,1.3020834 0.75,0.9791667 0.75,2.4583334 0,2.0000001 -1.4583337,3.3958334 -1.4583334,1.38541674 -3.6875001,1.38541674 -2.0104168,0 -3.3437501,-1.1979167 Q 1.0833334,-2.1250001 0.89583336,-4.0312501 Z',  # noqa
    '4': 'M 6.8958335,0 V -3.6562501 H 0.27083334 V -5.3750002 L 7.2395835,-15.270834 h 1.5312501 v 9.8958338 h 2.0625004 v 1.7187501 H 8.7708336 V 0 Z m 0,-5.3750002 v -6.8854168 l -4.7812501,6.8854168 z',  # noqa
    '5': 'M 0.88541669,-4.0000001 2.8541668,-4.1666668 q 0.21875,1.4375001 1.0104166,2.1666667 0.8020834,0.7187501 1.9270834,0.7187501 1.3541667,0 2.2916668,-1.0208334 0.9375,-1.0208334 0.9375,-2.7083334 0,-1.6041667 -0.90625,-2.5312501 -0.8958334,-0.9270834 -2.3541668,-0.9270834 -0.90625,0 -1.6354167,0.4166667 -0.7291667,0.40625 -1.1458333,1.0625001 L 1.21875,-7.2187502 2.6979167,-15.0625 h 7.5937503 v 1.791666 H 4.1979168 l -0.8229167,4.1041671 q 1.375,-0.9583331 2.8854168,-0.9583331 2,0 3.3750001,1.3854164 1.375,1.3854167 1.375,3.5625001 0,2.0729167 -1.2083334,3.5833335 -1.46875,1.85416667 -4.0104168,1.85416667 -2.0833334,0 -3.4062501,-1.1666667 -1.3125,-1.16666667 -1.50000001,-3.09375007 z',  # noqa
    '6': 'm 10.614584,-11.53125 -1.8645837,0.145833 q -0.25,-1.104167 -0.7083334,-1.604167 -0.7604167,-0.802083 -1.875,-0.802083 -0.8958334,0 -1.5729168,0.5 -0.8854167,0.645833 -1.3958333,1.885417 -0.5104167,1.239583 -0.5312501,3.5312498 0.6770834,-1.0312501 1.6562501,-1.5312501 0.9791667,-0.5 2.0520834,-0.5 1.875,0 3.1875001,1.3854167 1.3229167,1.3750001 1.3229167,3.5625001 0,1.4375001 -0.625,2.6770834 -0.6145834,1.2291667 -1.6979167,1.88541675 -1.0833334,0.65625002 -2.4583335,0.65625002 -2.34375,0 -3.8229167,-1.71875007 -1.47916674,-1.7291667 -1.47916674,-5.6875001 0,-4.4270835 1.63541674,-6.4375005 1.4270833,-1.75 3.8437501,-1.75 1.8020834,0 2.9479167,1.010417 1.1562501,1.010417 1.3854171,2.791667 z m -7.6562506,6.5833332 q 0,0.96875 0.40625,1.8541667 0.4166667,0.8854167 1.1562501,1.3541667 0.7395833,0.4583334 1.5520833,0.4583334 1.1875001,0 2.0416668,-0.9583334 0.8541667,-0.9583334 0.8541667,-2.6041667 0,-1.5833334 -0.8437501,-2.4895835 -0.84375,-0.9166666 -2.125,-0.9166666 -1.2708334,0 -2.1562501,0.9166666 -0.8854167,0.9062501 -0.8854167,2.3854168 z',  # noqa
    '7': 'm 1.0104167,-13.270834 v -1.802083 h 9.8854173 v 1.458333 Q 9.4375003,-12.0625 8.0000002,-9.4895836 6.5729169,-6.9166669 5.7916668,-4.1979168 5.2291668,-2.2812501 5.0729168,0 H 3.1458334 q 0.03125,-1.8020834 0.7083334,-4.3541668 0.6770833,-2.5520834 1.9375,-4.9166668 1.2708334,-2.3750004 2.6979168,-4.0000004 z',  # noqa
    '8': 'm 3.7708334,-8.2812502 q -1.1666667,-0.4270834 -1.7291667,-1.2187501 -0.5625,-0.7916667 -0.5625,-1.8958337 0,-1.666666 1.1979167,-2.802083 1.1979167,-1.135417 3.1875001,-1.135417 2.0000001,0 3.2187501,1.166667 1.2187504,1.15625 1.2187504,2.822917 0,1.0625 -0.5625004,1.8541664 -0.5520833,0.78125 -1.6875,1.2083334 1.40625,0.4583333 2.1354164,1.4791667 0.739584,1.0208333 0.739584,2.4375 0,1.9583334 -1.385417,3.2916668 -1.3854168,1.33333337 -3.6458335,1.33333337 -2.2604167,0 -3.6458334,-1.33333337 -1.38541674,-1.34375 -1.38541674,-3.3437501 0,-1.4895834 0.75000004,-2.4895834 0.7604167,-1.0104167 2.15625,-1.375 z m -0.375,-3.1770838 q 0,1.083334 0.6979167,1.7708337 0.6979167,0.6875 1.8125001,0.6875 1.0833333,0 1.7708334,-0.6770833 0.6979166,-0.6875004 0.6979166,-1.6770834 0,-1.03125 -0.71875,-1.729167 -0.7083333,-0.708333 -1.7708334,-0.708333 -1.0729167,0 -1.78125,0.6875 -0.7083334,0.6875 -0.7083334,1.645833 z m -0.6041667,7.0520839 q 0,0.8020833 0.3750001,1.5520833 0.3854166,0.7500001 1.1354167,1.1666667 0.75,0.4062501 1.6145833,0.4062501 1.3437501,0 2.2187501,-0.8645834 0.875,-0.8645834 0.875,-2.1979167 0,-1.3541667 -0.90625,-2.2395834 -0.8958334,-0.8854167 -2.2500001,-0.8854167 -1.3229167,0 -2.1979167,0.875 -0.8645834,0.875 -0.8645834,2.1875001 z',  # noqa
    '9': 'm 1.1666667,-3.5312501 1.8020834,-0.1666667 q 0.2291667,1.2708334 0.875,1.8437501 0.6458334,0.5729167 1.6562501,0.5729167 0.8645833,0 1.5104167,-0.3958334 0.65625,-0.3958333 1.0729167,-1.0520833 0.4166667,-0.6666667 0.6979167,-1.7916668 0.28125,-1.125 0.28125,-2.2916667 0,-0.125 -0.010417,-0.375 -0.5625,0.8958333 -1.5416667,1.4583334 -0.96875,0.5520833 -2.1041667,0.5520833 -1.8958334,0 -3.2083335,-1.375 -1.31250001,-1.3750001 -1.31250001,-3.6250005 0,-2.322916 1.36458341,-3.739583 1.375,-1.416667 3.4375001,-1.416667 1.4895833,0 2.7187501,0.802084 1.2395833,0.802083 1.8749997,2.291666 0.645834,1.479167 0.645834,4.2916671 0,2.9270834 -0.635417,4.6666668 -0.6354167,1.7291667 -1.8958334,2.63541675 -1.2500001,0.90625002 -2.9375001,0.90625002 -1.7916667,0 -2.9270834,-0.98958336 Q 1.3958334,-1.7291667 1.1666667,-3.5312501 Z m 7.6770836,-6.7395839 q 0,-1.614583 -0.8645834,-2.5625 -0.8541667,-0.947916 -2.0625001,-0.947916 -1.25,0 -2.1770834,1.020833 -0.9270833,1.020833 -0.9270833,2.645833 0,1.4583337 0.875,2.3750004 0.8854167,0.9062501 2.1770834,0.9062501 1.3020834,0 2.1354167,-0.9062501 0.8437501,-0.9166667 0.8437501,-2.5312504 z',  # noqa
    '0': 'm 0.88541669,-7.5312502 q 0,-2.7083338 0.55208331,-4.3541668 0.5625001,-1.65625 1.6562501,-2.552083 1.1041667,-0.895834 2.7708334,-0.895834 1.2291667,0 2.1562501,0.5 0.9270833,0.489584 1.53125,1.427084 0.6041664,0.927083 0.9479164,2.270833 0.34375,1.3333334 0.34375,3.6041668 0,2.6875001 -0.552083,4.3437501 -0.5520834,1.6458334 -1.6562501,2.55208341 -1.09375,0.89583336 -2.7708334,0.89583336 -2.2083334,0 -3.4687501,-1.58333337 -1.51041671,-1.9062501 -1.51041671,-6.2083335 z m 1.92708341,0 q 0,3.7604168 0.875,5.0104168 0.8854167,1.2395834 2.1770834,1.2395834 1.2916667,0 2.1666667,-1.2500001 0.8854167,-1.25 0.8854167,-5.0000001 0,-3.7708338 -0.8854167,-5.0104168 -0.875,-1.239583 -2.1875,-1.239583 -1.2916667,0 -2.0625001,1.09375 -0.96875,1.395833 -0.96875,5.1562498 z',  # noqa
}
_DIGIT_WIDTH = {
    '1': 11,
    '2': 12,
    '3': 12,
    '4': 12,
    '5': 12,
    '6': 12,
    '7': 12,
    '8': 12,
    '9': 12,
    '0': 12,
}


class PathSVGRenderer(SVGRenderer):
    def text(self, characters, x, y):
        for char in characters:
            path_el = self.doc.createElement('path')
            path_el.setAttribute('d', _DIGIT_PATH[char])
            path_el.setAttribute('fill', '#000')
            path_el.setAttribute('transform', f'translate({x}, {y})')
            self.root.appendChild(path_el)

            x += _DIGIT_WIDTH[char]


def make_renderer(spec):
    if isinstance(spec, SVGRenderer):
        return spec  # Already a renderer, great
    klass = NAMED_RENDERERS.get(spec, spec)
    return klass()


NAMED_RENDERERS = {
    'auto': SimpleTextSVGRenderer,  # Subject to change
    'simple': SimpleTextSVGRenderer,
    'inkscape': InkscapeSVGRenderer,
    'path': PathSVGRenderer,
}
