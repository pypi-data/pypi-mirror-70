# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bosdyn/api/lease.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='bosdyn/api/lease.proto',
  package='bosdyn.api',
  syntax='proto3',
  serialized_pb=_b('\n\x16\x62osdyn/api/lease.proto\x12\nbosdyn.api\":\n\x05Lease\x12\x10\n\x08resource\x18\x01 \x01(\t\x12\r\n\x05\x65poch\x18\x02 \x01(\t\x12\x10\n\x08sequence\x18\x03 \x03(\r\"4\n\nLeaseOwner\x12\x13\n\x0b\x63lient_name\x18\x01 \x01(\t\x12\x11\n\tuser_name\x18\x02 \x01(\t\"\xdd\x02\n\x0eLeaseUseResult\x12\x31\n\x06status\x18\x01 \x01(\x0e\x32!.bosdyn.api.LeaseUseResult.Status\x12%\n\x05owner\x18\x02 \x01(\x0b\x32\x16.bosdyn.api.LeaseOwner\x12*\n\x0f\x61ttempted_lease\x18\x03 \x01(\x0b\x32\x11.bosdyn.api.Lease\x12)\n\x0eprevious_lease\x18\x04 \x01(\x0b\x32\x11.bosdyn.api.Lease\"\x99\x01\n\x06Status\x12\x12\n\x0eSTATUS_UNKNOWN\x10\x00\x12\r\n\tSTATUS_OK\x10\x01\x12\x18\n\x14STATUS_INVALID_LEASE\x10\x02\x12\x10\n\x0cSTATUS_OLDER\x10\x03\x12\x12\n\x0eSTATUS_REVOKED\x10\x04\x12\x14\n\x10STATUS_UNMANAGED\x10\x05\x12\x16\n\x12STATUS_WRONG_EPOCH\x10\x06\x42\x0c\x42\nLeaseProtob\x06proto3')
)



_LEASEUSERESULT_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='bosdyn.api.LeaseUseResult.Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='STATUS_UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STATUS_OK', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STATUS_INVALID_LEASE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STATUS_OLDER', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STATUS_REVOKED', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STATUS_UNMANAGED', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STATUS_WRONG_EPOCH', index=6, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=349,
  serialized_end=502,
)
_sym_db.RegisterEnumDescriptor(_LEASEUSERESULT_STATUS)


_LEASE = _descriptor.Descriptor(
  name='Lease',
  full_name='bosdyn.api.Lease',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='resource', full_name='bosdyn.api.Lease.resource', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='epoch', full_name='bosdyn.api.Lease.epoch', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sequence', full_name='bosdyn.api.Lease.sequence', index=2,
      number=3, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=38,
  serialized_end=96,
)


_LEASEOWNER = _descriptor.Descriptor(
  name='LeaseOwner',
  full_name='bosdyn.api.LeaseOwner',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='client_name', full_name='bosdyn.api.LeaseOwner.client_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='user_name', full_name='bosdyn.api.LeaseOwner.user_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=98,
  serialized_end=150,
)


_LEASEUSERESULT = _descriptor.Descriptor(
  name='LeaseUseResult',
  full_name='bosdyn.api.LeaseUseResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='bosdyn.api.LeaseUseResult.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='owner', full_name='bosdyn.api.LeaseUseResult.owner', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attempted_lease', full_name='bosdyn.api.LeaseUseResult.attempted_lease', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='previous_lease', full_name='bosdyn.api.LeaseUseResult.previous_lease', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LEASEUSERESULT_STATUS,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=153,
  serialized_end=502,
)

_LEASEUSERESULT.fields_by_name['status'].enum_type = _LEASEUSERESULT_STATUS
_LEASEUSERESULT.fields_by_name['owner'].message_type = _LEASEOWNER
_LEASEUSERESULT.fields_by_name['attempted_lease'].message_type = _LEASE
_LEASEUSERESULT.fields_by_name['previous_lease'].message_type = _LEASE
_LEASEUSERESULT_STATUS.containing_type = _LEASEUSERESULT
DESCRIPTOR.message_types_by_name['Lease'] = _LEASE
DESCRIPTOR.message_types_by_name['LeaseOwner'] = _LEASEOWNER
DESCRIPTOR.message_types_by_name['LeaseUseResult'] = _LEASEUSERESULT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Lease = _reflection.GeneratedProtocolMessageType('Lease', (_message.Message,), dict(
  DESCRIPTOR = _LEASE,
  __module__ = 'bosdyn.api.lease_pb2'
  # @@protoc_insertion_point(class_scope:bosdyn.api.Lease)
  ))
_sym_db.RegisterMessage(Lease)

LeaseOwner = _reflection.GeneratedProtocolMessageType('LeaseOwner', (_message.Message,), dict(
  DESCRIPTOR = _LEASEOWNER,
  __module__ = 'bosdyn.api.lease_pb2'
  # @@protoc_insertion_point(class_scope:bosdyn.api.LeaseOwner)
  ))
_sym_db.RegisterMessage(LeaseOwner)

LeaseUseResult = _reflection.GeneratedProtocolMessageType('LeaseUseResult', (_message.Message,), dict(
  DESCRIPTOR = _LEASEUSERESULT,
  __module__ = 'bosdyn.api.lease_pb2'
  # @@protoc_insertion_point(class_scope:bosdyn.api.LeaseUseResult)
  ))
_sym_db.RegisterMessage(LeaseUseResult)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('B\nLeaseProto'))
# @@protoc_insertion_point(module_scope)
