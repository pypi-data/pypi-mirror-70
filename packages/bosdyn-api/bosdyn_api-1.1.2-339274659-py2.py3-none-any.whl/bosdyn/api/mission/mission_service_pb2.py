# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bosdyn/api/mission/mission_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from bosdyn.api.mission import mission_pb2 as bosdyn_dot_api_dot_mission_dot_mission__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='bosdyn/api/mission/mission_service.proto',
  package='bosdyn.api.mission',
  syntax='proto3',
  serialized_pb=_b('\n(bosdyn/api/mission/mission_service.proto\x12\x12\x62osdyn.api.mission\x1a bosdyn/api/mission/mission.proto2\xd4\x01\n\x0eMissionService\x12W\n\x08GetState\x12#.bosdyn.api.mission.GetStateRequest\x1a$.bosdyn.api.mission.GetStateResponse\"\x00\x12i\n\x0e\x41nswerQuestion\x12).bosdyn.api.mission.AnswerQuestionRequest\x1a*.bosdyn.api.mission.AnswerQuestionResponse\"\x00\x42\x15\x42\x13MissionServiceProtob\x06proto3')
  ,
  dependencies=[bosdyn_dot_api_dot_mission_dot_mission__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('B\023MissionServiceProto'))

_MISSIONSERVICE = _descriptor.ServiceDescriptor(
  name='MissionService',
  full_name='bosdyn.api.mission.MissionService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=99,
  serialized_end=311,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetState',
    full_name='bosdyn.api.mission.MissionService.GetState',
    index=0,
    containing_service=None,
    input_type=bosdyn_dot_api_dot_mission_dot_mission__pb2._GETSTATEREQUEST,
    output_type=bosdyn_dot_api_dot_mission_dot_mission__pb2._GETSTATERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AnswerQuestion',
    full_name='bosdyn.api.mission.MissionService.AnswerQuestion',
    index=1,
    containing_service=None,
    input_type=bosdyn_dot_api_dot_mission_dot_mission__pb2._ANSWERQUESTIONREQUEST,
    output_type=bosdyn_dot_api_dot_mission_dot_mission__pb2._ANSWERQUESTIONRESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_MISSIONSERVICE)

DESCRIPTOR.services_by_name['MissionService'] = _MISSIONSERVICE

# @@protoc_insertion_point(module_scope)
