# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from bosdyn.api.mission import mission_pb2 as bosdyn_dot_api_dot_mission_dot_mission__pb2


class MissionServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetState = channel.unary_unary(
        '/bosdyn.api.mission.MissionService/GetState',
        request_serializer=bosdyn_dot_api_dot_mission_dot_mission__pb2.GetStateRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_mission_dot_mission__pb2.GetStateResponse.FromString,
        )
    self.AnswerQuestion = channel.unary_unary(
        '/bosdyn.api.mission.MissionService/AnswerQuestion',
        request_serializer=bosdyn_dot_api_dot_mission_dot_mission__pb2.AnswerQuestionRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_mission_dot_mission__pb2.AnswerQuestionResponse.FromString,
        )


class MissionServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetState(self, request, context):
    """Get the state of the mission.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AnswerQuestion(self, request, context):
    """Specify an answer to the question asked by the mission.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MissionServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetState': grpc.unary_unary_rpc_method_handler(
          servicer.GetState,
          request_deserializer=bosdyn_dot_api_dot_mission_dot_mission__pb2.GetStateRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_mission_dot_mission__pb2.GetStateResponse.SerializeToString,
      ),
      'AnswerQuestion': grpc.unary_unary_rpc_method_handler(
          servicer.AnswerQuestion,
          request_deserializer=bosdyn_dot_api_dot_mission_dot_mission__pb2.AnswerQuestionRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_mission_dot_mission__pb2.AnswerQuestionResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'bosdyn.api.mission.MissionService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
