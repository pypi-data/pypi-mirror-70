# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from bosdyn.api.spot_cam import factorysetup_pb2 as bosdyn_dot_api_dot_spot__cam_dot_factorysetup__pb2


class PtzConfigurationServiceStub(object):
  """These services contains RPCs meant for factory configuration, and should not
  be called by a normal client
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.PtzOffset = channel.unary_unary(
        '/bosdyn.api.spot_cam.PtzConfigurationService/PtzOffset',
        request_serializer=bosdyn_dot_api_dot_spot__cam_dot_factorysetup__pb2.PtzOffsetRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_spot__cam_dot_factorysetup__pb2.PtzOffsetResponse.FromString,
        )


class PtzConfigurationServiceServicer(object):
  """These services contains RPCs meant for factory configuration, and should not
  be called by a normal client
  """

  def PtzOffset(self, request, context):
    """Get the Ptz offset info.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PtzConfigurationServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'PtzOffset': grpc.unary_unary_rpc_method_handler(
          servicer.PtzOffset,
          request_deserializer=bosdyn_dot_api_dot_spot__cam_dot_factorysetup__pb2.PtzOffsetRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_spot__cam_dot_factorysetup__pb2.PtzOffsetResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'bosdyn.api.spot_cam.PtzConfigurationService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class CameraConfigurationServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CameraCalibrate = channel.unary_unary(
        '/bosdyn.api.spot_cam.CameraConfigurationService/CameraCalibrate',
        request_serializer=bosdyn_dot_api_dot_spot__cam_dot_factorysetup__pb2.CameraCalibrateRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_spot__cam_dot_factorysetup__pb2.CameraCalibrateResponse.FromString,
        )


class CameraConfigurationServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def CameraCalibrate(self, request, context):
    """Load a camera calibration on.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CameraConfigurationServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CameraCalibrate': grpc.unary_unary_rpc_method_handler(
          servicer.CameraCalibrate,
          request_deserializer=bosdyn_dot_api_dot_spot__cam_dot_factorysetup__pb2.CameraCalibrateRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_spot__cam_dot_factorysetup__pb2.CameraCalibrateResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'bosdyn.api.spot_cam.CameraConfigurationService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class FactoryResetServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Reset = channel.unary_unary(
        '/bosdyn.api.spot_cam.FactoryResetService/Reset',
        request_serializer=bosdyn_dot_api_dot_spot__cam_dot_factorysetup__pb2.ResetRequest.SerializeToString,
        response_deserializer=bosdyn_dot_api_dot_spot__cam_dot_factorysetup__pb2.ResetResponse.FromString,
        )


class FactoryResetServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Reset(self, request, context):
    """Clear all configuration data and return the device to a pre-configured factory state.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FactoryResetServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Reset': grpc.unary_unary_rpc_method_handler(
          servicer.Reset,
          request_deserializer=bosdyn_dot_api_dot_spot__cam_dot_factorysetup__pb2.ResetRequest.FromString,
          response_serializer=bosdyn_dot_api_dot_spot__cam_dot_factorysetup__pb2.ResetResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'bosdyn.api.spot_cam.FactoryResetService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
