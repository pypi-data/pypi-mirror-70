# coding: utf-8

"""
    CloudEndure API documentation

    Â© 2017 CloudEndure All rights reserved  # General Request authentication in CloudEndure's API is done using session cookies. A session cookie is returned upon successful execution of the \"login\" method. This value must then be provided within the request headers of all subsequent API requests.  ## Errors Some errors are not specifically written in every method since they may always return. Those are: 1) 401 (Unauthorized) - for unauthenticated requests. 2) 405 (Method Not Allowed) - for using a method that is not supported (POST instead of GET). 3) 403 (Forbidden) - request is authenticated, but the user is not allowed to access. 4) 422 (Unprocessable Entity) - for invalid input.  ## Formats All strings with date-time format are according to RFC3339.  All strings with \"duration\" format are according to ISO8601. For example, a full day duration can be specified with \"PNNNND\".   # noqa: E501

    OpenAPI spec version: 5
    Contact: https://bit.ly/2T54hSc
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class CloudEndureGcpMachinesFinanceData:
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "gcp_project_name": "str",
        "machine_name": "str",
        "number_of_cores": "int",
        "creation_time": "datetime",
        "is_preemptible": "bool",
        "has_gpu": "bool",
        "machine_id": "str",
        "ce_project_name": "str",
    }

    attribute_map = {
        "gcp_project_name": "gcp_project_name",
        "machine_name": "machine_name",
        "number_of_cores": "number_of_cores",
        "creation_time": "creation_time",
        "is_preemptible": "is_preemptible",
        "has_gpu": "has_gpu",
        "machine_id": "machine_id",
        "ce_project_name": "ce_project_name",
    }

    def __init__(
        self,
        gcp_project_name=None,
        machine_name=None,
        number_of_cores=None,
        creation_time=None,
        is_preemptible=None,
        has_gpu=None,
        machine_id=None,
        ce_project_name=None,
    ):  # noqa: E501
        """CloudEndureGcpMachinesFinanceData - a model defined in Swagger"""  # noqa: E501
        self._gcp_project_name = None
        self._machine_name = None
        self._number_of_cores = None
        self._creation_time = None
        self._is_preemptible = None
        self._has_gpu = None
        self._machine_id = None
        self._ce_project_name = None
        self.discriminator = None
        if gcp_project_name is not None:
            self.gcp_project_name = gcp_project_name
        if machine_name is not None:
            self.machine_name = machine_name
        if number_of_cores is not None:
            self.number_of_cores = number_of_cores
        if creation_time is not None:
            self.creation_time = creation_time
        if is_preemptible is not None:
            self.is_preemptible = is_preemptible
        if has_gpu is not None:
            self.has_gpu = has_gpu
        if machine_id is not None:
            self.machine_id = machine_id
        if ce_project_name is not None:
            self.ce_project_name = ce_project_name

    @property
    def gcp_project_name(self):
        """Gets the gcp_project_name of this CloudEndureGcpMachinesFinanceData.  # noqa: E501


        :return: The gcp_project_name of this CloudEndureGcpMachinesFinanceData.  # noqa: E501
        :rtype: str
        """
        return self._gcp_project_name

    @gcp_project_name.setter
    def gcp_project_name(self, gcp_project_name):
        """Sets the gcp_project_name of this CloudEndureGcpMachinesFinanceData.


        :param gcp_project_name: The gcp_project_name of this CloudEndureGcpMachinesFinanceData.  # noqa: E501
        :type: str
        """

        self._gcp_project_name = gcp_project_name

    @property
    def machine_name(self):
        """Gets the machine_name of this CloudEndureGcpMachinesFinanceData.  # noqa: E501


        :return: The machine_name of this CloudEndureGcpMachinesFinanceData.  # noqa: E501
        :rtype: str
        """
        return self._machine_name

    @machine_name.setter
    def machine_name(self, machine_name):
        """Sets the machine_name of this CloudEndureGcpMachinesFinanceData.


        :param machine_name: The machine_name of this CloudEndureGcpMachinesFinanceData.  # noqa: E501
        :type: str
        """

        self._machine_name = machine_name

    @property
    def number_of_cores(self):
        """Gets the number_of_cores of this CloudEndureGcpMachinesFinanceData.  # noqa: E501


        :return: The number_of_cores of this CloudEndureGcpMachinesFinanceData.  # noqa: E501
        :rtype: int
        """
        return self._number_of_cores

    @number_of_cores.setter
    def number_of_cores(self, number_of_cores):
        """Sets the number_of_cores of this CloudEndureGcpMachinesFinanceData.


        :param number_of_cores: The number_of_cores of this CloudEndureGcpMachinesFinanceData.  # noqa: E501
        :type: int
        """

        self._number_of_cores = number_of_cores

    @property
    def creation_time(self):
        """Gets the creation_time of this CloudEndureGcpMachinesFinanceData.  # noqa: E501


        :return: The creation_time of this CloudEndureGcpMachinesFinanceData.  # noqa: E501
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this CloudEndureGcpMachinesFinanceData.


        :param creation_time: The creation_time of this CloudEndureGcpMachinesFinanceData.  # noqa: E501
        :type: datetime
        """

        self._creation_time = creation_time

    @property
    def is_preemptible(self):
        """Gets the is_preemptible of this CloudEndureGcpMachinesFinanceData.  # noqa: E501


        :return: The is_preemptible of this CloudEndureGcpMachinesFinanceData.  # noqa: E501
        :rtype: bool
        """
        return self._is_preemptible

    @is_preemptible.setter
    def is_preemptible(self, is_preemptible):
        """Sets the is_preemptible of this CloudEndureGcpMachinesFinanceData.


        :param is_preemptible: The is_preemptible of this CloudEndureGcpMachinesFinanceData.  # noqa: E501
        :type: bool
        """

        self._is_preemptible = is_preemptible

    @property
    def has_gpu(self):
        """Gets the has_gpu of this CloudEndureGcpMachinesFinanceData.  # noqa: E501


        :return: The has_gpu of this CloudEndureGcpMachinesFinanceData.  # noqa: E501
        :rtype: bool
        """
        return self._has_gpu

    @has_gpu.setter
    def has_gpu(self, has_gpu):
        """Sets the has_gpu of this CloudEndureGcpMachinesFinanceData.


        :param has_gpu: The has_gpu of this CloudEndureGcpMachinesFinanceData.  # noqa: E501
        :type: bool
        """

        self._has_gpu = has_gpu

    @property
    def machine_id(self):
        """Gets the machine_id of this CloudEndureGcpMachinesFinanceData.  # noqa: E501


        :return: The machine_id of this CloudEndureGcpMachinesFinanceData.  # noqa: E501
        :rtype: str
        """
        return self._machine_id

    @machine_id.setter
    def machine_id(self, machine_id):
        """Sets the machine_id of this CloudEndureGcpMachinesFinanceData.


        :param machine_id: The machine_id of this CloudEndureGcpMachinesFinanceData.  # noqa: E501
        :type: str
        """

        self._machine_id = machine_id

    @property
    def ce_project_name(self):
        """Gets the ce_project_name of this CloudEndureGcpMachinesFinanceData.  # noqa: E501


        :return: The ce_project_name of this CloudEndureGcpMachinesFinanceData.  # noqa: E501
        :rtype: str
        """
        return self._ce_project_name

    @ce_project_name.setter
    def ce_project_name(self, ce_project_name):
        """Sets the ce_project_name of this CloudEndureGcpMachinesFinanceData.


        :param ce_project_name: The ce_project_name of this CloudEndureGcpMachinesFinanceData.  # noqa: E501
        :type: str
        """

        self._ce_project_name = ce_project_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict")
                        else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(CloudEndureGcpMachinesFinanceData, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CloudEndureGcpMachinesFinanceData):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
