<html metal:use-macro="context/main_template/macros/master"
      i18n:domain="collective.easyformplugin.poll"
>
  <body>
    
      <metal:title fill-slot="content-title">
        <h1 tal:content="structure context/aq_parent/aq_parent/title" />
      </metal:title>  
    
      <metal:block fill-slot="style_slot"
        tal:define="navroot context/@@plone_portal_state/navigation_root_url">
      <link rel="stylesheet" type="text/css"
          
          tal:attributes="href string:${navroot}/++plone++collective.easyformplugin.poll/Chart.min.css"
          />
      <script type="text/javascript" 
      tal:attributes="src string:${navroot}/++plone++collective.easyformplugin.poll/Chart.bundle.min.js"></script>
  
    <script type="text/javascript">
      //<![CDATA[

       function getRandomColor() {
          var letters = '0123456789ABCDEF'.split('');
          var color = '#';
          for (var i = 0; i < 6; i++ ) {
              color += letters[Math.floor(Math.random() * 16)];
          }
          return color;
      }

      function renderChart(ctxId, labels, data){
        var ctx = document.getElementById(ctxId).getContext("2d");
        var myChart = new Chart(ctx, {
          type: "pie",
          data: {
            labels: labels,
            datasets: [
              {
                data: data,
                backgroundColor: Array.from(data, x => getRandomColor()),
              },
            ],
          },
        });
        
      }
    </script>
  
  </metal:block>
  
    <metal:block fill-slot="content-core">
    <div class="container" tal:define="labels python:context.field.getColumnNamePair('pollFields');
                                       tally context/field/tallyFormInput;">
      
      <div class="row">
        <div class="col-md-4" tal:repeat="(key, data) python:tally.items()">
          <h3 align="center" tal:content="python:labels[key]" >Chart.js â€” Pie Chart Demo</h3>
          <div class="chart-holder">
            <canvas class="mychart" id="myChart${key}"></canvas>
          </div>
          <script>
            renderChart("myChart${key}", ${python:[str(i) for i in data.keys()]}, ${python:data.values()});
          </script>
        </div>
      </div>
    </div>
    </metal:block>
  </body>
</html>
