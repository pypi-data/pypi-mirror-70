[tox]
envlist = pep8,pylint,py35,py36,py37,py38
minversion = 2.0
skipsdist = True

[testenv]
usedevelop = True
install_command = pip install {opts} {packages}
deps=
      -c{env:UPPER_CONSTRAINTS_FILE:https://opendev.org/openstack/requirements/raw/branch/master/upper-constraints.txt}
      -r{toxinidir}/requirements.txt
      -r{toxinidir}/test-requirements.txt
commands=
    python setup.py test --slowest --testr-args='{posargs}'
passenv=
    DUMP_CONFIG_GRAPH

[testenv:bindep]
deps = bindep
commands = bindep test

[testenv:pep8]
basepython = python3
commands =
  flake8 {posargs}
  dib-lint

[testenv:pylint]
basepython = python3
commands = pylint --rcfile pylint.cfg diskimage_builder

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:func]
envdir = {toxworkdir}/venv
commands = {toxinidir}/tests/run_functests.sh {posargs}

[testenv:cover]
# NOTE: this is "setup.py test" (*not* testr) which is a pbr wrapper
# around testr.  This understands --coverage-package-name which we
# need due to underscore issues.
basepython = python3
commands = python setup.py test --coverage --coverage-package-name diskimage_builder --testr-args='{posargs}'

[testenv:docs]
deps= -r{toxinidir}/doc/requirements.txt
basepython = python3
whitelist_externals =
  rm
commands =
  rm -rf doc/build
  sphinx-build -W -b html -d doc/build/doctrees doc/source doc/build/html {posargs}

[testenv:releasenotes]
deps = {[testenv:docs]deps}
basepython = python3
commands = sphinx-build -a -W -E -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[flake8]
ignore = E125,E126,E127,H202,H803,W503,W504
exclude =  .venv,.git,.tox,dist,doc/build,doc/source,*lib/python*,*egg,build,conf.py

[testenv:lower-constraints]
basepython = python3
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt

# Run without upper-constraints on python3.5, as since Victoria that
# now is python3.6 only
[testenv:py35]
basepython = python3.5
deps = {[testenv:lower-constraints]deps}
