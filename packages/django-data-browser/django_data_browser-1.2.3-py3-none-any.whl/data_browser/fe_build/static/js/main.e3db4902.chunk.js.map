{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["controller","assert","require","getAPIforWindow","location","window","htmlUrl","origin","pathname","slice","search","Link","props","type","className","onClick","children","Filter","event","newFilters","this","query","filters","splice","index","handleQueryChange","lookup","target","value","follow","path","fields","length","fks","find","fk","name","f","filter","split","allFields","lookups","errorMessage","undefined","handleRemove","bind","onChange","handleLookupChange","getLookups","map","key","handleValueChange","React","Component","Filters","Toggle","state","isToggleOn","setState","handleClick","title","Fields","field","concrete","push","newFields","sort","ResultsHead","asc","dsc","null","ResultsBody","data","row","cell","Results","Page","id","model","href","csvLink","saveLink","App","url","abort","AbortController","fetch","signal","then","res","json","result","error","fetchData","onpopstate","e","queryChange","newQuery","history","pushState","getUrlForQuery","app","join","parts","getPartsForQuery","queryString","URLSearchParams","toString","adminUrl","media","basePath","baseUrl","getSaveUrl","Boolean","hostname","match","djangoData","JSON","parse","document","getElementById","textContent","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e3db4902.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nvar assert = require(\"assert\");\n\nlet controller;\n\nfunction getAPIforWindow() {\n  const location = window.location;\n  const htmlUrl = location.origin + location.pathname;\n  assert(htmlUrl.slice(-4) === \"html\");\n  const jsonUrl = htmlUrl.slice(0, -4) + \"json\";\n  return jsonUrl + location.search;\n}\n\nfunction Link(props) {\n  return (\n    <button\n      type=\"button\"\n      className={\"Link \" + (props.className || \"\")}\n      onClick={props.onClick}\n    >\n      {props.children}\n    </button>\n  );\n}\n\nclass Filter extends React.Component {\n  handleRemove(event) {\n    var newFilters = this.props.query.filters.slice();\n    newFilters.splice(this.props.index, 1);\n    this.props.handleQueryChange({ filters: newFilters });\n  }\n\n  handleLookupChange(event) {\n    var newFilters = this.props.query.filters.slice();\n    newFilters[this.props.index] = {\n      ...newFilters[this.props.index],\n      lookup: event.target.value,\n    };\n    this.props.handleQueryChange({ filters: newFilters });\n  }\n\n  handleValueChange(event) {\n    var newFilters = this.props.query.filters.slice();\n    newFilters[this.props.index] = {\n      ...newFilters[this.props.index],\n      value: event.target.value,\n    };\n    this.props.handleQueryChange({ filters: newFilters });\n  }\n\n  getLookups() {\n    const parts = this.props.filter.name.split(\"__\");\n    function follow(path, fields) {\n      if (path.length > 1) {\n        return follow(\n          path.slice(1),\n          fields.fks.find((fk) => fk.name === path[0])\n        );\n      } else {\n        return fields.fields.find((f) => f.name === path[0]);\n      }\n    }\n    return follow(parts, this.props.allFields).lookups;\n  }\n\n  render() {\n    return (\n      <p className={this.props.filter.errorMessage ? \"Error\" : undefined}>\n        <Link onClick={this.handleRemove.bind(this)}>âœ˜</Link> {this.props.filter.name}{\" \"}\n        <select\n          value={this.props.filter.lookup}\n          onChange={this.handleLookupChange.bind(this)}\n        >\n          {this.getLookups().map((lookup) => (\n            <option key={lookup} value={lookup}>\n              {lookup}\n            </option>\n          ))}\n        </select>{\" \"}\n        ={\" \"}\n        <input\n          type=\"text\"\n          name={`${this.props.filter.name}__${this.props.filter.lookup}`}\n          value={this.props.filter.value}\n          onChange={this.handleValueChange.bind(this)}\n        />\n        {this.props.filter.errorMessage}\n      </p>\n    );\n  }\n}\n\nfunction Filters(props) {\n  return (\n    <form className=\"Filters\">\n      {props.query.filters.map((filter, index) => (\n        <Filter\n          filter={filter}\n          allFields={props.allFields} // TODO cleanup after allFields is flattened\n          key={index}\n          index={index}\n          query={props.query}\n          handleQueryChange={props.handleQueryChange}\n        />\n      ))}\n    </form>\n  );\n}\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isToggleOn: false };\n  }\n\n  handleClick() {\n    this.setState((state) => ({\n      isToggleOn: !state.isToggleOn,\n    }));\n  }\n\n  render() {\n    if (this.state.isToggleOn) {\n      return (\n        <>\n          <Link className=\"ToggleLink\" onClick={this.handleClick.bind(this)}>\n            > {this.props.title}\n          </Link>\n          <div className=\"ToggleDiv\">{this.props.children}</div>\n        </>\n      );\n    } else {\n      return (\n        <Link className=\"ToggleLink\" onClick={this.handleClick.bind(this)}>\n          + {this.props.title}\n        </Link>\n      );\n    }\n  }\n}\n\nfunction Fields(props) {\n  return (\n    <ul className=\"FieldsList\">\n      {props.fields.map((field) => {\n        function handleAddFilter() {\n          var newFilters = props.query.filters.slice();\n          newFilters.push({\n            errorMessage: null,\n            name: field.name,\n            lookup: \"\",\n            value: \"\",\n          });\n          props.handleQueryChange({ filters: newFilters });\n        }\n\n        function handleAddField() {\n          var newFields = props.query.fields.slice();\n          newFields.push({\n            name: field.name,\n            sort: null,\n            concrete: false,\n          });\n          props.handleQueryChange({ fields: newFields });\n        }\n\n        return (\n          <li key={field.name}>\n            {field.concrete ? (\n              <Link onClick={handleAddFilter}>Y</Link>\n            ) : (\n              <>&nbsp;&nbsp;</>\n            )}{\" \"}\n            <Link onClick={handleAddField}>{field.name}</Link>\n          </li>\n        );\n      })}\n\n      {props.fks.map((fk) => (\n        <li key={fk.name}>\n          <Toggle title={fk.name}>\n            <Fields {...fk} />\n          </Toggle>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction ResultsHead(props) {\n  return (\n    <thead>\n      <tr>\n        {props.query.fields.map((field, index) => {\n          function handleRemove() {\n            var newFields = props.query.fields.slice();\n            newFields.splice(index, 1);\n            props.handleQueryChange({\n              fields: newFields,\n            });\n          }\n\n          function handleAddFilter() {\n            var newFilters = props.query.filters.slice();\n            newFilters.push({\n              errorMessage: null,\n              name: field.name,\n              lookup: \"\",\n              value: \"\",\n            });\n            props.handleQueryChange({\n              filters: newFilters,\n            });\n          }\n\n          function handleToggleSort() {\n            var newFields = props.query.fields.slice();\n            newFields[index] = {\n              ...field,\n              sort: { asc: \"dsc\", dsc: null, null: \"asc\" }[field.sort],\n            };\n            props.handleQueryChange({\n              fields: newFields,\n            });\n          }\n\n          return (\n            <th key={field.name}>\n              <Link onClick={handleRemove}>âœ˜</Link>{\" \"}\n              {field.concrete ? (\n                <>\n                  <Link onClick={handleAddFilter}>Y</Link>{\" \"}\n                  <Link onClick={handleToggleSort}>{field.name}</Link>{\" \"}\n                  {{ dsc: \"â†‘\", asc: \"â†“\", null: \"\" }[field.sort]}\n                </>\n              ) : (\n                field.name\n              )}\n            </th>\n          );\n        })}\n        {!props.query.fields.length && <th>No fields selected</th>}\n      </tr>\n    </thead>\n  );\n}\n\nfunction ResultsBody(props) {\n  return (\n    <tbody>\n      {props.data.map((row, index) => (\n        <tr key={index}>\n          {row.map((cell, index) => (\n            <td key={index}>{cell}</td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  );\n}\n\nfunction Results(props) {\n  return (\n    <table>\n      <ResultsHead query={props.query} handleQueryChange={props.handleQueryChange} />\n      <ResultsBody data={props.data} />\n    </table>\n  );\n}\n\nfunction Page(props) {\n  return (\n    <div id=\"body\">\n      <h1>{props.model}</h1>\n      <p>\n        <a href={props.csvLink}>Download as CSV</a>\n      </p>\n      <p>\n        <a href={props.saveLink}>Save View</a>\n      </p>\n\n      <Filters\n        query={props.query}\n        handleQueryChange={props.handleQueryChange}\n        allFields={props.allFields}\n      />\n\n      <p>Showing {props.data.length} results</p>\n      <div className=\"MainSpace\">\n        <div>\n          <Fields\n            query={props.query}\n            handleQueryChange={props.handleQueryChange}\n            {...props.allFields}\n          />\n        </div>\n        <Results\n          query={props.query}\n          handleQueryChange={props.handleQueryChange}\n          data={props.data}\n        />\n      </div>\n    </div>\n  );\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      query: { filters: [], fields: [] },\n    };\n  }\n\n  fetchData(url) {\n    if (controller) controller.abort();\n    controller = new AbortController();\n\n    fetch(url, { signal: controller.signal })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            data: result.data,\n            query: { fields: result.fields, filters: result.filters },\n          });\n        },\n        (error) => {\n          this.setState({\n            error,\n          });\n        }\n      );\n  }\n\n  componentDidMount() {\n    this.fetchData(getAPIforWindow());\n    window.onpopstate = (e) => {\n      this.fetchData(getAPIforWindow());\n    };\n  }\n\n  handleQueryChange(queryChange) {\n    const newQuery = { ...this.state.query, ...queryChange };\n    this.setState({ query: newQuery });\n    window.history.pushState(null, null, this.getUrlForQuery(newQuery, \"html\"));\n    this.fetchData(this.getUrlForQuery(newQuery, \"json\"));\n  }\n\n  getPartsForQuery(query) {\n    return {\n      app: this.props.app,\n      model: this.props.model,\n      fields: query.fields\n        .map((field) => ({ asc: \"+\", dsc: \"-\", null: \"\" }[field.sort] + field.name))\n        .join(\",\"),\n      query: query.filters\n        .map((filter) => `${filter.name}__${filter.lookup}=${filter.value}`)\n        .join(\"&\"),\n    };\n  }\n\n  getSaveUrl(query) {\n    const parts = this.getPartsForQuery(this.state.query);\n    const queryString = new URLSearchParams(parts).toString();\n    return `${window.location.origin}${this.props.adminUrl}?${queryString}`;\n  }\n\n  getUrlForQuery(query, media) {\n    const parts = this.getPartsForQuery(query);\n    const basePath = `${this.props.baseUrl}query/${parts.app}/${parts.model}`;\n    return `${window.location.origin}${basePath}/${parts.fields}.${media}?${parts.query}`;\n  }\n\n  render() {\n    return (\n      <Page\n        data={this.state.data}\n        query={this.state.query}\n        allFields={this.props.allFields}\n        handleQueryChange={this.handleQueryChange.bind(this)}\n        model={this.props.model}\n        saveLink={this.getSaveUrl()}\n        csvLink={this.getUrlForQuery(this.state.query, \"csv\")}\n      />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst djangoData = JSON.parse(document.getElementById(\"django-data\").textContent);\nReactDOM.render(\n    <React.StrictMode>\n        <App {...djangoData} />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}