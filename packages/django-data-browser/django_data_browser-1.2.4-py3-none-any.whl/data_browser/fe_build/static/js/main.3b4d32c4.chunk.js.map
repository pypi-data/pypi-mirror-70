{"version":3,"sources":["Components.js","App.js","serviceWorker.js","index.js"],"names":["Link","props","type","className","onClick","children","FilterValue","lookup","onChange","value","step","name","path","Filter","this","index","query","fieldType","config","getFieldType","removeFilter","addField","e","setFilterLookup","target","sortedLookups","map","lookupName","key","replace","setFilterValue","lookups","errorMessage","React","Component","Filters","filters","filter","Toggle","state","isToggleOn","setState","handleClick","bind","title","Fields","modelFields","allModelFields","model","sorted_fields","field_name","modelField","fields","concrete","addFilter","sorted_fks","fk_name","fk","fks","ResultsHead","field","getModelField","removeField","toggleSort","dsc","priority","asc","null","sort","length","ResultsCell","dangerouslySetInnerHTML","__html","String","ResultsBody","data","row","row_index","cell","col_index","Results","Page","controller","id","setModel","sortedModels","href","getUrlForMedia","getUrlForSave","assert","require","App","newFields","slice","push","newData","concat","handleQueryChange","splice","console","log","newSort","f","newFilters","defaultLookup","types","defaultValue","url","abort","AbortController","fetch","signal","then","res","json","result","error","location","window","htmlUrl","origin","pathname","jsonUrl","search","fetchData","onpopstate","queryChange","newState","history","pushState","getUrlForQuery","join","parts","getPartsForQuery","queryString","URLSearchParams","toString","adminUrl","media","basePath","baseUrl","split","getFkModel","Boolean","hostname","match","djangoData","JSON","parse","document","getElementById","textContent","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3b4d32c4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nfunction Link(props) {\n  return (\n    <button\n      type=\"button\"\n      className={\"Link \" + (props.className || \"\")}\n      onClick={props.onClick}\n    >\n      {props.children}\n    </button>\n  );\n}\n\nfunction FilterValue(props) {\n  if (props.lookup.type === \"boolean\")\n    return (\n      <select className=\"FilterValue\" onChange={props.onChange} value={props.value}>\n        <option value={true}>true</option>\n        <option value={false}>false</option>\n      </select>\n    );\n  else if (props.lookup.type === \"number\")\n    return (\n      <input\n        className=\"FilterValue\"\n        type=\"number\"\n        step=\"0\"\n        name={props.path}\n        value={props.value}\n        onChange={props.onChange}\n      />\n    );\n  else\n    return (\n      <input\n        className=\"FilterValue\"\n        type=\"text\"\n        name={props.path}\n        value={props.value}\n        onChange={props.onChange}\n      />\n    );\n}\n\nclass Filter extends React.Component {\n  render() {\n    const path = this.props.path;\n    const index = this.props.index;\n    const lookup = this.props.lookup;\n    const query = this.props.query;\n    const fieldType = this.props.config.getFieldType(path);\n    return (\n      <tr>\n        <td>\n          <Link onClick={() => query.removeFilter(index)}>✘</Link>{\" \"}\n          <Link onClick={() => query.addField(path)}>{path}</Link>{\" \"}\n        </td>\n        <td>\n          <select\n            className=\"Lookup\"\n            value={lookup}\n            onChange={(e) => query.setFilterLookup(index, e.target.value)}\n          >\n            {fieldType.sortedLookups.map((lookupName) => (\n              <option key={lookupName} value={lookupName}>\n                {lookupName.replace(\"_\", \" \")}\n              </option>\n            ))}\n          </select>\n        </td>\n        <td>=</td>\n        <td>\n          <FilterValue\n            name={`${path}__${lookup}`}\n            value={this.props.value}\n            onChange={(e) => query.setFilterValue(index, e.target.value)}\n            lookup={fieldType.lookups[lookup]}\n          />\n          {this.props.errorMessage}\n        </td>\n      </tr>\n    );\n  }\n}\n\nfunction Filters(props) {\n  return (\n    <form className=\"Filters\">\n      <table className=\"Flat\">\n        <tbody>\n          {props.filters.map((filter, index) => (\n            <Filter\n              config={props.config}\n              query={props.query}\n              key={index}\n              index={index}\n              {...filter}\n            />\n          ))}\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isToggleOn: false };\n  }\n\n  handleClick() {\n    this.setState((state) => ({\n      isToggleOn: !state.isToggleOn,\n    }));\n  }\n\n  render() {\n    if (this.state.isToggleOn)\n      return (\n        <>\n          <Link className=\"ToggleLink\" onClick={this.handleClick.bind(this)}>\n            > {this.props.title}\n          </Link>\n          <div className=\"ToggleDiv\">{this.props.children}</div>\n        </>\n      );\n    else\n      return (\n        <Link className=\"ToggleLink\" onClick={this.handleClick.bind(this)}>\n          + {this.props.title}\n        </Link>\n      );\n  }\n}\n\nfunction Fields(props) {\n  const modelFields = props.config.allModelFields[props.model];\n  return (\n    <ul className=\"FieldsList\">\n      {modelFields.sorted_fields.map((field_name) => {\n        const modelField = modelFields.fields[field_name];\n        return (\n          <li key={field_name}>\n            {modelField.concrete ? (\n              <Link onClick={() => props.query.addFilter(`${props.path}${field_name}`)}>\n                Y\n              </Link>\n            ) : (\n              <>&nbsp;&nbsp;</>\n            )}{\" \"}\n            <Link onClick={() => props.query.addField(`${props.path}${field_name}`)}>\n              {field_name}\n            </Link>\n          </li>\n        );\n      })}\n      {modelFields.sorted_fks.map((fk_name) => {\n        const fk = modelFields.fks[fk_name];\n        return (\n          <li key={fk_name}>\n            <Toggle title={fk_name}>\n              <Fields\n                config={props.config}\n                query={props.query}\n                model={fk.model}\n                path={`${props.path}${fk_name}__`}\n              />\n            </Toggle>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction ResultsHead(props) {\n  return (\n    <thead>\n      <tr>\n        {props.fields.map((field, index) => {\n          const modelField = props.config.getModelField(field.path);\n          return (\n            <th key={index}>\n              <Link onClick={() => props.query.removeField(index)}>✘</Link>{\" \"}\n              {modelField.concrete ? (\n                <>\n                  <Link onClick={() => props.query.addFilter(field.path)}>Y</Link>{\" \"}\n                  <Link onClick={() => props.query.toggleSort(index)}>\n                    {field.path}\n                  </Link>{\" \"}\n                  {\n                    { dsc: `↑${field.priority}`, asc: `↓${field.priority}`, null: \"\" }[\n                      field.sort\n                    ]\n                  }\n                </>\n              ) : (\n                field.path\n              )}\n            </th>\n          );\n        })}\n        {!props.fields.length && <th>No fields selected</th>}\n      </tr>\n    </thead>\n  );\n}\n\nfunction ResultsCell(props) {\n  if (props.modelField.type === \"html\")\n    return <div dangerouslySetInnerHTML={{ __html: props.value }} />;\n  else return String(props.value);\n}\n\nfunction ResultsBody(props) {\n  return (\n    <tbody>\n      {props.data.map((row, row_index) => (\n        <tr key={row_index}>\n          {row.map((cell, col_index) => (\n            <td key={col_index}>\n              <ResultsCell\n                value={cell}\n                modelField={props.config.getModelField(props.fields[col_index].path)}\n              />\n            </td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  );\n}\n\nfunction Results(props) {\n  return (\n    <table>\n      <ResultsHead config={props.config} query={props.query} fields={props.fields} />\n      <ResultsBody config={props.config} data={props.data} fields={props.fields} />\n    </table>\n  );\n}\n\nfunction Page(props) {\n  return (\n    <div id=\"body\">\n      <select\n        className=\"modelSelector\"\n        onChange={(e) => props.query.setModel(e.target.value)}\n        value={props.model}\n      >\n        {props.config.sortedModels.map((model) => (\n          <option key={model}>{model}</option>\n        ))}\n      </select>\n      <Filters config={props.config} query={props.query} filters={props.filters} />\n      <p>\n        Showing {props.data.length} results -{\" \"}\n        <a href={props.query.getUrlForMedia(\"csv\")}>Download as CSV</a> -{\" \"}\n        <a href={props.query.getUrlForMedia(\"json\")}>View as JSON</a> -{\" \"}\n        <a href={props.query.getUrlForSave()}>Save View</a>\n      </p>\n      <div className=\"MainSpace\">\n        <div>\n          <Fields\n            config={props.config}\n            query={props.query}\n            model={props.model}\n            path=\"\"\n          />\n        </div>\n        <Results\n          config={props.config}\n          query={props.query}\n          fields={props.fields}\n          data={props.data}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Page;\n","import React from \"react\";\nimport \"./App.css\";\nimport Page from \"./Components\";\nconst assert = require(\"assert\");\nlet controller;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      model: props.model,\n      fields: props.fields,\n      filters: props.filters,\n      data: [],\n    };\n  }\n\n  addField(path) {\n    const newFields = this.state.fields.slice();\n    newFields.push({ path: path, sort: null });\n    const newData = this.state.data.map((row) => row.concat([\"\"]));\n    this.handleQueryChange({ fields: newFields, data: newData });\n  }\n\n  removeField(index) {\n    const newFields = this.state.fields.slice();\n    newFields.splice(index, 1);\n    const newData = this.state.data.map((row) =>\n      row.slice(0, index).concat(row.slice(index + 1))\n    );\n    console.log(this.state.data);\n    console.log(newData);\n    this.handleQueryChange({ fields: newFields, data: newData });\n  }\n\n  toggleSort(index) {\n    const field = this.state.fields[index];\n    const newSort = { asc: \"dsc\", dsc: null, null: \"asc\" }[field.sort];\n    let newFields = this.state.fields.slice();\n\n    if (field.sort) {\n      // move any later sort fields forward\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority:\n          f.priority != null && f.priority > field.priority\n            ? f.priority - 1\n            : f.priority,\n      }));\n    }\n\n    if (newSort) {\n      // move all other fiels back and insert the updated one\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority: f.priority != null ? f.priority + 1 : f.priority,\n      }));\n      newFields[index] = { ...field, sort: newSort, priority: 0 };\n    } else {\n      // blank the sort on the updated field\n      newFields[index] = { ...field, sort: null, priority: null };\n    }\n\n    this.handleQueryChange({\n      fields: newFields,\n    });\n  }\n\n  addFilter(path) {\n    const fieldType = this.getFieldType(path);\n    const newFilters = this.state.filters.slice();\n    newFilters.push({\n      errorMessage: null,\n      path: path,\n      lookup: fieldType.defaultLookup,\n      value: this.props.types[fieldType.lookups[fieldType.defaultLookup].type]\n        .defaultValue,\n    });\n    this.handleQueryChange({ filters: newFilters });\n  }\n\n  removeFilter(index) {\n    const newFilters = this.state.filters.slice();\n    newFilters.splice(index, 1);\n    this.handleQueryChange({ filters: newFilters });\n  }\n\n  setFilterValue(index, value) {\n    const newFilters = this.state.filters.slice();\n    newFilters[index] = { ...newFilters[index], value: value };\n    this.handleQueryChange({ filters: newFilters });\n  }\n\n  setFilterLookup(index, lookup) {\n    const newFilters = this.state.filters.slice();\n    newFilters[index] = { ...newFilters[index], lookup: lookup };\n    this.handleQueryChange({ filters: newFilters });\n  }\n\n  setModel(model) {\n    this.handleQueryChange({\n      model: model,\n      fields: [],\n      filters: [],\n      data: [],\n    });\n  }\n\n  fetchData(url) {\n    if (controller) controller.abort();\n    controller = new AbortController();\n\n    fetch(url, { signal: controller.signal })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          this.setState(result);\n        },\n        (error) => {\n          this.setState({\n            error,\n          });\n        }\n      );\n  }\n\n  componentDidMount() {\n    const location = window.location;\n    const htmlUrl = location.origin + location.pathname;\n    assert(htmlUrl.slice(-4) === \"html\");\n    const jsonUrl = htmlUrl.slice(0, -4) + \"json\" + location.search;\n\n    this.fetchData(jsonUrl);\n    window.onpopstate = (e) => {\n      this.fetchData(jsonUrl);\n    };\n  }\n\n  handleQueryChange(queryChange) {\n    const newState = { ...this.state, ...queryChange };\n    this.setState(queryChange);\n    window.history.pushState(\n      null,\n      null,\n      this.getUrlForQuery(newState.model, newState.fields, newState.filters, \"html\")\n    );\n    this.fetchData(\n      this.getUrlForQuery(newState.model, newState.fields, newState.filters, \"json\")\n    );\n  }\n\n  getPartsForQuery(model, fields, filters) {\n    return {\n      model: model,\n      fields: fields\n        .map(\n          (f) =>\n            f.path + { asc: `+${f.priority}`, dsc: `-${f.priority}`, null: \"\" }[f.sort]\n        )\n        .join(\",\"),\n      query: filters.map((f) => `${f.path}__${f.lookup}=${f.value}`).join(\"&\"),\n    };\n  }\n\n  getUrlForSave() {\n    const parts = this.getPartsForQuery(\n      this.state.model,\n      this.state.fields,\n      this.state.filters\n    );\n    const queryString = new URLSearchParams(parts).toString();\n    return `${window.location.origin}${this.props.adminUrl}?${queryString}`;\n  }\n\n  getUrlForQuery(model, fields, filters, media) {\n    const parts = this.getPartsForQuery(model, fields, filters);\n    const basePath = `${this.props.baseUrl}query/${parts.model}`;\n    return `${window.location.origin}${basePath}/${parts.fields}.${media}?${parts.query}`;\n  }\n\n  getUrlForMedia(media) {\n    return this.getUrlForQuery(\n      this.state.model,\n      this.state.fields,\n      this.state.filters,\n      media\n    );\n  }\n\n  getModelField(path) {\n    const parts = path.split(\"__\");\n    const field = parts.slice(-1);\n    const model = this.getFkModel(parts.slice(0, -1).join(\"__\"));\n    return this.props.allModelFields[model].fields[field];\n  }\n\n  getFieldType(path) {\n    const modelField = this.getModelField(path);\n    const type = modelField.type;\n    return this.props.types[type];\n  }\n\n  getFkModel(path) {\n    let model = this.state.model;\n    if (path) {\n      for (const field of path.split(\"__\")) {\n        model = this.props.allModelFields[model].fks[field].model;\n      }\n    }\n    return model;\n  }\n\n  render() {\n    return (\n      <Page\n        config={{\n          types: this.props.types,\n          allModelFields: this.props.allModelFields,\n          sortedModels: this.props.sortedModels,\n          getFkModel: this.getFkModel.bind(this),\n          getFieldType: this.getFieldType.bind(this),\n          getModelField: this.getModelField.bind(this),\n        }}\n        query={{\n          addField: this.addField.bind(this),\n          removeField: this.removeField.bind(this),\n          toggleSort: this.toggleSort.bind(this),\n          addFilter: this.addFilter.bind(this),\n          removeFilter: this.removeFilter.bind(this),\n          setFilterValue: this.setFilterValue.bind(this),\n          setFilterLookup: this.setFilterLookup.bind(this),\n          setModel: this.setModel.bind(this),\n          getUrlForMedia: this.getUrlForMedia.bind(this),\n          getUrlForSave: this.getUrlForSave.bind(this),\n        }}\n        {...this.state}\n      />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst djangoData = JSON.parse(document.getElementById(\"django-data\").textContent);\nReactDOM.render(\n    <React.StrictMode>\n        <App {...djangoData} />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}