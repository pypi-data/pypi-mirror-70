{"version":3,"sources":["Components.js","Query.js","App.js","serviceWorker.js","index.js"],"names":["Link","props","type","className","onClick","children","FilterValue","lookup","onChange","value","step","name","path","Filter","this","index","query","fieldType","getFieldType","getField","removeFilter","addField","e","setFilterLookup","target","sortedLookups","map","lookupName","key","replace","setFilterValue","lookups","errorMessage","React","Component","Filters","filters","filter","Toggle","state","isToggleOn","setState","handleClick","bind","title","FkField","fk","modelFields","fks","fkName","AllFields","model","Field","modelField","fields","fieldName","concrete","addFilter","getModelFields","sortedFks","sortedFields","ResultsHead","field","removeField","toggleSort","dsc","priority","asc","null","sort","length","ResultsCell","dangerouslySetInnerHTML","__html","String","ResultsBody","results","row","rowIndex","cell","colIndex","Results","ModelSelector","setModel","sortedModels","Logo","version","QueryPage","saveUrl","getUrlForSave","id","href","getUrlForMedia","HomePage","savedViews","view","setQuery","description","getPartsForQuery","f","join","getUrlForQuery","baseUrl","media","parts","basePath","window","location","origin","controller","Query","config","split","slice","allModelFields","types","defaultLookup","defaultValue","newFields","push","newResults","concat","splice","newSort","newFilters","getDefaultLookValue","adminUrl","model_name","queryString","URLSearchParams","toString","App","initialState","url","abort","AbortController","fetch","signal","then","res","json","result","error","reqState","history","replaceState","fetchResults","onpopstate","queryChange","newState","pushState","handleQueryChange","Boolean","hostname","match","djangoData","JSON","parse","document","getElementById","textContent","sentryDsn","Sentry","dsn","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f1a95030.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nfunction Link(props) {\n  return (\n    <button\n      type=\"button\"\n      className={\"Link \" + (props.className || \"\")}\n      onClick={props.onClick}\n    >\n      {props.children}\n    </button>\n  );\n}\n\nfunction FilterValue(props) {\n  if (props.lookup.type === \"boolean\")\n    return (\n      <select\n        className=\"FilterValue\"\n        onChange={props.onChange}\n        value={props.value}\n      >\n        <option value={true}>true</option>\n        <option value={false}>false</option>\n      </select>\n    );\n  else if (props.lookup.type === \"number\")\n    return (\n      <input\n        className=\"FilterValue\"\n        type=\"number\"\n        step=\"0\"\n        name={props.path}\n        value={props.value}\n        onChange={props.onChange}\n      />\n    );\n  else\n    return (\n      <input\n        className=\"FilterValue\"\n        type=\"text\"\n        name={props.path}\n        value={props.value}\n        onChange={props.onChange}\n      />\n    );\n}\n\nclass Filter extends React.Component {\n  render() {\n    const path = this.props.path;\n    const index = this.props.index;\n    const lookup = this.props.lookup;\n    const query = this.props.query;\n    const fieldType = query.getFieldType(query.getField(path));\n    return (\n      <tr>\n        <td>\n          <Link onClick={() => query.removeFilter(index)}>✘</Link>{\" \"}\n          <Link onClick={() => query.addField(path)}>{path}</Link>{\" \"}\n        </td>\n        <td>\n          <select\n            className=\"Lookup\"\n            value={lookup}\n            onChange={(e) => query.setFilterLookup(index, e.target.value)}\n          >\n            {fieldType.sortedLookups.map((lookupName) => (\n              <option key={lookupName} value={lookupName}>\n                {lookupName.replace(\"_\", \" \")}\n              </option>\n            ))}\n          </select>\n        </td>\n        <td>=</td>\n        <td>\n          <FilterValue\n            name={`${path}__${lookup}`}\n            value={this.props.value}\n            onChange={(e) => query.setFilterValue(index, e.target.value)}\n            lookup={fieldType.lookups[lookup]}\n          />\n          {this.props.errorMessage}\n        </td>\n      </tr>\n    );\n  }\n}\n\nfunction Filters(props) {\n  return (\n    <form className=\"Filters\">\n      <table className=\"Flat\">\n        <tbody>\n          {props.filters.map((filter, index) => (\n            <Filter query={props.query} key={index} index={index} {...filter} />\n          ))}\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isToggleOn: false };\n  }\n\n  handleClick() {\n    this.setState((state) => ({\n      isToggleOn: !state.isToggleOn,\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <td>\n          <Link className=\"ToggleLink\" onClick={this.handleClick.bind(this)}>\n            {this.state.isToggleOn ? \">\" : \"+\"}\n          </Link>\n        </td>\n        <td>\n          {this.props.title}\n          {this.state.isToggleOn && this.props.children}\n        </td>\n      </>\n    );\n  }\n}\n\nfunction FkField(props) {\n  const fk = props.modelFields.fks[props.fkName];\n  return (\n    <tr key={props.fkName}>\n      <td></td>\n      <Toggle title={props.fkName}>\n        <AllFields\n          query={props.query}\n          model={fk.model}\n          path={`${props.path}__`}\n        />\n      </Toggle>\n    </tr>\n  );\n}\n\nfunction Field(props) {\n  const modelField = props.modelFields.fields[props.fieldName];\n  return (\n    <tr key={props.fieldName}>\n      <td>\n        {modelField.concrete && (\n          <Link onClick={() => props.query.addFilter(props.path)}>Y</Link>\n        )}\n      </td>\n      <td></td>\n      <td>\n        <Link onClick={() => props.query.addField(props.path)}>\n          {props.fieldName}\n        </Link>\n      </td>\n    </tr>\n  );\n}\n\nfunction AllFields(props) {\n  const modelFields = props.query.getModelFields(props.model);\n  return (\n    <table>\n      <tbody>\n        {modelFields.sortedFks.map((fkName) => (\n          <FkField\n            query={props.query}\n            path={`${props.path}${fkName}`}\n            fkName={fkName}\n            modelFields={modelFields}\n          />\n        ))}\n        {modelFields.sortedFields.map((fieldName) => (\n          <Field\n            query={props.query}\n            path={`${props.path}${fieldName}`}\n            fieldName={fieldName}\n            modelFields={modelFields}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nfunction ResultsHead(props) {\n  return (\n    <thead>\n      <tr>\n        {props.fields.map((field, index) => {\n          const modelField = props.query.getField(field.path);\n          return (\n            <th key={index}>\n              <Link onClick={() => props.query.removeField(index)}>✘</Link>{\" \"}\n              {modelField.concrete ? (\n                <>\n                  <Link onClick={() => props.query.addFilter(field.path)}>\n                    Y\n                  </Link>{\" \"}\n                  <Link onClick={() => props.query.toggleSort(index)}>\n                    {field.path}\n                  </Link>{\" \"}\n                  {\n                    {\n                      dsc: `↑${field.priority}`,\n                      asc: `↓${field.priority}`,\n                      null: \"\",\n                    }[field.sort]\n                  }\n                </>\n              ) : (\n                field.path\n              )}\n            </th>\n          );\n        })}\n        {!props.fields.length && <th>No fields selected</th>}\n      </tr>\n    </thead>\n  );\n}\n\nfunction ResultsCell(props) {\n  if (props.modelField.type === \"html\")\n    return <div dangerouslySetInnerHTML={{ __html: props.value }} />;\n  else return String(props.value);\n}\n\nfunction ResultsBody(props) {\n  return (\n    <tbody>\n      {props.results.map((row, rowIndex) => (\n        <tr key={rowIndex}>\n          {row.map((cell, colIndex) => (\n            <td key={colIndex}>\n              <ResultsCell\n                query={props.query}\n                value={cell}\n                modelField={props.query.getField(props.fields[colIndex].path)}\n              />\n            </td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  );\n}\n\nfunction Results(props) {\n  return (\n    <table>\n      <ResultsHead query={props.query} fields={props.fields} />\n      <ResultsBody\n        query={props.query}\n        results={props.results}\n        fields={props.fields}\n      />\n    </table>\n  );\n}\n\nfunction ModelSelector(props) {\n  return (\n    <select\n      className=\"ModelSelector\"\n      onChange={(e) => props.query.setModel(e.target.value)}\n      value={props.model}\n    >\n      {props.sortedModels.map((model) => (\n        <option key={model}>{model}</option>\n      ))}\n    </select>\n  );\n}\n\nfunction Logo(props) {\n  return (\n    <div className=\"Logo\" onClick={() => props.query.setModel(\"\")}>\n      <span>DDB</span>\n      <span className=\"Version\">v{props.version}</span>\n    </div>\n  );\n}\n\nfunction QueryPage(props) {\n  const saveUrl = props.query.getUrlForSave();\n  return (\n    <div id=\"body\">\n      <Logo query={props.query} version={props.version} />\n      <ModelSelector\n        query={props.query}\n        sortedModels={props.sortedModels}\n        model={props.model}\n      />\n      <Filters query={props.query} filters={props.filters} />\n      <p>\n        Showing {props.results.length} results -{\" \"}\n        <a href={props.query.getUrlForMedia(\"csv\")}>Download as CSV</a> -{\" \"}\n        <a href={props.query.getUrlForMedia(\"json\")}>View as JSON</a>\n        {saveUrl && (\n          <>\n            {\" \"}\n            - <a href={saveUrl}>Save View</a>{\" \"}\n          </>\n        )}\n      </p>\n      <div className=\"MainSpace\">\n        <div className=\"FieldsList\">\n          <AllFields query={props.query} model={props.model} path=\"\" />\n        </div>\n        <Results\n          query={props.query}\n          fields={props.fields}\n          results={props.results}\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction HomePage(props) {\n  return (\n    <div id=\"body\">\n      <Logo query={props.query} version={props.version} />\n      <div className=\"Index\">\n        <div>\n          <h1>Models</h1>\n          <div>\n            {props.sortedModels.map((model) => (\n              <div key={model}>\n                <button\n                  className=\"Link\"\n                  onClick={() => props.query.setModel(model)}\n                >\n                  {model}\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div>\n          <h1>Saved Views</h1>\n          <div>\n            {props.savedViews.map((view, index) => (\n              <div key={index}>\n                <button\n                  className=\"Link\"\n                  onClick={() => props.query.setQuery(view.query)}\n                >\n                  {view.model} - {view.name}\n                </button>\n                <p>{view.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { HomePage, QueryPage };\n","function getPartsForQuery(query) {\n  return {\n    model: query.model,\n    fields: query.fields\n      .map(\n        (f) =>\n          f.path +\n          { asc: `+${f.priority}`, dsc: `-${f.priority}`, null: \"\" }[f.sort]\n      )\n      .join(\",\"),\n    query: query.filters\n      .map((f) => `${f.path}__${f.lookup}=${f.value}`)\n      .join(\"&\"),\n  };\n}\n\nfunction getUrlForQuery(baseUrl, query, media) {\n  const parts = getPartsForQuery(query);\n  const basePath = `${baseUrl}query/${parts.model}`;\n  return `${window.location.origin}${basePath}/${parts.fields}.${media}?${parts.query}`;\n}\n\nclass Query {\n  constructor(config, query, setQuery) {\n    this.config = config;\n    this.query = query;\n    this.setQuery = setQuery;\n  }\n\n  getField(path) {\n    const parts = path.split(\"__\");\n    const field = parts.slice(-1);\n    let model = this.query.model;\n    for (const field of parts.slice(0, -1)) {\n      model = this.config.allModelFields[model].fks[field].model;\n    }\n    return this.config.allModelFields[model].fields[field];\n  }\n\n  getFieldType(field) {\n    return this.config.types[field.type];\n  }\n\n  getModelFields(model) {\n    return this.config.allModelFields[model];\n  }\n\n  getDefaultLookValue(fieldType) {\n    return this.config.types[fieldType.lookups[fieldType.defaultLookup].type]\n      .defaultValue;\n  }\n\n  addField(path) {\n    const newFields = this.query.fields.slice();\n    newFields.push({ path: path, sort: null });\n    const newResults = this.query.results.map((row) => row.concat([\"\"]));\n    this.setQuery({ fields: newFields, results: newResults });\n  }\n\n  removeField(index) {\n    const newFields = this.query.fields.slice();\n    newFields.splice(index, 1);\n    const newResults = this.query.results.map((row) =>\n      row.slice(0, index).concat(row.slice(index + 1))\n    );\n    this.setQuery({ fields: newFields, results: newResults });\n  }\n\n  toggleSort(index) {\n    const field = this.query.fields[index];\n    const newSort = { asc: \"dsc\", dsc: null, null: \"asc\" }[field.sort];\n    let newFields = this.query.fields.slice();\n\n    if (field.sort) {\n      // move any later sort fields forward\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority:\n          f.priority != null && f.priority > field.priority\n            ? f.priority - 1\n            : f.priority,\n      }));\n    }\n\n    if (newSort) {\n      // move all other fiels back and insert the updated one\n      newFields = newFields.map((f) => ({\n        ...f,\n        priority: f.priority != null ? f.priority + 1 : f.priority,\n      }));\n      newFields[index] = { ...field, sort: newSort, priority: 0 };\n    } else {\n      // blank the sort on the updated field\n      newFields[index] = { ...field, sort: null, priority: null };\n    }\n\n    this.setQuery({\n      fields: newFields,\n    });\n  }\n\n  addFilter(path) {\n    const fieldType = this.getFieldType(this.getField(path));\n    const newFilters = this.query.filters.slice();\n    newFilters.push({\n      errorMessage: null,\n      path: path,\n      lookup: fieldType.defaultLookup,\n      value: this.getDefaultLookValue(fieldType),\n    });\n    this.setQuery({ filters: newFilters });\n  }\n\n  removeFilter(index) {\n    const newFilters = this.query.filters.slice();\n    newFilters.splice(index, 1);\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterValue(index, value) {\n    const newFilters = this.query.filters.slice();\n    newFilters[index] = { ...newFilters[index], value: value };\n    this.setQuery({ filters: newFilters });\n  }\n\n  setFilterLookup(index, lookup) {\n    const newFilters = this.query.filters.slice();\n    newFilters[index] = { ...newFilters[index], lookup: lookup };\n    this.setQuery({ filters: newFilters });\n  }\n\n  setModel(model) {\n    this.setQuery({\n      model: model,\n      fields: [],\n      filters: [],\n      results: [],\n    });\n  }\n\n  getUrlForSave() {\n    if (this.config.adminUrl === null) return null;\n    const parts = getPartsForQuery(this.query);\n    parts.model_name = parts.model;\n    const queryString = new URLSearchParams(parts).toString();\n    return `${window.location.origin}${this.config.adminUrl}?${queryString}`;\n  }\n\n  getUrlForMedia(media) {\n    return getUrlForQuery(this.config.baseUrl, this.query, media);\n  }\n}\n\nexport { Query, getPartsForQuery, getUrlForQuery };\n","import React from \"react\";\nimport \"./App.css\";\nimport { HomePage, QueryPage } from \"./Components\";\nimport { Query, getUrlForQuery } from \"./Query\";\nlet controller;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = props.initialState;\n  }\n\n  fetchResults(state) {\n    const url = getUrlForQuery(this.props.config.baseUrl, state, \"json\");\n\n    if (controller) controller.abort();\n    controller = new AbortController();\n\n    fetch(url, { signal: controller.signal })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          this.setState(result);\n        },\n        (error) => {\n          this.setState({ error });\n        }\n      );\n  }\n\n  componentDidMount() {\n    const reqState = {\n      model: this.state.model,\n      fields: this.state.fields,\n      filters: this.state.filters,\n      results: [],\n    };\n    window.history.replaceState(\n      reqState,\n      null,\n      getUrlForQuery(this.props.config.baseUrl, this.state, \"html\")\n    );\n    this.fetchResults(this.state);\n    window.onpopstate = (e) => {\n      this.fetchResults(e.state);\n      this.setState(e.state);\n    };\n  }\n\n  handleQueryChange(queryChange) {\n    const newState = { ...this.state, ...queryChange };\n    this.setState(queryChange);\n    const reqState = {\n      model: newState.model,\n      fields: newState.fields,\n      filters: newState.filters,\n      results: [],\n    };\n    window.history.pushState(\n      reqState,\n      null,\n      getUrlForQuery(this.props.config.baseUrl, newState, \"html\")\n    );\n    this.fetchResults(newState);\n  }\n\n  render() {\n    const query = new Query(\n      this.props.config,\n      this.state,\n      this.handleQueryChange.bind(this)\n    );\n    if (this.state.model)\n      return (\n        <QueryPage\n          query={query}\n          sortedModels={this.props.config.sortedModels}\n          version={this.props.config.version}\n          {...this.state}\n        />\n      );\n    else\n      return (\n        <HomePage\n          query={query}\n          sortedModels={this.props.config.sortedModels}\n          savedViews={this.props.config.savedViews}\n          version={this.props.config.version}\n        />\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/browser\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst djangoData = JSON.parse(document.getElementById(\"django-data\").textContent);\n\nif (djangoData.sentryDsn) {\n    Sentry.init({ dsn: djangoData.sentryDsn });\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App {...djangoData} />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}