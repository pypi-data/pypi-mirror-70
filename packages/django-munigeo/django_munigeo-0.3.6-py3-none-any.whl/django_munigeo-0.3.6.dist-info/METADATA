Metadata-Version: 2.1
Name: django-munigeo
Version: 0.3.6
Summary: A Django app for processing municipality-related geospatial data.
Home-page: https://github.com/City-of-Helsinki/django-munigeo
Author: City of Helsinki
Author-email: dev@hel.fi
License: BSD License
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Scientific/Engineering :: GIS
Requires-Dist: Django
Requires-Dist: requests
Requires-Dist: requests-cache
Requires-Dist: django-mptt
Requires-Dist: django-parler
Requires-Dist: django-parler-rest
Requires-Dist: six
Requires-Dist: pyyaml

[![Build status](https://travis-ci.org/City-of-Helsinki/django-munigeo.svg?branch=master)](https://travis-ci.org/City-of-Helsinki/django-munigeo)
[![codecov](https://codecov.io/gh/City-of-Helsinki/django-munigeo/branch/master/graph/badge.svg)](https://codecov.io/gh/City-of-Helsinki/django-munigeo)
[![Requirements](https://requires.io/github/City-of-Helsinki/django-munigeo/requirements.svg?branch=master)](https://requires.io/github/City-of-Helsinki/django-munigeo/requirements/?branch=master)

munigeo
=======

`munigeo` is a reusable Django application for storing and accessing
municipality-related geospatial data. It can manage following categories of
data:
* Municipalities as containers of everything below
* Administrative divisions (with parent-child relationships and links to Municipalities)
* Streets and address locations on those Streets
* Buildings with 2D-geometries and addresses
* PoIs (Points of Interest) with location and type

If you are using Django Rest Framework (DRF), munigeo also provides you with serializers
for including these in your API.

For actually getting the data into your database application, munigeo provides importer
framework. Currently we only have actual importers for City of Helsinki, but
other are welcome.

## Usage
Install this to your project with `pip install django-munigeo`,
add `munigeo` to your `INSTALLED_APPS` setting.

### Helsinki example
Before you can get Helsinki, you will need the data for Finland first:
```
python manage.py geo_import finland --municipalities
```
then
```
python manage.py geo_import helsinki --divisions
```


