# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBoneMorphometryFeaturesImageFilterPython
else:
    import _itkBoneMorphometryFeaturesImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkBoneMorphometryFeaturesImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkBoneMorphometryFeaturesImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageSourceCommonPython
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkImageRegionPython
import itk.itkImageToImageFilterBPython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkCovariantVectorPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkRGBPixelPython
import itk.itkPointPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageToImageFilterCommonPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkArrayPython
class vectoritkImageVF53(object):
    r"""Proxy of C++ std::vector< itkImageVF53_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53___nonzero__)
    __bool__ = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53___bool__)
    __len__ = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53___len__)
    __getslice__ = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53___getslice__)
    __setslice__ = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53___setslice__)
    __delslice__ = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53___delslice__)
    __delitem__ = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53___delitem__)
    __getitem__ = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53___getitem__)
    __setitem__ = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53___setitem__)
    pop = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_pop)
    append = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_append)
    empty = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_empty)
    size = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_size)
    swap = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_swap)
    begin = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_begin)
    end = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_end)
    rbegin = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_rbegin)
    rend = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_rend)
    clear = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_clear)
    get_allocator = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_get_allocator)
    pop_back = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_pop_back)
    erase = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_erase)

    def __init__(self, *args):
        r"""
        __init__(vectoritkImageVF53 self) -> vectoritkImageVF53
        __init__(vectoritkImageVF53 self, vectoritkImageVF53 other) -> vectoritkImageVF53
        __init__(vectoritkImageVF53 self, std::vector< itkImageVF53_Pointer >::size_type size) -> vectoritkImageVF53
        __init__(vectoritkImageVF53 self, std::vector< itkImageVF53_Pointer >::size_type size, std::vector< itkImageVF53_Pointer >::value_type const & value) -> vectoritkImageVF53
        """
        _itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_swiginit(self, _itkBoneMorphometryFeaturesImageFilterPython.new_vectoritkImageVF53(*args))
    push_back = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_push_back)
    front = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_front)
    back = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_back)
    assign = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_assign)
    resize = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_resize)
    insert = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_insert)
    reserve = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_reserve)
    capacity = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_capacity)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_vectoritkImageVF53

# Register vectoritkImageVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.vectoritkImageVF53_swigregister(vectoritkImageVF53)


def itkBoneMorphometryFeaturesImageFilterID3VIF3_New():
    return itkBoneMorphometryFeaturesImageFilterID3VIF3.New()

class itkBoneMorphometryFeaturesImageFilterID3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterID3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterID3VIF3
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterID3VIF3

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterID3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterID3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterID3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterID3VIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterID3VIF3 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_swigregister(itkBoneMorphometryFeaturesImageFilterID3VIF3)
itkBoneMorphometryFeaturesImageFilterID3VIF3___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3___New_orig__
itkBoneMorphometryFeaturesImageFilterID3VIF3_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3VIF3_cast


def itkBoneMorphometryFeaturesImageFilterIF3VIF3_New():
    return itkBoneMorphometryFeaturesImageFilterIF3VIF3.New()

class itkBoneMorphometryFeaturesImageFilterIF3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterIF3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterIF3VIF3
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterIF3VIF3

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterIF3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterIF3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterIF3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterIF3VIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterIF3VIF3 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_swigregister(itkBoneMorphometryFeaturesImageFilterIF3VIF3)
itkBoneMorphometryFeaturesImageFilterIF3VIF3___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3___New_orig__
itkBoneMorphometryFeaturesImageFilterIF3VIF3_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3VIF3_cast


def itkBoneMorphometryFeaturesImageFilterISS3VIF3_New():
    return itkBoneMorphometryFeaturesImageFilterISS3VIF3.New()

class itkBoneMorphometryFeaturesImageFilterISS3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3VIF3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterISS3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterISS3VIF3
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterISS3VIF3

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterISS3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterISS3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterISS3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterISS3VIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterISS3VIF3 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_swigregister(itkBoneMorphometryFeaturesImageFilterISS3VIF3)
itkBoneMorphometryFeaturesImageFilterISS3VIF3___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3___New_orig__
itkBoneMorphometryFeaturesImageFilterISS3VIF3_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3VIF3_cast


def itkBoneMorphometryFeaturesImageFilterIUC3VIF3_New():
    return itkBoneMorphometryFeaturesImageFilterIUC3VIF3.New()

class itkBoneMorphometryFeaturesImageFilterIUC3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterIUC3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterIUC3VIF3
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterIUC3VIF3

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterIUC3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterIUC3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterIUC3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterIUC3VIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterIUC3VIF3 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_swigregister(itkBoneMorphometryFeaturesImageFilterIUC3VIF3)
itkBoneMorphometryFeaturesImageFilterIUC3VIF3___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3___New_orig__
itkBoneMorphometryFeaturesImageFilterIUC3VIF3_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3VIF3_cast


def itkBoneMorphometryFeaturesImageFilterIUS3VIF3_New():
    return itkBoneMorphometryFeaturesImageFilterIUS3VIF3.New()

class itkBoneMorphometryFeaturesImageFilterIUS3VIF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterIUS3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterIUS3VIF3
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterIUS3VIF3

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterIUS3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterIUS3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterIUS3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterIUS3VIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterIUS3VIF3 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_swigregister(itkBoneMorphometryFeaturesImageFilterIUS3VIF3)
itkBoneMorphometryFeaturesImageFilterIUS3VIF3___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3___New_orig__
itkBoneMorphometryFeaturesImageFilterIUS3VIF3_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3VIF3_cast


def itkImageFileWriterIVF53_New():
    return itkImageFileWriterIVF53.New()

class itkImageFileWriterIVF53(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageFileWriterIVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_Clone)
    SetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_SetInput)
    GetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_GetInput)
    SetFileName = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_SetFileName)
    GetFileName = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_GetImageIO)
    Write = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_Write)
    SetIORegion = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_SetIORegion)
    GetIORegion = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_GetIORegion)
    SetNumberOfStreamDivisions = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_SetNumberOfStreamDivisions)
    GetNumberOfStreamDivisions = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_GetNumberOfStreamDivisions)
    SetUseCompression = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_UseCompressionOff)
    SetCompressionLevel = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_SetCompressionLevel)
    GetCompressionLevel = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_GetCompressionLevel)
    SetUseInputMetaDataDictionary = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_SetUseInputMetaDataDictionary)
    GetUseInputMetaDataDictionary = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_GetUseInputMetaDataDictionary)
    UseInputMetaDataDictionaryOn = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_UseInputMetaDataDictionaryOn)
    UseInputMetaDataDictionaryOff = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_UseInputMetaDataDictionaryOff)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkImageFileWriterIVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileWriterIVF53

        Create a new object of the class itkImageFileWriterIVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileWriterIVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileWriterIVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileWriterIVF53.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileWriterIVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_swigregister(itkImageFileWriterIVF53)
itkImageFileWriterIVF53___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53___New_orig__
itkImageFileWriterIVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkImageFileWriterIVF53_cast

class itkImageIOBase(itk.ITKCommonBasePython.itkLightProcessObject):
    r"""Proxy of C++ itkImageIOBase class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetFileName = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetFileName)
    GetFileName = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetFileName)
    SetNumberOfDimensions = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetNumberOfDimensions)
    GetNumberOfDimensions = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetNumberOfDimensions)
    SetDimensions = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetDimensions)
    GetDimensions = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetDimensions)
    SetOrigin = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetOrigin)
    SetSpacing = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetSpacing)
    SetDirection = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetDirection)
    GetDirection = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetDirection)
    GetDefaultDirection = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetDefaultDirection)
    SetIORegion = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetIORegion)
    GetIORegion = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetIORegion)
    SetPixelType = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetPixelType)
    GetPixelType = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetPixelType)
    SetComponentType = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetComponentType)
    GetComponentType = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetComponentType)
    GetComponentTypeInfo = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetComponentTypeInfo)
    SetNumberOfComponents = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetNumberOfComponents)
    GetNumberOfComponents = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetNumberOfComponents)
    SetUseCompression = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_UseCompressionOff)
    SetCompressionLevel = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetCompressionLevel)
    GetCompressionLevel = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetCompressionLevel)
    SetCompressor = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetCompressor)
    GetCompressor = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetCompressor)
    SetUseStreamedReading = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetUseStreamedReading)
    GetUseStreamedReading = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetUseStreamedReading)
    UseStreamedReadingOn = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_UseStreamedReadingOn)
    UseStreamedReadingOff = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_UseStreamedReadingOff)
    SetUseStreamedWriting = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetUseStreamedWriting)
    GetUseStreamedWriting = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetUseStreamedWriting)
    UseStreamedWritingOn = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_UseStreamedWritingOn)
    UseStreamedWritingOff = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_UseStreamedWritingOff)
    SetExpandRGBPalette = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetExpandRGBPalette)
    GetExpandRGBPalette = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetExpandRGBPalette)
    ExpandRGBPaletteOn = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_ExpandRGBPaletteOn)
    ExpandRGBPaletteOff = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_ExpandRGBPaletteOff)
    SetWritePalette = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetWritePalette)
    GetWritePalette = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetWritePalette)
    WritePaletteOn = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_WritePaletteOn)
    WritePaletteOff = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_WritePaletteOff)
    GetIsReadAsScalarPlusPalette = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetIsReadAsScalarPlusPalette)
    GetComponentTypeAsString = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetComponentTypeAsString)
    GetComponentTypeFromString = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetComponentTypeFromString)
    GetPixelTypeAsString = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetPixelTypeAsString)
    GetPixelTypeFromString = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetPixelTypeFromString)
    SetFileType = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetFileType)
    GetFileType = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetFileType)
    SetFileTypeToASCII = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetFileTypeToASCII)
    SetFileTypeToBinary = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetFileTypeToBinary)
    SetByteOrder = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetByteOrder)
    GetByteOrder = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetByteOrder)
    SetByteOrderToBigEndian = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetByteOrderToBigEndian)
    SetByteOrderToLittleEndian = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SetByteOrderToLittleEndian)
    GetFileTypeAsString = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetFileTypeAsString)
    GetByteOrderAsString = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetByteOrderAsString)
    GetPixelStride = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetPixelStride)
    GetImageSizeInPixels = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetImageSizeInPixels)
    GetImageSizeInBytes = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetImageSizeInBytes)
    GetImageSizeInComponents = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetImageSizeInComponents)
    GetComponentSize = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetComponentSize)
    CanReadFile = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_CanReadFile)
    CanStreamRead = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_CanStreamRead)
    ReadImageInformation = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_ReadImageInformation)
    Read = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_Read)
    CanWriteFile = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_CanWriteFile)
    CanStreamWrite = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_CanStreamWrite)
    WriteImageInformation = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_WriteImageInformation)
    Write = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_Write)
    SupportsDimension = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_SupportsDimension)
    GenerateStreamableReadRegionFromRequestedRegion = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GenerateStreamableReadRegionFromRequestedRegion)
    GetActualNumberOfSplitsForWriting = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetActualNumberOfSplitsForWriting)
    GetSplitRegionForWriting = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetSplitRegionForWriting)
    GetSupportedReadExtensions = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetSupportedReadExtensions)
    GetSupportedWriteExtensions = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetSupportedWriteExtensions)

# Register itkImageIOBase in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_swigregister(itkImageIOBase)
itkImageIOBase_GetComponentTypeAsString = _itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetComponentTypeAsString
itkImageIOBase_GetComponentTypeFromString = _itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetComponentTypeFromString
itkImageIOBase_GetPixelTypeAsString = _itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetPixelTypeAsString
itkImageIOBase_GetPixelTypeFromString = _itkBoneMorphometryFeaturesImageFilterPython.itkImageIOBase_GetPixelTypeFromString

class itkImageSourceIVF53(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageSourceIVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageSourceIVF53_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageSourceIVF53_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageSourceIVF53_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageSourceIVF53_MakeOutput)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkImageSourceIVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageSourceIVF53_cast)

# Register itkImageSourceIVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageSourceIVF53_swigregister(itkImageSourceIVF53)
itkImageSourceIVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkImageSourceIVF53_cast

class itkImageToImageFilterID3IVF53(itkImageSourceIVF53):
    r"""Proxy of C++ itkImageToImageFilterID3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_SetInput)
    GetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_GetInput)
    PushBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_GetDirectionTolerance)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkImageToImageFilterID3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_cast)

# Register itkImageToImageFilterID3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_swigregister(itkImageToImageFilterID3IVF53)
itkImageToImageFilterID3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterID3IVF53_cast

class itkImageToImageFilterIF3IVF53(itkImageSourceIVF53):
    r"""Proxy of C++ itkImageToImageFilterIF3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_SetInput)
    GetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_GetInput)
    PushBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_GetDirectionTolerance)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkImageToImageFilterIF3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_cast)

# Register itkImageToImageFilterIF3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_swigregister(itkImageToImageFilterIF3IVF53)
itkImageToImageFilterIF3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIF3IVF53_cast

class itkImageToImageFilterISS3IVF53(itkImageSourceIVF53):
    r"""Proxy of C++ itkImageToImageFilterISS3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_SetInput)
    GetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_GetInput)
    PushBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_GetDirectionTolerance)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkImageToImageFilterISS3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_cast)

# Register itkImageToImageFilterISS3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_swigregister(itkImageToImageFilterISS3IVF53)
itkImageToImageFilterISS3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterISS3IVF53_cast

class itkImageToImageFilterIUC3IVF53(itkImageSourceIVF53):
    r"""Proxy of C++ itkImageToImageFilterIUC3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_SetInput)
    GetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_GetInput)
    PushBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_GetDirectionTolerance)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkImageToImageFilterIUC3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_cast)

# Register itkImageToImageFilterIUC3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_swigregister(itkImageToImageFilterIUC3IVF53)
itkImageToImageFilterIUC3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUC3IVF53_cast

class itkImageToImageFilterIUS3IVF53(itkImageSourceIVF53):
    r"""Proxy of C++ itkImageToImageFilterIUS3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_SetInput)
    GetInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_GetInput)
    PushBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_GetDirectionTolerance)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkImageToImageFilterIUS3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_cast)

# Register itkImageToImageFilterIUS3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_swigregister(itkImageToImageFilterIUS3IVF53)
itkImageToImageFilterIUS3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkImageToImageFilterIUS3IVF53_cast


def itkImageVF53_New():
    return itkImageVF53.New()

class itkImageVF53(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkImageVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageVF53_Clone)
    Allocate = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageVF53_Allocate)
    FillBuffer = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageVF53_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageVF53_SetPixel)
    GetPixel = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageVF53_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageVF53_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageVF53_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageVF53_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageVF53_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageVF53_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageVF53_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkImageVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageVF53_cast)

    def __array__(self, dtype=None):
        import itk
        import numpy as np
        array = itk.array_from_image(self)
        return np.asarray(array, dtype=dtype)


    def New(*args, **kargs):
        """New() -> itkImageVF53

        Create a new object of the class itkImageVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageVF53.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageVF53_swigregister(itkImageVF53)
itkImageVF53___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkImageVF53___New_orig__
itkImageVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkImageVF53_cast


def itkBoneMorphometryFeaturesImageFilterID3IVF53_New():
    return itkBoneMorphometryFeaturesImageFilterID3IVF53.New()

class itkBoneMorphometryFeaturesImageFilterID3IVF53(itkImageToImageFilterID3IVF53):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterID3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterID3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterID3IVF53

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterID3IVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterID3IVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterID3IVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterID3IVF53.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterID3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_swigregister(itkBoneMorphometryFeaturesImageFilterID3IVF53)
itkBoneMorphometryFeaturesImageFilterID3IVF53___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53___New_orig__
itkBoneMorphometryFeaturesImageFilterID3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterID3IVF53_cast


def itkBoneMorphometryFeaturesImageFilterIF3IVF53_New():
    return itkBoneMorphometryFeaturesImageFilterIF3IVF53.New()

class itkBoneMorphometryFeaturesImageFilterIF3IVF53(itkImageToImageFilterIF3IVF53):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterIF3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterIF3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterIF3IVF53

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterIF3IVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterIF3IVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterIF3IVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterIF3IVF53.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterIF3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_swigregister(itkBoneMorphometryFeaturesImageFilterIF3IVF53)
itkBoneMorphometryFeaturesImageFilterIF3IVF53___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53___New_orig__
itkBoneMorphometryFeaturesImageFilterIF3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIF3IVF53_cast


def itkBoneMorphometryFeaturesImageFilterISS3IVF53_New():
    return itkBoneMorphometryFeaturesImageFilterISS3IVF53.New()

class itkBoneMorphometryFeaturesImageFilterISS3IVF53(itkImageToImageFilterISS3IVF53):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterISS3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterISS3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterISS3IVF53

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterISS3IVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterISS3IVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterISS3IVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterISS3IVF53.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterISS3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_swigregister(itkBoneMorphometryFeaturesImageFilterISS3IVF53)
itkBoneMorphometryFeaturesImageFilterISS3IVF53___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53___New_orig__
itkBoneMorphometryFeaturesImageFilterISS3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterISS3IVF53_cast


def itkBoneMorphometryFeaturesImageFilterIUC3IVF53_New():
    return itkBoneMorphometryFeaturesImageFilterIUC3IVF53.New()

class itkBoneMorphometryFeaturesImageFilterIUC3IVF53(itkImageToImageFilterIUC3IVF53):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterIUC3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterIUC3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterIUC3IVF53

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterIUC3IVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterIUC3IVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterIUC3IVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterIUC3IVF53.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterIUC3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_swigregister(itkBoneMorphometryFeaturesImageFilterIUC3IVF53)
itkBoneMorphometryFeaturesImageFilterIUC3IVF53___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53___New_orig__
itkBoneMorphometryFeaturesImageFilterIUC3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUC3IVF53_cast


def itkBoneMorphometryFeaturesImageFilterIUS3IVF53_New():
    return itkBoneMorphometryFeaturesImageFilterIUS3IVF53.New()

class itkBoneMorphometryFeaturesImageFilterIUS3IVF53(itkImageToImageFilterIUS3IVF53):
    r"""Proxy of C++ itkBoneMorphometryFeaturesImageFilterIUS3IVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_Clone)
    SetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_GetMaskImage)
    SetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_SetThreshold)
    GetThreshold = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_GetThreshold)
    SetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_SetNeighborhoodRadius)
    GetNeighborhoodRadius = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_GetNeighborhoodRadius)
    InputPixelDimensionCheck = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_InputPixelDimensionCheck
    
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkBoneMorphometryFeaturesImageFilterIUS3IVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_cast)

    def New(*args, **kargs):
        """New() -> itkBoneMorphometryFeaturesImageFilterIUS3IVF53

        Create a new object of the class itkBoneMorphometryFeaturesImageFilterIUS3IVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoneMorphometryFeaturesImageFilterIUS3IVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoneMorphometryFeaturesImageFilterIUS3IVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoneMorphometryFeaturesImageFilterIUS3IVF53.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoneMorphometryFeaturesImageFilterIUS3IVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_swigregister(itkBoneMorphometryFeaturesImageFilterIUS3IVF53)
itkBoneMorphometryFeaturesImageFilterIUS3IVF53___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53___New_orig__
itkBoneMorphometryFeaturesImageFilterIUS3IVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkBoneMorphometryFeaturesImageFilterIUS3IVF53_cast


def itkImageFileReaderIVF53_New():
    return itkImageFileReaderIVF53.New()

class itkImageFileReaderIVF53(itkImageSourceIVF53):
    r"""Proxy of C++ itkImageFileReaderIVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileReaderIVF53___New_orig__)
    Clone = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileReaderIVF53_Clone)
    SetFileNameInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileReaderIVF53_SetFileNameInput)
    SetFileName = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileReaderIVF53_SetFileName)
    GetFileNameInput = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileReaderIVF53_GetFileNameInput)
    GetFileName = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileReaderIVF53_GetFileName)
    SetImageIO = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileReaderIVF53_SetImageIO)
    GetModifiableImageIO = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileReaderIVF53_GetModifiableImageIO)
    GetImageIO = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileReaderIVF53_GetImageIO)
    SetUseStreaming = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileReaderIVF53_SetUseStreaming)
    GetUseStreaming = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileReaderIVF53_GetUseStreaming)
    UseStreamingOn = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileReaderIVF53_UseStreamingOn)
    UseStreamingOff = _swig_new_instance_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileReaderIVF53_UseStreamingOff)
    __swig_destroy__ = _itkBoneMorphometryFeaturesImageFilterPython.delete_itkImageFileReaderIVF53
    cast = _swig_new_static_method(_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileReaderIVF53_cast)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIVF53

        Create a new object of the class itkImageFileReaderIVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIVF53.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIVF53 in _itkBoneMorphometryFeaturesImageFilterPython:
_itkBoneMorphometryFeaturesImageFilterPython.itkImageFileReaderIVF53_swigregister(itkImageFileReaderIVF53)
itkImageFileReaderIVF53___New_orig__ = _itkBoneMorphometryFeaturesImageFilterPython.itkImageFileReaderIVF53___New_orig__
itkImageFileReaderIVF53_cast = _itkBoneMorphometryFeaturesImageFilterPython.itkImageFileReaderIVF53_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def bone_morphometry_features_image_filter(*args, **kwargs):
    """Procedural interface for BoneMorphometryFeaturesImageFilter"""
    import itk
    instance = itk.BoneMorphometryFeaturesImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def bone_morphometry_features_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.BoneMorphometryFeaturesImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.BoneMorphometryFeaturesImageFilter.values()[0]
    else:
        filter_object = itk.BoneMorphometryFeaturesImageFilter

    bone_morphometry_features_image_filter.__doc__ = filter_object.__doc__
    bone_morphometry_features_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    bone_morphometry_features_image_filter.__doc__ += "Available Keyword Arguments:\n"
    bone_morphometry_features_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_source(*args, **kwargs):
    """Procedural interface for ImageSource"""
    import itk
    instance = itk.ImageSource.New(*args, **kwargs)
    return instance.__internal_call__()

def image_source_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ImageSource, itkTemplate.itkTemplate):
        filter_object = itk.ImageSource.values()[0]
    else:
        filter_object = itk.ImageSource

    image_source.__doc__ = filter_object.__doc__
    image_source.__doc__ += "\n Args are Input(s) to the filter.\n"
    image_source.__doc__ += "Available Keyword Arguments:\n"
    image_source.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_file_writer(*args, **kwargs):
    """Procedural interface for ImageFileWriter"""
    import itk
    instance = itk.ImageFileWriter.New(*args, **kwargs)
    return instance.__internal_call__()

def image_file_writer_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ImageFileWriter, itkTemplate.itkTemplate):
        filter_object = itk.ImageFileWriter.values()[0]
    else:
        filter_object = itk.ImageFileWriter

    image_file_writer.__doc__ = filter_object.__doc__
    image_file_writer.__doc__ += "\n Args are Input(s) to the filter.\n"
    image_file_writer.__doc__ += "Available Keyword Arguments:\n"
    image_file_writer.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_to_image_filter(*args, **kwargs):
    """Procedural interface for ImageToImageFilter"""
    import itk
    instance = itk.ImageToImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def image_to_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ImageToImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ImageToImageFilter.values()[0]
    else:
        filter_object = itk.ImageToImageFilter

    image_to_image_filter.__doc__ = filter_object.__doc__
    image_to_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    image_to_image_filter.__doc__ += "Available Keyword Arguments:\n"
    image_to_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_file_reader(*args, **kwargs):
    """Procedural interface for ImageFileReader"""
    import itk
    instance = itk.ImageFileReader.New(*args, **kwargs)
    return instance.__internal_call__()

def image_file_reader_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ImageFileReader, itkTemplate.itkTemplate):
        filter_object = itk.ImageFileReader.values()[0]
    else:
        filter_object = itk.ImageFileReader

    image_file_reader.__doc__ = filter_object.__doc__
    image_file_reader.__doc__ += "\n Args are Input(s) to the filter.\n"
    image_file_reader.__doc__ += "Available Keyword Arguments:\n"
    image_file_reader.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



