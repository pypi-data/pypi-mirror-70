# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkParabolicCloseImageFilterPython
else:
    import _itkParabolicCloseImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkParabolicCloseImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkParabolicCloseImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.itkImagePython
import itk.itkCovariantVectorPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkRGBPixelPython
import itk.itkIndexPython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkParabolicCloseImageFilterID2ID2_Superclass_New():
    return itkParabolicCloseImageFilterID2ID2_Superclass.New()

class itkParabolicCloseImageFilterID2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkParabolicCloseImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass_Clone)
    SetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass_SetScale)
    GetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass_GetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass_UseImageSpacingOff)
    SetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass_SafeBorderOff)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass_ParabolicAlgorithm_INTERSECTION
    
    SetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass_SetParabolicAlgorithm)
    GetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass_GetParabolicAlgorithm)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterID2ID2_Superclass
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterID2ID2_Superclass

        Create a new object of the class itkParabolicCloseImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterID2ID2_Superclass in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass_swigregister(itkParabolicCloseImageFilterID2ID2_Superclass)
itkParabolicCloseImageFilterID2ID2_Superclass___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass___New_orig__
itkParabolicCloseImageFilterID2ID2_Superclass_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Superclass_cast


def itkParabolicCloseImageFilterID3ID3_Superclass_New():
    return itkParabolicCloseImageFilterID3ID3_Superclass.New()

class itkParabolicCloseImageFilterID3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkParabolicCloseImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass_Clone)
    SetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass_SetScale)
    GetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass_GetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass_UseImageSpacingOff)
    SetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass_SafeBorderOff)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass_ParabolicAlgorithm_INTERSECTION
    
    SetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass_SetParabolicAlgorithm)
    GetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass_GetParabolicAlgorithm)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterID3ID3_Superclass
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterID3ID3_Superclass

        Create a new object of the class itkParabolicCloseImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterID3ID3_Superclass in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass_swigregister(itkParabolicCloseImageFilterID3ID3_Superclass)
itkParabolicCloseImageFilterID3ID3_Superclass___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass___New_orig__
itkParabolicCloseImageFilterID3ID3_Superclass_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Superclass_cast


def itkParabolicCloseImageFilterIF2IF2_Superclass_New():
    return itkParabolicCloseImageFilterIF2IF2_Superclass.New()

class itkParabolicCloseImageFilterIF2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkParabolicCloseImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass_Clone)
    SetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass_SetScale)
    GetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass_GetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass_UseImageSpacingOff)
    SetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass_SafeBorderOff)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass_ParabolicAlgorithm_INTERSECTION
    
    SetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass_SetParabolicAlgorithm)
    GetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass_GetParabolicAlgorithm)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterIF2IF2_Superclass
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterIF2IF2_Superclass

        Create a new object of the class itkParabolicCloseImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterIF2IF2_Superclass in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass_swigregister(itkParabolicCloseImageFilterIF2IF2_Superclass)
itkParabolicCloseImageFilterIF2IF2_Superclass___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass___New_orig__
itkParabolicCloseImageFilterIF2IF2_Superclass_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Superclass_cast


def itkParabolicCloseImageFilterIF3IF3_Superclass_New():
    return itkParabolicCloseImageFilterIF3IF3_Superclass.New()

class itkParabolicCloseImageFilterIF3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkParabolicCloseImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass_Clone)
    SetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass_SetScale)
    GetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass_GetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass_UseImageSpacingOff)
    SetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass_SafeBorderOff)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass_ParabolicAlgorithm_INTERSECTION
    
    SetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass_SetParabolicAlgorithm)
    GetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass_GetParabolicAlgorithm)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterIF3IF3_Superclass
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterIF3IF3_Superclass

        Create a new object of the class itkParabolicCloseImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterIF3IF3_Superclass in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass_swigregister(itkParabolicCloseImageFilterIF3IF3_Superclass)
itkParabolicCloseImageFilterIF3IF3_Superclass___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass___New_orig__
itkParabolicCloseImageFilterIF3IF3_Superclass_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Superclass_cast


def itkParabolicCloseImageFilterISS2ISS2_Superclass_New():
    return itkParabolicCloseImageFilterISS2ISS2_Superclass.New()

class itkParabolicCloseImageFilterISS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkParabolicCloseImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass_Clone)
    SetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass_SetScale)
    GetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass_GetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass_UseImageSpacingOff)
    SetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass_SafeBorderOff)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass_ParabolicAlgorithm_INTERSECTION
    
    SetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass_SetParabolicAlgorithm)
    GetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass_GetParabolicAlgorithm)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterISS2ISS2_Superclass
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterISS2ISS2_Superclass

        Create a new object of the class itkParabolicCloseImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterISS2ISS2_Superclass in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass_swigregister(itkParabolicCloseImageFilterISS2ISS2_Superclass)
itkParabolicCloseImageFilterISS2ISS2_Superclass___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass___New_orig__
itkParabolicCloseImageFilterISS2ISS2_Superclass_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Superclass_cast


def itkParabolicCloseImageFilterISS3ISS3_Superclass_New():
    return itkParabolicCloseImageFilterISS3ISS3_Superclass.New()

class itkParabolicCloseImageFilterISS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkParabolicCloseImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass_Clone)
    SetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass_SetScale)
    GetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass_GetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass_UseImageSpacingOff)
    SetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass_SafeBorderOff)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass_ParabolicAlgorithm_INTERSECTION
    
    SetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass_SetParabolicAlgorithm)
    GetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass_GetParabolicAlgorithm)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterISS3ISS3_Superclass
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterISS3ISS3_Superclass

        Create a new object of the class itkParabolicCloseImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterISS3ISS3_Superclass in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass_swigregister(itkParabolicCloseImageFilterISS3ISS3_Superclass)
itkParabolicCloseImageFilterISS3ISS3_Superclass___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass___New_orig__
itkParabolicCloseImageFilterISS3ISS3_Superclass_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Superclass_cast


def itkParabolicCloseImageFilterIUC2IUC2_Superclass_New():
    return itkParabolicCloseImageFilterIUC2IUC2_Superclass.New()

class itkParabolicCloseImageFilterIUC2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkParabolicCloseImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass_Clone)
    SetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass_SetScale)
    GetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass_GetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass_UseImageSpacingOff)
    SetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass_SafeBorderOff)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass_ParabolicAlgorithm_INTERSECTION
    
    SetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass_SetParabolicAlgorithm)
    GetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass_GetParabolicAlgorithm)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterIUC2IUC2_Superclass
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkParabolicCloseImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterIUC2IUC2_Superclass in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass_swigregister(itkParabolicCloseImageFilterIUC2IUC2_Superclass)
itkParabolicCloseImageFilterIUC2IUC2_Superclass___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass___New_orig__
itkParabolicCloseImageFilterIUC2IUC2_Superclass_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Superclass_cast


def itkParabolicCloseImageFilterIUC3IUC3_Superclass_New():
    return itkParabolicCloseImageFilterIUC3IUC3_Superclass.New()

class itkParabolicCloseImageFilterIUC3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkParabolicCloseImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass_Clone)
    SetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass_SetScale)
    GetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass_GetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass_UseImageSpacingOff)
    SetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass_SafeBorderOff)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass_ParabolicAlgorithm_INTERSECTION
    
    SetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass_SetParabolicAlgorithm)
    GetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass_GetParabolicAlgorithm)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterIUC3IUC3_Superclass
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkParabolicCloseImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterIUC3IUC3_Superclass in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass_swigregister(itkParabolicCloseImageFilterIUC3IUC3_Superclass)
itkParabolicCloseImageFilterIUC3IUC3_Superclass___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass___New_orig__
itkParabolicCloseImageFilterIUC3IUC3_Superclass_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Superclass_cast


def itkParabolicCloseImageFilterIUS2IUS2_Superclass_New():
    return itkParabolicCloseImageFilterIUS2IUS2_Superclass.New()

class itkParabolicCloseImageFilterIUS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkParabolicCloseImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass_Clone)
    SetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass_SetScale)
    GetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass_GetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass_UseImageSpacingOff)
    SetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass_SafeBorderOff)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass_ParabolicAlgorithm_INTERSECTION
    
    SetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass_SetParabolicAlgorithm)
    GetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass_GetParabolicAlgorithm)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterIUS2IUS2_Superclass
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkParabolicCloseImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterIUS2IUS2_Superclass in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass_swigregister(itkParabolicCloseImageFilterIUS2IUS2_Superclass)
itkParabolicCloseImageFilterIUS2IUS2_Superclass___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass___New_orig__
itkParabolicCloseImageFilterIUS2IUS2_Superclass_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Superclass_cast


def itkParabolicCloseImageFilterIUS3IUS3_Superclass_New():
    return itkParabolicCloseImageFilterIUS3IUS3_Superclass.New()

class itkParabolicCloseImageFilterIUS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkParabolicCloseImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass_Clone)
    SetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass_SetScale)
    GetScale = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass_GetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass_UseImageSpacingOff)
    SetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass_SetSafeBorder)
    GetSafeBorder = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass_GetSafeBorder)
    SafeBorderOn = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass_SafeBorderOn)
    SafeBorderOff = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass_SafeBorderOff)
    ParabolicAlgorithm_NOCHOICE = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass_ParabolicAlgorithm_NOCHOICE
    
    ParabolicAlgorithm_CONTACTPOINT = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass_ParabolicAlgorithm_CONTACTPOINT
    
    ParabolicAlgorithm_INTERSECTION = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass_ParabolicAlgorithm_INTERSECTION
    
    SetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass_SetParabolicAlgorithm)
    GetParabolicAlgorithm = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass_GetParabolicAlgorithm)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterIUS3IUS3_Superclass
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkParabolicCloseImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterIUS3IUS3_Superclass in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass_swigregister(itkParabolicCloseImageFilterIUS3IUS3_Superclass)
itkParabolicCloseImageFilterIUS3IUS3_Superclass___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass___New_orig__
itkParabolicCloseImageFilterIUS3IUS3_Superclass_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Superclass_cast


def itkParabolicCloseImageFilterID2ID2_New():
    return itkParabolicCloseImageFilterID2ID2.New()

class itkParabolicCloseImageFilterID2ID2(itkParabolicCloseImageFilterID2ID2_Superclass):
    r"""Proxy of C++ itkParabolicCloseImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_Clone)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterID2ID2
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterID2ID2

        Create a new object of the class itkParabolicCloseImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterID2ID2 in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_swigregister(itkParabolicCloseImageFilterID2ID2)
itkParabolicCloseImageFilterID2ID2___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2___New_orig__
itkParabolicCloseImageFilterID2ID2_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID2ID2_cast


def itkParabolicCloseImageFilterID3ID3_New():
    return itkParabolicCloseImageFilterID3ID3.New()

class itkParabolicCloseImageFilterID3ID3(itkParabolicCloseImageFilterID3ID3_Superclass):
    r"""Proxy of C++ itkParabolicCloseImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_Clone)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterID3ID3
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterID3ID3

        Create a new object of the class itkParabolicCloseImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterID3ID3 in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_swigregister(itkParabolicCloseImageFilterID3ID3)
itkParabolicCloseImageFilterID3ID3___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3___New_orig__
itkParabolicCloseImageFilterID3ID3_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterID3ID3_cast


def itkParabolicCloseImageFilterIF2IF2_New():
    return itkParabolicCloseImageFilterIF2IF2.New()

class itkParabolicCloseImageFilterIF2IF2(itkParabolicCloseImageFilterIF2IF2_Superclass):
    r"""Proxy of C++ itkParabolicCloseImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_Clone)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterIF2IF2
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterIF2IF2

        Create a new object of the class itkParabolicCloseImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterIF2IF2 in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_swigregister(itkParabolicCloseImageFilterIF2IF2)
itkParabolicCloseImageFilterIF2IF2___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2___New_orig__
itkParabolicCloseImageFilterIF2IF2_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF2IF2_cast


def itkParabolicCloseImageFilterIF3IF3_New():
    return itkParabolicCloseImageFilterIF3IF3.New()

class itkParabolicCloseImageFilterIF3IF3(itkParabolicCloseImageFilterIF3IF3_Superclass):
    r"""Proxy of C++ itkParabolicCloseImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_Clone)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterIF3IF3
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterIF3IF3

        Create a new object of the class itkParabolicCloseImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterIF3IF3 in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_swigregister(itkParabolicCloseImageFilterIF3IF3)
itkParabolicCloseImageFilterIF3IF3___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3___New_orig__
itkParabolicCloseImageFilterIF3IF3_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIF3IF3_cast


def itkParabolicCloseImageFilterISS2ISS2_New():
    return itkParabolicCloseImageFilterISS2ISS2.New()

class itkParabolicCloseImageFilterISS2ISS2(itkParabolicCloseImageFilterISS2ISS2_Superclass):
    r"""Proxy of C++ itkParabolicCloseImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_Clone)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterISS2ISS2

        Create a new object of the class itkParabolicCloseImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterISS2ISS2 in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_swigregister(itkParabolicCloseImageFilterISS2ISS2)
itkParabolicCloseImageFilterISS2ISS2___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2___New_orig__
itkParabolicCloseImageFilterISS2ISS2_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS2ISS2_cast


def itkParabolicCloseImageFilterISS3ISS3_New():
    return itkParabolicCloseImageFilterISS3ISS3.New()

class itkParabolicCloseImageFilterISS3ISS3(itkParabolicCloseImageFilterISS3ISS3_Superclass):
    r"""Proxy of C++ itkParabolicCloseImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_Clone)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterISS3ISS3

        Create a new object of the class itkParabolicCloseImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterISS3ISS3 in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_swigregister(itkParabolicCloseImageFilterISS3ISS3)
itkParabolicCloseImageFilterISS3ISS3___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3___New_orig__
itkParabolicCloseImageFilterISS3ISS3_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterISS3ISS3_cast


def itkParabolicCloseImageFilterIUC2IUC2_New():
    return itkParabolicCloseImageFilterIUC2IUC2.New()

class itkParabolicCloseImageFilterIUC2IUC2(itkParabolicCloseImageFilterIUC2IUC2_Superclass):
    r"""Proxy of C++ itkParabolicCloseImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_Clone)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterIUC2IUC2

        Create a new object of the class itkParabolicCloseImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterIUC2IUC2 in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_swigregister(itkParabolicCloseImageFilterIUC2IUC2)
itkParabolicCloseImageFilterIUC2IUC2___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2___New_orig__
itkParabolicCloseImageFilterIUC2IUC2_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC2IUC2_cast


def itkParabolicCloseImageFilterIUC3IUC3_New():
    return itkParabolicCloseImageFilterIUC3IUC3.New()

class itkParabolicCloseImageFilterIUC3IUC3(itkParabolicCloseImageFilterIUC3IUC3_Superclass):
    r"""Proxy of C++ itkParabolicCloseImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_Clone)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterIUC3IUC3

        Create a new object of the class itkParabolicCloseImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterIUC3IUC3 in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_swigregister(itkParabolicCloseImageFilterIUC3IUC3)
itkParabolicCloseImageFilterIUC3IUC3___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3___New_orig__
itkParabolicCloseImageFilterIUC3IUC3_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUC3IUC3_cast


def itkParabolicCloseImageFilterIUS2IUS2_New():
    return itkParabolicCloseImageFilterIUS2IUS2.New()

class itkParabolicCloseImageFilterIUS2IUS2(itkParabolicCloseImageFilterIUS2IUS2_Superclass):
    r"""Proxy of C++ itkParabolicCloseImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_Clone)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterIUS2IUS2

        Create a new object of the class itkParabolicCloseImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterIUS2IUS2 in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_swigregister(itkParabolicCloseImageFilterIUS2IUS2)
itkParabolicCloseImageFilterIUS2IUS2___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2___New_orig__
itkParabolicCloseImageFilterIUS2IUS2_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS2IUS2_cast


def itkParabolicCloseImageFilterIUS3IUS3_New():
    return itkParabolicCloseImageFilterIUS3IUS3.New()

class itkParabolicCloseImageFilterIUS3IUS3(itkParabolicCloseImageFilterIUS3IUS3_Superclass):
    r"""Proxy of C++ itkParabolicCloseImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_Clone)
    __swig_destroy__ = _itkParabolicCloseImageFilterPython.delete_itkParabolicCloseImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkParabolicCloseImageFilterIUS3IUS3

        Create a new object of the class itkParabolicCloseImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParabolicCloseImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParabolicCloseImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParabolicCloseImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParabolicCloseImageFilterIUS3IUS3 in _itkParabolicCloseImageFilterPython:
_itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_swigregister(itkParabolicCloseImageFilterIUS3IUS3)
itkParabolicCloseImageFilterIUS3IUS3___New_orig__ = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3___New_orig__
itkParabolicCloseImageFilterIUS3IUS3_cast = _itkParabolicCloseImageFilterPython.itkParabolicCloseImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def parabolic_open_close_safe_border_image_filter(*args, **kwargs):
    """Procedural interface for ParabolicOpenCloseSafeBorderImageFilter"""
    import itk
    instance = itk.ParabolicOpenCloseSafeBorderImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def parabolic_open_close_safe_border_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ParabolicOpenCloseSafeBorderImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ParabolicOpenCloseSafeBorderImageFilter.values()[0]
    else:
        filter_object = itk.ParabolicOpenCloseSafeBorderImageFilter

    parabolic_open_close_safe_border_image_filter.__doc__ = filter_object.__doc__
    parabolic_open_close_safe_border_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    parabolic_open_close_safe_border_image_filter.__doc__ += "Available Keyword Arguments:\n"
    parabolic_open_close_safe_border_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def parabolic_close_image_filter(*args, **kwargs):
    """Procedural interface for ParabolicCloseImageFilter"""
    import itk
    instance = itk.ParabolicCloseImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def parabolic_close_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ParabolicCloseImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ParabolicCloseImageFilter.values()[0]
    else:
        filter_object = itk.ParabolicCloseImageFilter

    parabolic_close_image_filter.__doc__ = filter_object.__doc__
    parabolic_close_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    parabolic_close_image_filter.__doc__ += "Available Keyword Arguments:\n"
    parabolic_close_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



