# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMorphologicalSharpeningImageFilterPython
else:
    import _itkMorphologicalSharpeningImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkMorphologicalSharpeningImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkMorphologicalSharpeningImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkFixedArrayPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkMorphologicalSharpeningImageFilterID2ID2_New():
    return itkMorphologicalSharpeningImageFilterID2ID2.New()

class itkMorphologicalSharpeningImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkMorphologicalSharpeningImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID2ID2_Clone)
    SetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID2ID2_SetIterations)
    GetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID2ID2_GetIterations)
    SetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID2ID2_SetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID2ID2_SetUseImageSpacing)
    GetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID2ID2_GetScale)
    GetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID2ID2_GetUseImageSpacing)
    SameDimension = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID2ID2_SameDimension
    
    Comparable = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID2ID2_Comparable
    
    __swig_destroy__ = _itkMorphologicalSharpeningImageFilterPython.delete_itkMorphologicalSharpeningImageFilterID2ID2
    cast = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalSharpeningImageFilterID2ID2

        Create a new object of the class itkMorphologicalSharpeningImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalSharpeningImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalSharpeningImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalSharpeningImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalSharpeningImageFilterID2ID2 in _itkMorphologicalSharpeningImageFilterPython:
_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID2ID2_swigregister(itkMorphologicalSharpeningImageFilterID2ID2)
itkMorphologicalSharpeningImageFilterID2ID2___New_orig__ = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID2ID2___New_orig__
itkMorphologicalSharpeningImageFilterID2ID2_cast = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID2ID2_cast


def itkMorphologicalSharpeningImageFilterID3ID3_New():
    return itkMorphologicalSharpeningImageFilterID3ID3.New()

class itkMorphologicalSharpeningImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkMorphologicalSharpeningImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID3ID3_Clone)
    SetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID3ID3_SetIterations)
    GetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID3ID3_GetIterations)
    SetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID3ID3_SetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID3ID3_SetUseImageSpacing)
    GetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID3ID3_GetScale)
    GetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID3ID3_GetUseImageSpacing)
    SameDimension = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID3ID3_SameDimension
    
    Comparable = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID3ID3_Comparable
    
    __swig_destroy__ = _itkMorphologicalSharpeningImageFilterPython.delete_itkMorphologicalSharpeningImageFilterID3ID3
    cast = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalSharpeningImageFilterID3ID3

        Create a new object of the class itkMorphologicalSharpeningImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalSharpeningImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalSharpeningImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalSharpeningImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalSharpeningImageFilterID3ID3 in _itkMorphologicalSharpeningImageFilterPython:
_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID3ID3_swigregister(itkMorphologicalSharpeningImageFilterID3ID3)
itkMorphologicalSharpeningImageFilterID3ID3___New_orig__ = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID3ID3___New_orig__
itkMorphologicalSharpeningImageFilterID3ID3_cast = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterID3ID3_cast


def itkMorphologicalSharpeningImageFilterIF2IF2_New():
    return itkMorphologicalSharpeningImageFilterIF2IF2.New()

class itkMorphologicalSharpeningImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkMorphologicalSharpeningImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF2IF2_Clone)
    SetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF2IF2_SetIterations)
    GetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF2IF2_GetIterations)
    SetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF2IF2_SetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF2IF2_SetUseImageSpacing)
    GetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF2IF2_GetScale)
    GetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF2IF2_GetUseImageSpacing)
    SameDimension = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF2IF2_SameDimension
    
    Comparable = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF2IF2_Comparable
    
    __swig_destroy__ = _itkMorphologicalSharpeningImageFilterPython.delete_itkMorphologicalSharpeningImageFilterIF2IF2
    cast = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalSharpeningImageFilterIF2IF2

        Create a new object of the class itkMorphologicalSharpeningImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalSharpeningImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalSharpeningImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalSharpeningImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalSharpeningImageFilterIF2IF2 in _itkMorphologicalSharpeningImageFilterPython:
_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF2IF2_swigregister(itkMorphologicalSharpeningImageFilterIF2IF2)
itkMorphologicalSharpeningImageFilterIF2IF2___New_orig__ = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF2IF2___New_orig__
itkMorphologicalSharpeningImageFilterIF2IF2_cast = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF2IF2_cast


def itkMorphologicalSharpeningImageFilterIF3IF3_New():
    return itkMorphologicalSharpeningImageFilterIF3IF3.New()

class itkMorphologicalSharpeningImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkMorphologicalSharpeningImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF3IF3_Clone)
    SetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF3IF3_SetIterations)
    GetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF3IF3_GetIterations)
    SetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF3IF3_SetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF3IF3_SetUseImageSpacing)
    GetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF3IF3_GetScale)
    GetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF3IF3_GetUseImageSpacing)
    SameDimension = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF3IF3_SameDimension
    
    Comparable = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF3IF3_Comparable
    
    __swig_destroy__ = _itkMorphologicalSharpeningImageFilterPython.delete_itkMorphologicalSharpeningImageFilterIF3IF3
    cast = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalSharpeningImageFilterIF3IF3

        Create a new object of the class itkMorphologicalSharpeningImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalSharpeningImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalSharpeningImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalSharpeningImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalSharpeningImageFilterIF3IF3 in _itkMorphologicalSharpeningImageFilterPython:
_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF3IF3_swigregister(itkMorphologicalSharpeningImageFilterIF3IF3)
itkMorphologicalSharpeningImageFilterIF3IF3___New_orig__ = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF3IF3___New_orig__
itkMorphologicalSharpeningImageFilterIF3IF3_cast = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIF3IF3_cast


def itkMorphologicalSharpeningImageFilterISS2ISS2_New():
    return itkMorphologicalSharpeningImageFilterISS2ISS2.New()

class itkMorphologicalSharpeningImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkMorphologicalSharpeningImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS2ISS2_Clone)
    SetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS2ISS2_SetIterations)
    GetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS2ISS2_GetIterations)
    SetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS2ISS2_SetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS2ISS2_SetUseImageSpacing)
    GetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS2ISS2_GetScale)
    GetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS2ISS2_GetUseImageSpacing)
    SameDimension = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS2ISS2_SameDimension
    
    Comparable = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS2ISS2_Comparable
    
    __swig_destroy__ = _itkMorphologicalSharpeningImageFilterPython.delete_itkMorphologicalSharpeningImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalSharpeningImageFilterISS2ISS2

        Create a new object of the class itkMorphologicalSharpeningImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalSharpeningImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalSharpeningImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalSharpeningImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalSharpeningImageFilterISS2ISS2 in _itkMorphologicalSharpeningImageFilterPython:
_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS2ISS2_swigregister(itkMorphologicalSharpeningImageFilterISS2ISS2)
itkMorphologicalSharpeningImageFilterISS2ISS2___New_orig__ = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS2ISS2___New_orig__
itkMorphologicalSharpeningImageFilterISS2ISS2_cast = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS2ISS2_cast


def itkMorphologicalSharpeningImageFilterISS3ISS3_New():
    return itkMorphologicalSharpeningImageFilterISS3ISS3.New()

class itkMorphologicalSharpeningImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkMorphologicalSharpeningImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS3ISS3_Clone)
    SetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS3ISS3_SetIterations)
    GetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS3ISS3_GetIterations)
    SetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS3ISS3_SetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS3ISS3_SetUseImageSpacing)
    GetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS3ISS3_GetScale)
    GetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS3ISS3_GetUseImageSpacing)
    SameDimension = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS3ISS3_SameDimension
    
    Comparable = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS3ISS3_Comparable
    
    __swig_destroy__ = _itkMorphologicalSharpeningImageFilterPython.delete_itkMorphologicalSharpeningImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalSharpeningImageFilterISS3ISS3

        Create a new object of the class itkMorphologicalSharpeningImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalSharpeningImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalSharpeningImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalSharpeningImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalSharpeningImageFilterISS3ISS3 in _itkMorphologicalSharpeningImageFilterPython:
_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS3ISS3_swigregister(itkMorphologicalSharpeningImageFilterISS3ISS3)
itkMorphologicalSharpeningImageFilterISS3ISS3___New_orig__ = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS3ISS3___New_orig__
itkMorphologicalSharpeningImageFilterISS3ISS3_cast = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterISS3ISS3_cast


def itkMorphologicalSharpeningImageFilterIUC2IUC2_New():
    return itkMorphologicalSharpeningImageFilterIUC2IUC2.New()

class itkMorphologicalSharpeningImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkMorphologicalSharpeningImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC2IUC2_Clone)
    SetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC2IUC2_SetIterations)
    GetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC2IUC2_GetIterations)
    SetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC2IUC2_SetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC2IUC2_SetUseImageSpacing)
    GetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC2IUC2_GetScale)
    GetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC2IUC2_GetUseImageSpacing)
    SameDimension = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC2IUC2_SameDimension
    
    Comparable = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC2IUC2_Comparable
    
    __swig_destroy__ = _itkMorphologicalSharpeningImageFilterPython.delete_itkMorphologicalSharpeningImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalSharpeningImageFilterIUC2IUC2

        Create a new object of the class itkMorphologicalSharpeningImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalSharpeningImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalSharpeningImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalSharpeningImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalSharpeningImageFilterIUC2IUC2 in _itkMorphologicalSharpeningImageFilterPython:
_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC2IUC2_swigregister(itkMorphologicalSharpeningImageFilterIUC2IUC2)
itkMorphologicalSharpeningImageFilterIUC2IUC2___New_orig__ = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC2IUC2___New_orig__
itkMorphologicalSharpeningImageFilterIUC2IUC2_cast = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC2IUC2_cast


def itkMorphologicalSharpeningImageFilterIUC3IUC3_New():
    return itkMorphologicalSharpeningImageFilterIUC3IUC3.New()

class itkMorphologicalSharpeningImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkMorphologicalSharpeningImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC3IUC3_Clone)
    SetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC3IUC3_SetIterations)
    GetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC3IUC3_GetIterations)
    SetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC3IUC3_SetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC3IUC3_SetUseImageSpacing)
    GetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC3IUC3_GetScale)
    GetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC3IUC3_GetUseImageSpacing)
    SameDimension = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC3IUC3_SameDimension
    
    Comparable = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC3IUC3_Comparable
    
    __swig_destroy__ = _itkMorphologicalSharpeningImageFilterPython.delete_itkMorphologicalSharpeningImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalSharpeningImageFilterIUC3IUC3

        Create a new object of the class itkMorphologicalSharpeningImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalSharpeningImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalSharpeningImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalSharpeningImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalSharpeningImageFilterIUC3IUC3 in _itkMorphologicalSharpeningImageFilterPython:
_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC3IUC3_swigregister(itkMorphologicalSharpeningImageFilterIUC3IUC3)
itkMorphologicalSharpeningImageFilterIUC3IUC3___New_orig__ = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC3IUC3___New_orig__
itkMorphologicalSharpeningImageFilterIUC3IUC3_cast = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUC3IUC3_cast


def itkMorphologicalSharpeningImageFilterIUS2IUS2_New():
    return itkMorphologicalSharpeningImageFilterIUS2IUS2.New()

class itkMorphologicalSharpeningImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkMorphologicalSharpeningImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS2IUS2_Clone)
    SetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS2IUS2_SetIterations)
    GetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS2IUS2_GetIterations)
    SetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS2IUS2_SetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS2IUS2_SetUseImageSpacing)
    GetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS2IUS2_GetScale)
    GetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS2IUS2_GetUseImageSpacing)
    SameDimension = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS2IUS2_SameDimension
    
    Comparable = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS2IUS2_Comparable
    
    __swig_destroy__ = _itkMorphologicalSharpeningImageFilterPython.delete_itkMorphologicalSharpeningImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalSharpeningImageFilterIUS2IUS2

        Create a new object of the class itkMorphologicalSharpeningImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalSharpeningImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalSharpeningImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalSharpeningImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalSharpeningImageFilterIUS2IUS2 in _itkMorphologicalSharpeningImageFilterPython:
_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS2IUS2_swigregister(itkMorphologicalSharpeningImageFilterIUS2IUS2)
itkMorphologicalSharpeningImageFilterIUS2IUS2___New_orig__ = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS2IUS2___New_orig__
itkMorphologicalSharpeningImageFilterIUS2IUS2_cast = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS2IUS2_cast


def itkMorphologicalSharpeningImageFilterIUS3IUS3_New():
    return itkMorphologicalSharpeningImageFilterIUS3IUS3.New()

class itkMorphologicalSharpeningImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkMorphologicalSharpeningImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS3IUS3_Clone)
    SetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS3IUS3_SetIterations)
    GetIterations = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS3IUS3_GetIterations)
    SetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS3IUS3_SetScale)
    SetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS3IUS3_SetUseImageSpacing)
    GetScale = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS3IUS3_GetScale)
    GetUseImageSpacing = _swig_new_instance_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS3IUS3_GetUseImageSpacing)
    SameDimension = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS3IUS3_SameDimension
    
    Comparable = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS3IUS3_Comparable
    
    __swig_destroy__ = _itkMorphologicalSharpeningImageFilterPython.delete_itkMorphologicalSharpeningImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalSharpeningImageFilterIUS3IUS3

        Create a new object of the class itkMorphologicalSharpeningImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalSharpeningImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalSharpeningImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalSharpeningImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalSharpeningImageFilterIUS3IUS3 in _itkMorphologicalSharpeningImageFilterPython:
_itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS3IUS3_swigregister(itkMorphologicalSharpeningImageFilterIUS3IUS3)
itkMorphologicalSharpeningImageFilterIUS3IUS3___New_orig__ = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS3IUS3___New_orig__
itkMorphologicalSharpeningImageFilterIUS3IUS3_cast = _itkMorphologicalSharpeningImageFilterPython.itkMorphologicalSharpeningImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def morphological_sharpening_image_filter(*args, **kwargs):
    """Procedural interface for MorphologicalSharpeningImageFilter"""
    import itk
    instance = itk.MorphologicalSharpeningImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def morphological_sharpening_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MorphologicalSharpeningImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.MorphologicalSharpeningImageFilter.values()[0]
    else:
        filter_object = itk.MorphologicalSharpeningImageFilter

    morphological_sharpening_image_filter.__doc__ = filter_object.__doc__
    morphological_sharpening_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    morphological_sharpening_image_filter.__doc__ += "Available Keyword Arguments:\n"
    morphological_sharpening_image_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



