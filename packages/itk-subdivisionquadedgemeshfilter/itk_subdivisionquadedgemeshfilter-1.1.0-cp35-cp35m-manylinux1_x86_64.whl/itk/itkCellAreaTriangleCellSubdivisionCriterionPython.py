# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCellAreaTriangleCellSubdivisionCriterionPython
else:
    import _itkCellAreaTriangleCellSubdivisionCriterionPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkCellAreaTriangleCellSubdivisionCriterionPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkCellAreaTriangleCellSubdivisionCriterionPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkQuadEdgeMeshBasePython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.ITKCommonBasePython
import itk.itkQuadEdgeMeshLineCellPython
import itk.itkArrayPython
import itk.itkQuadEdgeCellTraitsInfoPython
import itk.itkQuadEdgeMeshPointPython
import itk.itkGeometricalQuadEdgePython
import itk.itkQuadEdgePython
import itk.itkImagePython
import itk.itkCovariantVectorPython
import itk.itkRGBPixelPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMapContainerPython
import itk.itkQuadEdgeMeshSubdivisionCriterionPython

def itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_New():
    return itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2.New()

class itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD2):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2___New_orig__)
    Clone = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_Clone)
    GetMaximumArea = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_GetMaximumArea)
    SetMaximumArea = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_SetMaximumArea)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2
    cast = _swig_new_static_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_cast)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_swigregister(itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2)
itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2___New_orig__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2___New_orig__
itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_cast = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD2_cast


def itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_New():
    return itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3.New()

class itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLinearTriangleD3):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3___New_orig__)
    Clone = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_Clone)
    GetMaximumArea = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_GetMaximumArea)
    SetMaximumArea = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_SetMaximumArea)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3
    cast = _swig_new_static_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_cast)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_swigregister(itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3)
itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3___New_orig__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3___New_orig__
itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_cast = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLinearTriangleD3_cast


def itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_New():
    return itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2.New()

class itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD2):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2___New_orig__)
    Clone = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_Clone)
    GetMaximumArea = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_GetMaximumArea)
    SetMaximumArea = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_SetMaximumArea)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2
    cast = _swig_new_static_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_cast)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_swigregister(itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2)
itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2___New_orig__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2___New_orig__
itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_cast = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD2_cast


def itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_New():
    return itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3.New()

class itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionLoopTriangleD3):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3___New_orig__)
    Clone = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_Clone)
    GetMaximumArea = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_GetMaximumArea)
    SetMaximumArea = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_SetMaximumArea)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3
    cast = _swig_new_static_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_cast)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_swigregister(itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3)
itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3___New_orig__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3___New_orig__
itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_cast = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionLoopTriangleD3_cast


def itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_New():
    return itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2.New()

class itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD2):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2___New_orig__)
    Clone = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_Clone)
    GetMaximumArea = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_GetMaximumArea)
    SetMaximumArea = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_SetMaximumArea)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2
    cast = _swig_new_static_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_cast)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_swigregister(itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2)
itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2___New_orig__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2___New_orig__
itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_cast = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD2_cast


def itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_New():
    return itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3.New()

class itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionModifiedButterflyTriangleD3):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3___New_orig__)
    Clone = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_Clone)
    GetMaximumArea = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_GetMaximumArea)
    SetMaximumArea = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_SetMaximumArea)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3
    cast = _swig_new_static_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_cast)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_swigregister(itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3)
itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3___New_orig__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3___New_orig__
itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_cast = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionModifiedButterflyTriangleD3_cast


def itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_New():
    return itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2.New()

class itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD2):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2___New_orig__)
    Clone = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_Clone)
    GetMaximumArea = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_GetMaximumArea)
    SetMaximumArea = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_SetMaximumArea)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2
    cast = _swig_new_static_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_cast)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_swigregister(itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2)
itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2___New_orig__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2___New_orig__
itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_cast = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD2_cast


def itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_New():
    return itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3.New()

class itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3(itk.itkQuadEdgeMeshSubdivisionCriterionPython.itkQuadEdgeMeshSubdivisionCriterionSquareThreeTriangleD3):
    r"""Proxy of C++ itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3___New_orig__)
    Clone = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_Clone)
    GetMaximumArea = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_GetMaximumArea)
    SetMaximumArea = _swig_new_instance_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_SetMaximumArea)
    __swig_destroy__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.delete_itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3
    cast = _swig_new_static_method(_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_cast)

    def New(*args, **kargs):
        """New() -> itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3

        Create a new object of the class itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3 in _itkCellAreaTriangleCellSubdivisionCriterionPython:
_itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_swigregister(itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3)
itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3___New_orig__ = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3___New_orig__
itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_cast = _itkCellAreaTriangleCellSubdivisionCriterionPython.itkCellAreaTriangleCellSubdivisionCriterionSquareThreeTriangleD3_cast



