# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkConditionalSubdivisionQuadEdgeMeshFilterPython
else:
    import _itkConditionalSubdivisionQuadEdgeMeshFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython
import itk.itkQuadEdgeMeshBasePython
import itk.itkQuadEdgeMeshPointPython
import itk.itkGeometricalQuadEdgePython
import itk.itkQuadEdgePython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkQuadEdgeCellTraitsInfoPython
import itk.itkQuadEdgeMeshLineCellPython
import itk.itkArrayPython
import itk.itkImagePython
import itk.itkCovariantVectorPython
import itk.itkRGBAPixelPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkMapContainerPython
import itk.itkQuadEdgeMeshSubdivisionCriterionPython

def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2___New_orig__)
    Clone = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Clone)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SameTypeCheckContainer
    
    SetSubdivisionCriterion = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SetSubdivisionCriterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2
    cast = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2___New_orig__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2___New_orig__
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_cast = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_cast


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2___New_orig__)
    Clone = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_Clone)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_SameTypeCheckContainer
    
    SetSubdivisionCriterion = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_SetSubdivisionCriterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2
    cast = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2___New_orig__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2___New_orig__
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_cast = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleEdgeD2_cast


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2___New_orig__)
    Clone = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Clone)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SameTypeCheckContainer
    
    SetSubdivisionCriterion = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SetSubdivisionCriterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2
    cast = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2___New_orig__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2___New_orig__
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_cast = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_cast


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2___New_orig__)
    Clone = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_Clone)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_SameTypeCheckContainer
    
    SetSubdivisionCriterion = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_SetSubdivisionCriterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2
    cast = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2___New_orig__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2___New_orig__
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_cast = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleEdgeD2_cast


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2___New_orig__)
    Clone = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Clone)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SameTypeCheckContainer
    
    SetSubdivisionCriterion = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SetSubdivisionCriterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2
    cast = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2___New_orig__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2___New_orig__
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_cast = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_cast


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2___New_orig__)
    Clone = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_Clone)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_SameTypeCheckContainer
    
    SetSubdivisionCriterion = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_SetSubdivisionCriterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2
    cast = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2___New_orig__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2___New_orig__
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_cast = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleEdgeD2_cast


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2___New_orig__)
    Clone = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Clone)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SameTypeCheckContainer
    
    SetSubdivisionCriterion = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SetSubdivisionCriterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2
    cast = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2___New_orig__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2___New_orig__
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_cast = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_cast


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3___New_orig__)
    Clone = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Clone)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SameTypeCheckContainer
    
    SetSubdivisionCriterion = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SetSubdivisionCriterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3
    cast = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3___New_orig__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3___New_orig__
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_cast = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_cast


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3___New_orig__)
    Clone = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_Clone)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_SameTypeCheckContainer
    
    SetSubdivisionCriterion = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_SetSubdivisionCriterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3
    cast = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3___New_orig__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3___New_orig__
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_cast = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleEdgeD3_cast


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3___New_orig__)
    Clone = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Clone)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SameTypeCheckContainer
    
    SetSubdivisionCriterion = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SetSubdivisionCriterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3
    cast = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3___New_orig__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3___New_orig__
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_cast = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_cast


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3___New_orig__)
    Clone = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_Clone)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_SameTypeCheckContainer
    
    SetSubdivisionCriterion = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_SetSubdivisionCriterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3
    cast = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3___New_orig__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3___New_orig__
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_cast = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleEdgeD3_cast


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3___New_orig__)
    Clone = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Clone)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SameTypeCheckContainer
    
    SetSubdivisionCriterion = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SetSubdivisionCriterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3
    cast = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3___New_orig__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3___New_orig__
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_cast = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_cast


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3___New_orig__)
    Clone = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_Clone)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_SameTypeCheckContainer
    
    SetSubdivisionCriterion = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_SetSubdivisionCriterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3
    cast = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3___New_orig__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3___New_orig__
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_cast = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleEdgeD3_cast


def itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_New():
    return itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.New()

class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3___New_orig__)
    Clone = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Clone)
    SameTypeCheck = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SameTypeCheck
    
    SameTypeCheckMesh = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SameTypeCheckMesh
    
    SameTypeCheckContainer = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SameTypeCheckContainer
    
    SetSubdivisionCriterion = _swig_new_instance_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SetSubdivisionCriterion)
    __swig_destroy__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.delete_itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3
    cast = _swig_new_static_method(_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_cast)

    def New(*args, **kargs):
        """New() -> itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3

        Create a new object of the class itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 in _itkConditionalSubdivisionQuadEdgeMeshFilterPython:
_itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_swigregister(itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3)
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3___New_orig__ = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3___New_orig__
itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_cast = _itkConditionalSubdivisionQuadEdgeMeshFilterPython.itkConditionalSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def conditional_subdivision_quad_edge_mesh_filter(*args, **kwargs):
    """Procedural interface for ConditionalSubdivisionQuadEdgeMeshFilter"""
    import itk
    instance = itk.ConditionalSubdivisionQuadEdgeMeshFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def conditional_subdivision_quad_edge_mesh_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ConditionalSubdivisionQuadEdgeMeshFilter, itkTemplate.itkTemplate):
        filter_object = itk.ConditionalSubdivisionQuadEdgeMeshFilter.values()[0]
    else:
        filter_object = itk.ConditionalSubdivisionQuadEdgeMeshFilter

    conditional_subdivision_quad_edge_mesh_filter.__doc__ = filter_object.__doc__
    conditional_subdivision_quad_edge_mesh_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    conditional_subdivision_quad_edge_mesh_filter.__doc__ += "Available Keyword Arguments:\n"
    conditional_subdivision_quad_edge_mesh_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



