# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython
else:
    import _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython
import itk.itkQuadEdgeMeshBasePython
import itk.itkQuadEdgeMeshPointPython
import itk.itkGeometricalQuadEdgePython
import itk.itkQuadEdgePython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkQuadEdgeCellTraitsInfoPython
import itk.itkQuadEdgeMeshLineCellPython
import itk.itkArrayPython
import itk.itkMapContainerPython
import itk.itkImagePython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkCovariantVectorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkRGBPixelPython

def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2___New_orig__)
    Clone = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_Clone)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SameTypeCheck
    
    SetResolutionLevels = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SetResolutionLevels)
    GetResolutionLevels = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_GetResolutionLevels)
    SetCellsToBeSubdivided = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_SetCellsToBeSubdivided)
    GetCellsToBeSubdivided = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_GetCellsToBeSubdivided)
    AddSubdividedCellId = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_AddSubdividedCellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2
    cast = _swig_new_static_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_cast)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2___New_orig__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2___New_orig__
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_cast = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LinearTriangleD2_cast


def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2___New_orig__)
    Clone = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_Clone)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SameTypeCheck
    
    SetResolutionLevels = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SetResolutionLevels)
    GetResolutionLevels = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_GetResolutionLevels)
    SetCellsToBeSubdivided = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_SetCellsToBeSubdivided)
    GetCellsToBeSubdivided = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_GetCellsToBeSubdivided)
    AddSubdividedCellId = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_AddSubdividedCellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2
    cast = _swig_new_static_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_cast)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2___New_orig__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2___New_orig__
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_cast = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2LoopTriangleD2_cast


def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2___New_orig__)
    Clone = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_Clone)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SameTypeCheck
    
    SetResolutionLevels = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SetResolutionLevels)
    GetResolutionLevels = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_GetResolutionLevels)
    SetCellsToBeSubdivided = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_SetCellsToBeSubdivided)
    GetCellsToBeSubdivided = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_GetCellsToBeSubdivided)
    AddSubdividedCellId = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_AddSubdividedCellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2
    cast = _swig_new_static_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_cast)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2___New_orig__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2___New_orig__
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_cast = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2ModifiedButterflyTriangleD2_cast


def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2___New_orig__)
    Clone = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_Clone)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SameTypeCheck
    
    SetResolutionLevels = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SetResolutionLevels)
    GetResolutionLevels = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_GetResolutionLevels)
    SetCellsToBeSubdivided = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_SetCellsToBeSubdivided)
    GetCellsToBeSubdivided = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_GetCellsToBeSubdivided)
    AddSubdividedCellId = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_AddSubdividedCellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2
    cast = _swig_new_static_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_cast)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2___New_orig__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2___New_orig__
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_cast = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD2SquareThreeTriangleD2_cast


def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3___New_orig__)
    Clone = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_Clone)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SameTypeCheck
    
    SetResolutionLevels = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SetResolutionLevels)
    GetResolutionLevels = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_GetResolutionLevels)
    SetCellsToBeSubdivided = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_SetCellsToBeSubdivided)
    GetCellsToBeSubdivided = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_GetCellsToBeSubdivided)
    AddSubdividedCellId = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_AddSubdividedCellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3
    cast = _swig_new_static_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_cast)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3___New_orig__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3___New_orig__
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_cast = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LinearTriangleD3_cast


def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3___New_orig__)
    Clone = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_Clone)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SameTypeCheck
    
    SetResolutionLevels = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SetResolutionLevels)
    GetResolutionLevels = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_GetResolutionLevels)
    SetCellsToBeSubdivided = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_SetCellsToBeSubdivided)
    GetCellsToBeSubdivided = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_GetCellsToBeSubdivided)
    AddSubdividedCellId = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_AddSubdividedCellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3
    cast = _swig_new_static_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_cast)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3___New_orig__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3___New_orig__
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_cast = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3LoopTriangleD3_cast


def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3___New_orig__)
    Clone = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_Clone)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SameTypeCheck
    
    SetResolutionLevels = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SetResolutionLevels)
    GetResolutionLevels = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_GetResolutionLevels)
    SetCellsToBeSubdivided = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_SetCellsToBeSubdivided)
    GetCellsToBeSubdivided = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_GetCellsToBeSubdivided)
    AddSubdividedCellId = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_AddSubdividedCellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3
    cast = _swig_new_static_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_cast)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3___New_orig__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3___New_orig__
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_cast = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3ModifiedButterflyTriangleD3_cast


def itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_New():
    return itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.New()

class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3___New_orig__)
    Clone = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_Clone)
    SameTypeCheck = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SameTypeCheck
    
    SetResolutionLevels = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SetResolutionLevels)
    GetResolutionLevels = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_GetResolutionLevels)
    SetCellsToBeSubdivided = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_SetCellsToBeSubdivided)
    GetCellsToBeSubdivided = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_GetCellsToBeSubdivided)
    AddSubdividedCellId = _swig_new_instance_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_AddSubdividedCellId)
    __swig_destroy__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.delete_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3
    cast = _swig_new_static_method(_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_cast)

    def New(*args, **kargs):
        """New() -> itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3

        Create a new object of the class itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3 in _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython:
_itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_swigregister(itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3)
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3___New_orig__ = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3___New_orig__
itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_cast = _itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterPython.itkIterativeTriangleCellSubdivisionQuadEdgeMeshFilterQEMD3SquareThreeTriangleD3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def iterative_triangle_cell_subdivision_quad_edge_mesh_filter(*args, **kwargs):
    """Procedural interface for IterativeTriangleCellSubdivisionQuadEdgeMeshFilter"""
    import itk
    instance = itk.IterativeTriangleCellSubdivisionQuadEdgeMeshFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def iterative_triangle_cell_subdivision_quad_edge_mesh_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.IterativeTriangleCellSubdivisionQuadEdgeMeshFilter, itkTemplate.itkTemplate):
        filter_object = itk.IterativeTriangleCellSubdivisionQuadEdgeMeshFilter.values()[0]
    else:
        filter_object = itk.IterativeTriangleCellSubdivisionQuadEdgeMeshFilter

    iterative_triangle_cell_subdivision_quad_edge_mesh_filter.__doc__ = filter_object.__doc__
    iterative_triangle_cell_subdivision_quad_edge_mesh_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    iterative_triangle_cell_subdivision_quad_edge_mesh_filter.__doc__ += "Available Keyword Arguments:\n"
    iterative_triangle_cell_subdivision_quad_edge_mesh_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



