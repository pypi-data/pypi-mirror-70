# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkNormalizedCorrelationTwoImageToOneImageMetricPython
else:
    import _itkNormalizedCorrelationTwoImageToOneImageMetricPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkOptimizerParametersPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkArrayPython
import itk.ITKCommonBasePython
import itk.itkTwoImageToOneImageMetricPython
import itk.ITKCostFunctionsPython
import itk.itkCostFunctionPython
import itk.vnl_least_squares_functionPython
import itk.vnl_cost_functionPython
import itk.vnl_unary_functionPython
import itk.itkArray2DPython
import itk.itkInterpolateImageFunctionPython
import itk.itkImageFunctionBasePython
import itk.itkPointPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkFunctionBasePython
import itk.itkRGBPixelPython
import itk.itkCovariantVectorPython
import itk.itkImagePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkSpatialObjectBasePython
import itk.itkAffineTransformPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkVariableLengthVectorPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkBoundingBoxPython
import itk.itkVectorContainerPython
import itk.itkMapContainerPython
import itk.itkSpatialObjectPropertyPython

def itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2_New():
    return itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2.New()

class itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2(itk.itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2):
    r"""Proxy of C++ itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2_Clone)
    SetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2_SetSubtractMean)
    GetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2_GetSubtractMean)
    SubtractMeanOn = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2_SubtractMeanOn)
    SubtractMeanOff = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2_SubtractMeanOff)
    __swig_destroy__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.delete_itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2
    cast = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2

        Create a new object of the class itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2 in _itkNormalizedCorrelationTwoImageToOneImageMetricPython:
_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2_swigregister(itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2)
itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2___New_orig__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2___New_orig__
itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2_cast = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID2ID2_cast


def itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3_New():
    return itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3.New()

class itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3(itk.itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3):
    r"""Proxy of C++ itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3_Clone)
    SetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3_SetSubtractMean)
    GetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3_GetSubtractMean)
    SubtractMeanOn = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3_SubtractMeanOn)
    SubtractMeanOff = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3_SubtractMeanOff)
    __swig_destroy__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.delete_itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3
    cast = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3

        Create a new object of the class itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3 in _itkNormalizedCorrelationTwoImageToOneImageMetricPython:
_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3_swigregister(itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3)
itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3___New_orig__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3___New_orig__
itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3_cast = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricID3ID3_cast


def itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_New():
    return itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2.New()

class itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2(itk.itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2):
    r"""Proxy of C++ itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_Clone)
    SetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_SetSubtractMean)
    GetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_GetSubtractMean)
    SubtractMeanOn = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_SubtractMeanOn)
    SubtractMeanOff = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_SubtractMeanOff)
    __swig_destroy__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.delete_itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2
    cast = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2

        Create a new object of the class itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2 in _itkNormalizedCorrelationTwoImageToOneImageMetricPython:
_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_swigregister(itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2)
itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2___New_orig__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2___New_orig__
itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_cast = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF2IF2_cast


def itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_New():
    return itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3.New()

class itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3(itk.itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3):
    r"""Proxy of C++ itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_Clone)
    SetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_SetSubtractMean)
    GetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_GetSubtractMean)
    SubtractMeanOn = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_SubtractMeanOn)
    SubtractMeanOff = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_SubtractMeanOff)
    __swig_destroy__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.delete_itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3
    cast = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3

        Create a new object of the class itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3 in _itkNormalizedCorrelationTwoImageToOneImageMetricPython:
_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_swigregister(itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3)
itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3___New_orig__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3___New_orig__
itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_cast = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIF3IF3_cast


def itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_New():
    return itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2.New()

class itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2(itk.itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2):
    r"""Proxy of C++ itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_Clone)
    SetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_SetSubtractMean)
    GetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_GetSubtractMean)
    SubtractMeanOn = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_SubtractMeanOn)
    SubtractMeanOff = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_SubtractMeanOff)
    __swig_destroy__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.delete_itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2
    cast = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2

        Create a new object of the class itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2 in _itkNormalizedCorrelationTwoImageToOneImageMetricPython:
_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_swigregister(itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2)
itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2___New_orig__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2___New_orig__
itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_cast = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS2ISS2_cast


def itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_New():
    return itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3.New()

class itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3(itk.itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3):
    r"""Proxy of C++ itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_Clone)
    SetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_SetSubtractMean)
    GetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_GetSubtractMean)
    SubtractMeanOn = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_SubtractMeanOn)
    SubtractMeanOff = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_SubtractMeanOff)
    __swig_destroy__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.delete_itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3
    cast = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3

        Create a new object of the class itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3 in _itkNormalizedCorrelationTwoImageToOneImageMetricPython:
_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_swigregister(itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3)
itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3___New_orig__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3___New_orig__
itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_cast = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricISS3ISS3_cast


def itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_New():
    return itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2.New()

class itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2(itk.itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2):
    r"""Proxy of C++ itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_Clone)
    SetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_SetSubtractMean)
    GetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_GetSubtractMean)
    SubtractMeanOn = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_SubtractMeanOn)
    SubtractMeanOff = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_SubtractMeanOff)
    __swig_destroy__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.delete_itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2
    cast = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2

        Create a new object of the class itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2 in _itkNormalizedCorrelationTwoImageToOneImageMetricPython:
_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_swigregister(itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2)
itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2___New_orig__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2___New_orig__
itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_cast = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC2IUC2_cast


def itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_New():
    return itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3.New()

class itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3(itk.itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3):
    r"""Proxy of C++ itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_Clone)
    SetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_SetSubtractMean)
    GetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_GetSubtractMean)
    SubtractMeanOn = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_SubtractMeanOn)
    SubtractMeanOff = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_SubtractMeanOff)
    __swig_destroy__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.delete_itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3
    cast = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3

        Create a new object of the class itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3 in _itkNormalizedCorrelationTwoImageToOneImageMetricPython:
_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_swigregister(itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3)
itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3___New_orig__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3___New_orig__
itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_cast = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUC3IUC3_cast


def itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_New():
    return itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2.New()

class itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2(itk.itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2):
    r"""Proxy of C++ itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_Clone)
    SetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_SetSubtractMean)
    GetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_GetSubtractMean)
    SubtractMeanOn = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_SubtractMeanOn)
    SubtractMeanOff = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_SubtractMeanOff)
    __swig_destroy__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.delete_itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2
    cast = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2

        Create a new object of the class itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2 in _itkNormalizedCorrelationTwoImageToOneImageMetricPython:
_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_swigregister(itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2)
itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2___New_orig__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2___New_orig__
itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_cast = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS2IUS2_cast


def itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_New():
    return itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3.New()

class itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3(itk.itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3):
    r"""Proxy of C++ itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_Clone)
    SetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_SetSubtractMean)
    GetSubtractMean = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_GetSubtractMean)
    SubtractMeanOn = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_SubtractMeanOn)
    SubtractMeanOff = _swig_new_instance_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_SubtractMeanOff)
    __swig_destroy__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.delete_itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3
    cast = _swig_new_static_method(_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3

        Create a new object of the class itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3 in _itkNormalizedCorrelationTwoImageToOneImageMetricPython:
_itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_swigregister(itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3)
itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3___New_orig__ = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3___New_orig__
itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_cast = _itkNormalizedCorrelationTwoImageToOneImageMetricPython.itkNormalizedCorrelationTwoImageToOneImageMetricIUS3IUS3_cast



