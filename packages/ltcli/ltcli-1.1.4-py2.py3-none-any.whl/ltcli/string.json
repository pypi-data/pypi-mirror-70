{
    "ask_hosts": "Please type hosts separated by comma(,)",
    "ask_installer": [
        "Select installer",
        "",
        "    [INSTALLER LIST]",
        "{list}",
        "",
        "Please enter the number, file path or url of the installer you want to use.",
        "You can also add file in list by copy to '$FBPATH/releases/'"
    ],
    "error_download_installer": "Fail to download from '{url}', please try again.",
    "error_select_number": "Choose a number between 1 and {max_number}, please try again.",
    "error_type_installer_path": "File not existed: '{file_path}', please try again.",
    "error_invalid_input": "Invalid input: '{value}', please try again.",
    "error_invalid_range": "Invalid range: '{value}', please try again.",
    "error_invalid_path": "Invalid path: '{value}', please try again.",
    "error_invalid_key": "Invalid key: '{key}'",
    "ask_master_count": "How many masters would you like to create on each host?",
    "error_master_count_less_than_1": "The number of master must be greater than 0, please try again.",
    "ask_ports": "Please type ports separate with comma(,) and use hyphen(-) for range.",
    "error_port_range": "Use port between {minimum} and {maximum}: '{value}'",
    "error_port_count_different": "You type count '{advance}' at first, but now count is '{current}', please try again.",
    "ask_replicas": "How many replicas would you like to create on each master?",
    "error_replicas_less_than_0": "The number of slave must be greater than or equal to 0, please try again.",
    "ask_ssd_count": "How many ssd would you like to use?",
    "error_ssd_count_less_than_1": "The number of ssd must be greater than 0, plase try again.",
    "ask_base_directory": "Type base directory for LightningDB.",
    "ask_db_path": "Type prefix of db path",
    "ask_host_for_monitor": [
        "Select host",
        "",
        "    [HOST LIST]",
        "{list}",
        "",
        "Please enter the number you want to see log."
    ],
    "error_option_type_not_number": "option '--{option}' can use only number.",
    "error_option_type_not_boolean": "option '--{option}' can use only 'True' or 'Flase'.",
    "error_option_type_not_float": "option '--{option}' can use only number(include float).",
    "error_option_use_with": "option '--{option}' can used only with option '--{with_option}'",
    "use_host_port_or_option_all": "Enter host and port or use '--all' option.",
    "error_not_found_command_tail": "Need to linux command 'tail'.",
    "error_not_found_command_watch": "Cannot found command 'watch'. Option '--n' ignored.",
    "message_for_exit": "Press Ctrl-c for exit.",
    "error_invalid_cluster_on_deploy": "Select cluster first or type cluster id with argument.",
    "error_deploy_strategy": "DeployStrategyError: '{value}'. Select in {list}",
    "error_exist_disconnected_master": "There is disconnected master.",
    "error_all_disconnected_master": "All master redis disconnected.",
    "error_need_to_slave": "Need to slave.",
    "transfer_and_execute_installer": "Tranfer intaller and execute...",
    "error_execute_installer": "Fail to execute installer '{installer}'.",
    "failover_on_deploy": "Replace master to slave.",
    "redis_failover": "Failover {slave_addr} for {master_addr}",
    "error_redis_failover": "Fail to cluster failover.",
    "retry": "retry: {try_count}",
    "ask_deploy_again": "(Watch out) Cluster {cluster_id} is already deployed. Do you want to deploy again?",
    "cancel": "Cancel.",
    "ask_restore_conf": "Do you want to restore conf?",
    "ask_load_history_of_previous_modification": "There is history of modification. Do you want to load?",
    "confirm_deploy_information": "Do you want to proceed with the deploy according to the above information?",
    "error_exist_unavailable_host": "There are unavailable host.",
    "error_not_include_localhost": "Must include localhost.",
    "check_port": "Check port...",
    "ask_port_collision": "(Watch out) The above ports are already in use. Do you want to proceed?",
    "check_cluster_exist": "Checking cluster exist...",
    "error_cluster_collision": "Cluster information exist on some hosts.",
    "sync_conf": "Sync conf...",
    "error_sync_conf": "Fail to sync conf.",
    "error_ssh_connection": "Fail to ssh connection: '{host}'.",
    "error_host_connection": "Fail to host connection: '{host}'.",
    "error_unknown_host": "Unknown host name: '{host}'.",
    "complete_deploy": "Complete to deploy cluster {cluster_id}.",
    "suggest_after_deploy": "We suggest that you begin by typing: cluster create",
    "erorr_file_not_exist": "FileNotExistError: '{file}'",
    "cancel_command_input": "Canceled",
    "notify_command_replacement_is_possible": "You can use '{new}' instead of '{old}'.",
    "backup_master_log": "Backup redis master log in each MASTER hosts...",
    "backup_slave_log": "Backup redis slave log in each SLAVE hosts...",
    "backup_conf": "Backup conf of cluster {cluster_id}...",
    "backup_cluster": "Backup cluster {cluster_id} at {host}...",
    "skip_backup": "Skip backup at {host}, cannot found '{file}'",
    "restore_conf": "Restore conf to cluster {cluster_id}...",
    "create_cluster": "Create cluster...",
    "complete_cluster_create": "Create cluster completion.",
    "confirm_replicate_information": "Do you want to proceed with replicate according to the above information?",
    "confirm_cluster_create": "Do you want to proceed with cluster create according to the above information?",
    "stop_slave_cluster": "Stoping slave cluster of redis...",
    "complete_stop_slave_cluster": "Complete all slave redis process down.",
    "error_max_try_stop_redis": "Fail to stop redis: max try exceed.",
    "error_max_try_start_redis": "Fail to start redis: max try exceed.",
    "stop_master_cluster": "Stopping master cluster of redis...",
    "complete_stop_master_redis": "Complete all master redis process down",
    "mkdir_redis_data_for_master_cluster": "create redis data directory in each MASTER",
    "mkdir_redis_data_for_slave_cluster": "create redis data directory in each SLAVE",
    "wait_all_redis_up": "Wait until all redis process up...",
    "complete_all_redis_up": "Complete all redis process up.",
    "error_too_many_redis": "too many redis process up",
    "command_recommendation": "Recommendation Command: '{cmd}'",
    "check_hosts_connection": "Check status of hosts...",
    "remove_all_redis_log": "Remove all of redis log",
    "clean_master_cluster": "Clean redis conf, node conf, db data of master",
    "clean_slave_cluster": "Clean redis conf, node conf, db data of slave",
    "error_conf_not_exist": "Conf file not exist at '{host}'",
    "start_redis_of_master_cluster": "Starting master nodes : {host} : {ports} ...",
    "start_redis_of_slave_cluster": "Starting slave nodes : {host} : {ports} ...",
    "try_replicate": "Replicate [M] {master_addr} - [S] {slave_addr}",
    "error_replicate": "Fail replicate [M] {master_addr} - [S] {slave_addr}",
    "complete_replicate": "{success} / {total} replicate completion.",
    "all_redis_disconnected": "No redis are available for connection.",
    "error_need_to_cluster": "Need to create cluster.",
    "error_master_has_no_alive_slave": "Not exist alive slave: '{master_addr}'",
    "counting_alive_redis": "alive redis {alive}/{total}",
    "complete_conf_edit": "Complete edit.",
    "error_cluster_start_master_collision": [
        "Fail to start master nodes... Must be checked running master processes!",
        "We estimate that redis 'MASTER' process is {count}"
    ],
    "error_cluster_start_slave_collision": [
        "Fail to start slave nodes... Must be checked running slave processes!",
        "We estimate that redis 'SLAVE' process is {count}"
    ],
    "error_master_redis_less_than_3": "To create cluster, 3 master processes should be included at least.",
    "error_cluster_start_port_collision": "The port range is already taken.",
    "use_cluster": "Cluster '{cluster_id}' selected.",
    "error_slave_host_empty": "Slave host cannot empty.",
    "error_slave_port_empty": "Slave port cannot empty.",
    "error_no_alive_slave_for_failover": "'{host}' has no alive slave to proceed failover",
    "already_all_master_alive": "All master is alive.",
    "already_all_redis_alive": "All redis is alive.",
    "redis_run": "run {host}:{ports}",
    "redis_restart": "restart {host}:{ports}",
    "error_not_found_any_backup": "Cannot found any backup.",
    "error_not_found_backup": "Cannot found '{tag}'",
    "check_backup_info": "Check backup info...",
    "cluster_delete_complete": "Complete to delete cluster {cluster_id}",
    "restore_cluster": "Restore {tag} at {host}...",
    "error_need_props_key": "{key} cannot empty in props.",
    "error_cluster_id": "Invalid cluster id '{cluster_id}'",
    "error_cluster_not_exist": "Not exist cluster '{cluster_id}'",
    "error_ssh_command_execute": "[ExitCode {code}] Fail execute command at '{host}': {stderr}",
    "error_env": "you should set env '{env}'",
    "error_logging_in_file": "Could not logging in file. Confirm and restart.",
    "change_log_level": "Changed log level to {level}.",
    "file_download": "Download {file_name}",
    "error_http_request": "HTTP Status {code}: {msg}",
    "error_http_connection": "HTTP connection fail: {msg}",
    "error_save_config": "Fail to save config: {key}, {file}",
    "save_config_to_template": "Save config to template...",
    "cluster_meet": "Cluster meet...",
    "adding_slot": "Adding slots...",
    "check_cluster_state_assign_slot": "Check cluster state and assign slot...",
    "try_connection": "Connecting...",
    "loading_dataset": "LOADING Redis is loading the dataset in memory.",
    "apply_after_restart": "Applies after restart."
}