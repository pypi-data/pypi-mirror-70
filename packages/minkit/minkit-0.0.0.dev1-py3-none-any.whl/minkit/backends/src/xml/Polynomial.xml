<!--
 MIT License

 Copyright (c) 2020 Miguel Ramos Pernas
-->
<!--Polynomial PDF-->
<PDF>
  <variable_parameters n="n" p="p"/>
  <function>
    <data x="x"/>
    <code>
      if ( n == 0 )
        return 1.;

      double out = x * p[n - 1];
      for ( int i = 1; i &lt; n; ++i )
        out = x * (out + p[n - i - 1]);

      return out + 1.;
    </code>
  </function>
  <integral>
    <bounds xmin="xmin" xmax="xmax"/>
    <code>
      if ( n == 0 )
        return xmax - xmin;

      // Right integral
      double r = xmax * p[n - 1] / (n + 1);
      for ( int i = 1; i &lt; n; ++i )
        r = xmax * (r + p[n - i - 1] / (n + 1 - i));

      // Left integral
      double l = xmin * p[n - 1] / (n + 1);
      for ( int i = 1; i &lt; n; ++i )
        l = xmin * (l + p[n - i - 1] / (n + 1 - i));

      return (1. + r) * xmax - (1. + l) * xmin;
    </code>
  </integral>
</PDF>
