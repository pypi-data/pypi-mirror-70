Metadata-Version: 2.1
Name: mypy-boto3-rds
Version: 1.13.23.0
Summary: Type annotations for boto3.RDS 1.13.23 service, generated by mypy-boto3-buider 1.0.9
Home-page: https://github.com/vemel/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://mypy-boto3-builder.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/vemel/mypy_boto3_builder
Project-URL: Tracker, https://github.com/vemel/mypy_boto3_builder/issues
Description: # mypy-boto3-rds
        
        [![PyPI - mypy-boto3-rds](https://img.shields.io/pypi/v/mypy-boto3-rds.svg?color=blue)](https://pypi.org/project/mypy-boto3-rds)
        [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mypy-boto3-rds.svg?color=blue)](https://pypi.org/project/mypy-boto3-rds)
        [![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
        
        Type annotations for
        [boto3.RDS 1.13.23](https://boto3.amazonaws.com/v1/documentation/api/1.13.23/reference/services/rds.html#RDS) service
        compatible with [mypy](https://github.com/python/mypy), [VSCode](https://code.visualstudio.com/),
        [PyCharm](https://www.jetbrains.com/pycharm/) and other tools.
        
        Generated by [mypy-boto3-buider 1.0.9](https://github.com/vemel/mypy_boto3_builder).
        
        More information can be found on [boto3-stubs](https://pypi.org/project/boto3-stubs/) page.
        
        - [mypy-boto3-rds](#mypy-boto3-rds)
          - [How to use](#how-to-use)
            - [Type checking](#type-checking)
          - [How it works](#how-it-works)
        
        ## How to use
        
        ### Type checking
        
        Make sure you have [mypy](https://github.com/python/mypy) installed and activated in your IDE.
        
        Install `boto3-stubs` for `RDS` service.
        
        ```bash
        python -m pip install boto3-stubs[rds]
        
        # update installed packages index
        mypy_boto3
        ```
        
        Use `boto3` with `mypy_boto3` in your project and enjoy type checking and auto-complete.
        
        ```python
        import boto3
        
        from mypy_boto3 import rds
        # alternative import if you do not want to install mypy_boto3 package
        # import mypy_boto3_rds as rds
        
        # Use this client as usual, now mypy can check if your code is valid.
        # Check if your IDE supports function overloads,
        # you probably do not need explicit type annotations
        # client = boto3.client("rds")
        client: rds.RDSClient = boto3.client("rds")
        
        # works for session as well
        session = boto3.session.Session(region="us-west-1")
        session_client: rds.RDSClient = session.client("rds")
        
        
        # Waiters need type annotation on creation
        db_cluster_snapshot_available_waiter: rds.DBClusterSnapshotAvailableWaiter = client.get_waiter("db_cluster_snapshot_available")
        db_cluster_snapshot_deleted_waiter: rds.DBClusterSnapshotDeletedWaiter = client.get_waiter("db_cluster_snapshot_deleted")
        db_instance_available_waiter: rds.DBInstanceAvailableWaiter = client.get_waiter("db_instance_available")
        db_instance_deleted_waiter: rds.DBInstanceDeletedWaiter = client.get_waiter("db_instance_deleted")
        db_snapshot_available_waiter: rds.DBSnapshotAvailableWaiter = client.get_waiter("db_snapshot_available")
        db_snapshot_completed_waiter: rds.DBSnapshotCompletedWaiter = client.get_waiter("db_snapshot_completed")
        db_snapshot_deleted_waiter: rds.DBSnapshotDeletedWaiter = client.get_waiter("db_snapshot_deleted")
        
        # Paginators need type annotation on creation
        describe_certificates_paginator: rds.DescribeCertificatesPaginator = client.get_paginator("describe_certificates")
        describe_custom_availability_zones_paginator: rds.DescribeCustomAvailabilityZonesPaginator = client.get_paginator("describe_custom_availability_zones")
        describe_db_cluster_backtracks_paginator: rds.DescribeDBClusterBacktracksPaginator = client.get_paginator("describe_db_cluster_backtracks")
        describe_db_cluster_endpoints_paginator: rds.DescribeDBClusterEndpointsPaginator = client.get_paginator("describe_db_cluster_endpoints")
        describe_db_cluster_parameter_groups_paginator: rds.DescribeDBClusterParameterGroupsPaginator = client.get_paginator("describe_db_cluster_parameter_groups")
        describe_db_cluster_parameters_paginator: rds.DescribeDBClusterParametersPaginator = client.get_paginator("describe_db_cluster_parameters")
        describe_db_cluster_snapshots_paginator: rds.DescribeDBClusterSnapshotsPaginator = client.get_paginator("describe_db_cluster_snapshots")
        describe_db_clusters_paginator: rds.DescribeDBClustersPaginator = client.get_paginator("describe_db_clusters")
        describe_db_engine_versions_paginator: rds.DescribeDBEngineVersionsPaginator = client.get_paginator("describe_db_engine_versions")
        describe_db_instance_automated_backups_paginator: rds.DescribeDBInstanceAutomatedBackupsPaginator = client.get_paginator("describe_db_instance_automated_backups")
        describe_db_instances_paginator: rds.DescribeDBInstancesPaginator = client.get_paginator("describe_db_instances")
        describe_db_log_files_paginator: rds.DescribeDBLogFilesPaginator = client.get_paginator("describe_db_log_files")
        describe_db_parameter_groups_paginator: rds.DescribeDBParameterGroupsPaginator = client.get_paginator("describe_db_parameter_groups")
        describe_db_parameters_paginator: rds.DescribeDBParametersPaginator = client.get_paginator("describe_db_parameters")
        describe_db_proxies_paginator: rds.DescribeDBProxiesPaginator = client.get_paginator("describe_db_proxies")
        describe_db_proxy_target_groups_paginator: rds.DescribeDBProxyTargetGroupsPaginator = client.get_paginator("describe_db_proxy_target_groups")
        describe_db_proxy_targets_paginator: rds.DescribeDBProxyTargetsPaginator = client.get_paginator("describe_db_proxy_targets")
        describe_db_security_groups_paginator: rds.DescribeDBSecurityGroupsPaginator = client.get_paginator("describe_db_security_groups")
        describe_db_snapshots_paginator: rds.DescribeDBSnapshotsPaginator = client.get_paginator("describe_db_snapshots")
        describe_db_subnet_groups_paginator: rds.DescribeDBSubnetGroupsPaginator = client.get_paginator("describe_db_subnet_groups")
        describe_engine_default_cluster_parameters_paginator: rds.DescribeEngineDefaultClusterParametersPaginator = client.get_paginator("describe_engine_default_cluster_parameters")
        describe_engine_default_parameters_paginator: rds.DescribeEngineDefaultParametersPaginator = client.get_paginator("describe_engine_default_parameters")
        describe_event_subscriptions_paginator: rds.DescribeEventSubscriptionsPaginator = client.get_paginator("describe_event_subscriptions")
        describe_events_paginator: rds.DescribeEventsPaginator = client.get_paginator("describe_events")
        describe_export_tasks_paginator: rds.DescribeExportTasksPaginator = client.get_paginator("describe_export_tasks")
        describe_global_clusters_paginator: rds.DescribeGlobalClustersPaginator = client.get_paginator("describe_global_clusters")
        describe_installation_media_paginator: rds.DescribeInstallationMediaPaginator = client.get_paginator("describe_installation_media")
        describe_option_group_options_paginator: rds.DescribeOptionGroupOptionsPaginator = client.get_paginator("describe_option_group_options")
        describe_option_groups_paginator: rds.DescribeOptionGroupsPaginator = client.get_paginator("describe_option_groups")
        describe_orderable_db_instance_options_paginator: rds.DescribeOrderableDBInstanceOptionsPaginator = client.get_paginator("describe_orderable_db_instance_options")
        describe_pending_maintenance_actions_paginator: rds.DescribePendingMaintenanceActionsPaginator = client.get_paginator("describe_pending_maintenance_actions")
        describe_reserved_db_instances_paginator: rds.DescribeReservedDBInstancesPaginator = client.get_paginator("describe_reserved_db_instances")
        describe_reserved_db_instances_offerings_paginator: rds.DescribeReservedDBInstancesOfferingsPaginator = client.get_paginator("describe_reserved_db_instances_offerings")
        describe_source_regions_paginator: rds.DescribeSourceRegionsPaginator = client.get_paginator("describe_source_regions")
        download_db_log_file_portion_paginator: rds.DownloadDBLogFilePortionPaginator = client.get_paginator("download_db_log_file_portion")
        ```
        
        ## How it works
        
        Fully automated [builder](https://github.com/vemel/mypy_boto3_builder) carefully generates
        type annotations for each service, patiently waiting for `boto3` updates. It delivers
        a drop-in type annotations for you and makes sure that:
        
        - All available `boto3` services are covered.
        - Each public class and method of every `boto3` service gets valid type annotations
          extracted from the documentation (blame `botocore` docs if types are incorrect).
        - Type annotations include up-to-date documentation.
        - Link to documentation is provided for every method.
        - Code is processed by [black](https://github.com/psf/black) for readability.
Keywords: boto3 rds type-annotations boto3-stubs mypy typeshed autocomplete auto-generated
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown
