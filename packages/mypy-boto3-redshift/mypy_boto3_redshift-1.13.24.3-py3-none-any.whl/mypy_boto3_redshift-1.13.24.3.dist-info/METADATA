Metadata-Version: 2.1
Name: mypy-boto3-redshift
Version: 1.13.24.3
Summary: Type annotations for boto3.Redshift 1.13.24 service, generated by mypy-boto3-buider 2.0.2
Home-page: https://github.com/vemel/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://mypy-boto3-builder.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/vemel/mypy_boto3_builder
Project-URL: Tracker, https://github.com/vemel/mypy_boto3_builder/issues
Keywords: boto3 redshift type-annotations boto3-stubs mypy typeshed autocomplete auto-generated
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: typing-extensions ; python_version < "3.8"

# mypy-boto3-redshift

[![PyPI - mypy-boto3-redshift](https://img.shields.io/pypi/v/mypy-boto3-redshift.svg?color=blue)](https://pypi.org/project/mypy-boto3-redshift)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mypy-boto3-redshift.svg?color=blue)](https://pypi.org/project/mypy-boto3-redshift)
[![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)

- [mypy-boto3-redshift](#mypy-boto3-redshift)
  - [How to use](#how-to-use)
  - [Automated type discovery](#automated-type-discovery)


Type annotations for
[boto3.Redshift 1.13.24](https://boto3.amazonaws.com/v1/documentation/api/1.13.24/reference/services/redshift.html#Redshift) service
compatible with [mypy](https://github.com/python/mypy), [VSCode](https://code.visualstudio.com/),
[PyCharm](https://www.jetbrains.com/pycharm/) and other tools.

Generated by [mypy-boto3-buider 2.0.2](https://github.com/vemel/mypy_boto3_builder).

More information can be found on [boto3-stubs](https://pypi.org/project/boto3-stubs/) page.

- [mypy-boto3-redshift](#mypy-boto3-redshift)
  - [How to use](#how-to-use)
    - [Type checking](#type-checking)
  - [How it works](#how-it-works)

## How to use

Make sure you have [mypy](https://github.com/python/mypy) installed and activated in your IDE.

Install `boto3-stubs` for `Redshift` service.

```bash
python -m pip install boto3-stubs[redshift]

# update installed packages index for automated type discovery
python -m mypy_boto3
```

Use `boto3` with `mypy_boto3_redshift` in your project and enjoy type checking and auto-complete.

```python
import boto3

from mypy_boto3_redshift import RedshiftClient

# Now mypy can check if your code is valid.
client: RedshiftClient = boto3.client("redshift")

# works for session as well
session = boto3.session.Session(region="us-west-1")
session_client: RedshiftClient = session.client("redshift")



# Waiters are also supported

import mypy_boto3_redshift.waiter as redshift_waiters

cluster_available_waiter: redshift_waiters.ClusterAvailableWaiter = client.get_waiter("cluster_available")
cluster_deleted_waiter: redshift_waiters.ClusterDeletedWaiter = client.get_waiter("cluster_deleted")
cluster_restored_waiter: redshift_waiters.ClusterRestoredWaiter = client.get_waiter("cluster_restored")
snapshot_available_waiter: redshift_waiters.SnapshotAvailableWaiter = client.get_waiter("snapshot_available")


# Annotated paginators are included as well

import mypy_boto3_redshift.paginator as redshift_paginators

describe_cluster_db_revisions_paginator: redshift_paginators.DescribeClusterDbRevisionsPaginator = client.get_paginator("describe_cluster_db_revisions")
describe_cluster_parameter_groups_paginator: redshift_paginators.DescribeClusterParameterGroupsPaginator = client.get_paginator("describe_cluster_parameter_groups")
describe_cluster_parameters_paginator: redshift_paginators.DescribeClusterParametersPaginator = client.get_paginator("describe_cluster_parameters")
describe_cluster_security_groups_paginator: redshift_paginators.DescribeClusterSecurityGroupsPaginator = client.get_paginator("describe_cluster_security_groups")
describe_cluster_snapshots_paginator: redshift_paginators.DescribeClusterSnapshotsPaginator = client.get_paginator("describe_cluster_snapshots")
describe_cluster_subnet_groups_paginator: redshift_paginators.DescribeClusterSubnetGroupsPaginator = client.get_paginator("describe_cluster_subnet_groups")
describe_cluster_tracks_paginator: redshift_paginators.DescribeClusterTracksPaginator = client.get_paginator("describe_cluster_tracks")
describe_cluster_versions_paginator: redshift_paginators.DescribeClusterVersionsPaginator = client.get_paginator("describe_cluster_versions")
describe_clusters_paginator: redshift_paginators.DescribeClustersPaginator = client.get_paginator("describe_clusters")
describe_default_cluster_parameters_paginator: redshift_paginators.DescribeDefaultClusterParametersPaginator = client.get_paginator("describe_default_cluster_parameters")
describe_event_subscriptions_paginator: redshift_paginators.DescribeEventSubscriptionsPaginator = client.get_paginator("describe_event_subscriptions")
describe_events_paginator: redshift_paginators.DescribeEventsPaginator = client.get_paginator("describe_events")
describe_hsm_client_certificates_paginator: redshift_paginators.DescribeHsmClientCertificatesPaginator = client.get_paginator("describe_hsm_client_certificates")
describe_hsm_configurations_paginator: redshift_paginators.DescribeHsmConfigurationsPaginator = client.get_paginator("describe_hsm_configurations")
describe_node_configuration_options_paginator: redshift_paginators.DescribeNodeConfigurationOptionsPaginator = client.get_paginator("describe_node_configuration_options")
describe_orderable_cluster_options_paginator: redshift_paginators.DescribeOrderableClusterOptionsPaginator = client.get_paginator("describe_orderable_cluster_options")
describe_reserved_node_offerings_paginator: redshift_paginators.DescribeReservedNodeOfferingsPaginator = client.get_paginator("describe_reserved_node_offerings")
describe_reserved_nodes_paginator: redshift_paginators.DescribeReservedNodesPaginator = client.get_paginator("describe_reserved_nodes")
describe_scheduled_actions_paginator: redshift_paginators.DescribeScheduledActionsPaginator = client.get_paginator("describe_scheduled_actions")
describe_snapshot_copy_grants_paginator: redshift_paginators.DescribeSnapshotCopyGrantsPaginator = client.get_paginator("describe_snapshot_copy_grants")
describe_snapshot_schedules_paginator: redshift_paginators.DescribeSnapshotSchedulesPaginator = client.get_paginator("describe_snapshot_schedules")
describe_table_restore_status_paginator: redshift_paginators.DescribeTableRestoreStatusPaginator = client.get_paginator("describe_table_restore_status")
describe_tags_paginator: redshift_paginators.DescribeTagsPaginator = client.get_paginator("describe_tags")
describe_usage_limits_paginator: redshift_paginators.DescribeUsageLimitsPaginator = client.get_paginator("describe_usage_limits")
get_reserved_node_exchange_offerings_paginator: redshift_paginators.GetReservedNodeExchangeOfferingsPaginator = client.get_paginator("get_reserved_node_exchange_offerings")
```

## Automated type discovery

`mypy_boto3` package can generate index for `mypy_boto3_redshift` and other installed services.

```bash
# Run this command when you add or remove service packages
python -m mypy_boto3
```

Generated index provides overloads for `boto3.client` and `boto3.service`,
`boto3.Session.client` and `boto3.Session.resource` functions,
so explicit type annotations are not needed.

- `mypy` supports function overloads as expected
- `PyCharm` also supports function overloads, but consumes a lot of RAM, use carefully
- `VSCode` does not currently support function overloads

Also, generated index allows you to import types from `mypy_boto3`:

```python
# you can replace imports
import mypy_boto3_redshift as redshift
from mypy_boto3_redshift import RedshiftClient

# with these
from mypy_boto3 import redshift
from mypy_boto3.redshift import RedshiftClient
```

