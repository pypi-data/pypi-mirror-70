Metadata-Version: 2.1
Name: nbreproduce
Version: 0.1.0
Summary: Reproduce Jupyter Notebooks inside Docker Containers.
Home-page: https://github.com/MridulS/nbreproduce
Author: Mridul Seth
Author-email: seth.mridul@gmail.com
License: BSD license
Description: nbreproduce
        ===========
        
        
        Reproduce Jupyter Notebooks inside Docker Containers using the `nbreproduce` CLI.
        
        
        * Free software: BSD license
        * Documentation: https://nbreproduce.readthedocs.io. (not up yet, use `$ nbreproduce -h` to get a quick desciption of various flags)
        
        
        Installation:
        -------------
        
        ```
        $ pip install nbreproduce
        ```
        
        Features:
        --------
        
        - Reproduce a Jupyter Notebook (URL or local file) inside a Docker container for consistent builds across all the devices capable of running docker and Python.
        
        - To test the `hello_world.ipynb` example in this repo.
        ```
        $ nbreproduce --url https://github.com/MridulS/nbreproduce/blob/master/tests/hello_world.ipynb
        ```
        - The `nbreproduce` will create a new Jupyter notebook ending with `filename-reproduce.ipynb` in the same directory which is a copy of the original notebook but executed inside the docker container environment.
        
        - `nbreproduce` requires a special metadata tag (`docker_image`) inside in the Jupyter notebook to find the link to docker image on DockerHub. On the first run of `nbreproduce` with a normal Jupyter notebook it will prompt you to add a docker image tag, these docker images are built on top of [Jupyter Docker-Stacks](https://jupyter-docker-stacks.readthedocs.io). The `hello_world.ipynb` example can run with the `scipy-notebook` standard image. Using the `--docker` flag you can point it towards the right docker image. (Currently only DockerHub imgages are supported)
        ```
        $ nbreproduce --docker jupyter/scipy-notebook:latest hello_world.ipynb
        ```
        
        - The project is in alpha developement mode, so things will break. Don't use this in production. The documentation website doesn't exist yet, use `nbreproduce -h` to get a quick desciption of various flags.
        
        Credits
        -------
        
        This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.
        
        [Cookiecutter](https://github.com/audreyr/cookiecutter)
        
        [audreyr/cookiecutter-pypackage](https://github.com/audreyr/cookiecutter-pypackage)
        
        
        History
        =======
        
        0.1.0 (2020-06-10)
        ------------------
        
        - Pre-alpha release to get the ball rolling.
        - First release on PyPI.
        
Keywords: nbreproduce
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Requires-Python: >=3.5
Description-Content-Type: text/markdown
