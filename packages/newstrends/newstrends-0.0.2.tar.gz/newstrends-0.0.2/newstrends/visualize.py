# AUTOGENERATED! DO NOT EDIT! File to edit: 03_visualize.ipynb (unless otherwise specified).

__all__ = ['visualizer']

# Cell
from newstrends import loader, describe
import pandas as pd
import datetime, os
from datetime import timezone
import matplotlib.pyplot as plt

# Cell
import statsmodels.api as sm
from statsmodels.tsa.api import VAR
from pmdarima import auto_arima
import numpy as np

import warnings
warnings.filterwarnings("ignore")


# Cell
class visualizer:
    "my visualizer! Don't know what I'm doing with it yet though"

    def __init__(self, coverageTrendsPath=".", workdir = "docs"):
        """ initializing building a list of all the pkls in workdir"""
        self.coverageTrendsPath = coverageTrendsPath
        self.workdir = workdir
        self.outfir = outdir

        os.makedirs(outdir, exist_ok=True)
        os.makedirs(workdir, exist_ok=True)

        self.colors = ["orange", "green", "red", "brown", "blue", "yellow", "pink"]


    def runDefault(self):

        outdir=self.workdir

        publisherList = ["newyorktimes", "washingtonpost"]

        describer = describe.describer()

        describer.set_articleDir(path=self.coverageTrendsPath)
        describer.load_articles(publications=publisherList, lastN=5)
        describer.fitVectorizer(ngram_range=(1,1))

        topN = pd.DataFrame()

        for publisher in publisherList:
            topN[publisher] = [x[0] for x in describer.getTopNWords(10, source=[publisher])]

        vcs = topN.melt(var_name='publisher', value_name='words')["words"].value_counts()
        myTime = datetime.datetime.now(tz=timezone.utc).strftime('%Y%m%d-%H%M')
        myTime = myTime[:-1]
        myTime +="0"
        plt.close('all') #in case of zombies or something
        os.makedirs("{}/img".format(outdir), exist_ok=True)
        os.makedirs("{}/timeseries".format(outdir), exist_ok=True)

        df = describer.df

        """
        If I remember what this is doing, I'm using counter to find signifcant terms, then going and grpahing
        them, saving the time series in a pkl in outdir;

        The thing is, the way I'm building this, I want to use pip to import to the CoverageTrends folder, so
        path should be "." and not "../CoverageTrends as I'm doing here; so what I want is visualzier to have
        a path to coverage_trends!"
        """
        for middleWord in vcs.dropna().index: #k, this is going to be wayyy too many images, but just testing

            tmp = df[df["tokens"].apply(lambda x: (middleWord in x))].copy().fillna(0)
            tmp.date = pd.to_datetime(tmp.date)
            tmp = tmp.groupby(["source", "date"]).count()["quickReplace"]
            try:  #for some reason, sometimes the formatting's getting messed up
                tmp.unstack(level=0).fillna(0).to_pickle("{}/timeseries/{}.pkl".format(outdir, middleWord))
            except:
                pass
            ax = tmp.unstack(level=0).fillna(0).plot(title="Frontpage mentions of {}".format(middleWord), figsize=(8,8))
            ax.set_ylabel("frontpage mentions at time")
            try:
                deleteMe = [oldFile for oldFile in os.listdir("{}/img".format(outdir)) if oldFile.endswith(middleWord+".jpg")]
                for oldFile in deleteMe:
                    os.remove("{}/img/{}".format(outdir, oldFile))
            except:
                pass

            ax.figure.savefig("{}/img/{}_{}.jpg".format(outdir, myTime, middleWord))
            plt.close('all') #close all figures
