//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26218862
// Cuda compilation tools, release 10.1, V10.1.168
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	__miss__radiance
.const .align 8 .b8 params[264];

.visible .entry __miss__radiance(

)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<16>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<5>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd2, %r1;
	shl.b64 	%rd3, %rd2, 32;
	cvt.u64.u32	%rd4, %r2;
	or.b64  	%rd1, %rd3, %rd4;
	ld.u32 	%r3, [%rd1+12];
	ld.const.v2.u32 	{%r4, %r5}, [params+224];
	or.b32  	%r8, %r3, -2147483648;
	ld.const.u32 	%r9, [params+220];
	st.v4.u32 	[%rd1], {%r9, %r4, %r5, %r8};
	and.b32  	%r10, %r3, 16777216;
	setp.eq.s32	%p1, %r10, 0;
	@%p1 bra 	BB0_2;

	ld.v4.f32 	{%f1, %f2, %f3, %f4}, [%rd1+16];
	ld.const.f32 	%f8, [params+220];
	ld.const.v2.f32 	{%f9, %f10}, [params+224];
	mul.ftz.f32 	%f12, %f9, %f2;
	mul.ftz.f32 	%f13, %f8, %f1;
	st.v2.f32 	[%rd1+16], {%f13, %f12};
	mul.ftz.f32 	%f15, %f10, %f3;
	st.f32 	[%rd1+24], %f15;

BB0_2:
	ret;
}

	// .globl	__miss__radiance_ambient
.visible .entry __miss__radiance_ambient(

)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<28>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<5>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd2, %r1;
	shl.b64 	%rd3, %rd2, 32;
	cvt.u64.u32	%rd4, %r2;
	or.b64  	%rd1, %rd3, %rd4;
	ld.u32 	%r3, [%rd1+44];
	setp.eq.s32	%p1, %r3, 0;
	@%p1 bra 	BB1_2;

	ld.const.v2.f32 	{%f1, %f2}, [params+232];
	ld.const.f32 	%f5, [params+240];
	st.v2.f32 	[%rd1], {%f1, %f2};
	st.f32 	[%rd1+8], %f5;
	bra.uni 	BB1_3;

BB1_2:
	ld.const.v2.f32 	{%f6, %f7}, [params+224];
	ld.const.f32 	%f10, [params+220];
	st.v2.f32 	[%rd1], {%f10, %f6};
	st.f32 	[%rd1+8], %f7;

BB1_3:
	ld.u32 	%r4, [%rd1+12];
	or.b32  	%r5, %r4, -2147483648;
	st.u32 	[%rd1+12], %r5;
	and.b32  	%r6, %r4, 16777216;
	setp.eq.s32	%p2, %r6, 0;
	@%p2 bra 	BB1_5;

	ld.v4.f32 	{%f11, %f12, %f13, %f14}, [%rd1+16];
	ld.v4.f32 	{%f18, %f19, %f20, %f21}, [%rd1];
	mul.ftz.f32 	%f23, %f19, %f12;
	mul.ftz.f32 	%f25, %f18, %f11;
	st.v2.f32 	[%rd1+16], {%f25, %f23};
	mul.ftz.f32 	%f27, %f20, %f13;
	st.f32 	[%rd1+24], %f27;

BB1_5:
	ret;
}

	// .globl	__miss__radiance_ambient_and_vol
.visible .entry __miss__radiance_ambient_and_vol(

)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<66>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r5), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r6), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd3, %r5;
	shl.b64 	%rd4, %rd3, 32;
	cvt.u64.u32	%rd5, %r6;
	or.b64  	%rd1, %rd4, %rd5;
	add.s64 	%rd2, %rd1, 12;
	ld.u32 	%r1, [%rd1+12];
	and.b32  	%r7, %r1, 4096;
	setp.eq.s32	%p1, %r7, 0;
	@%p1 bra 	BB2_4;

	ld.u32 	%r8, [%rd1+28];
	mad.lo.s32 	%r9, %r8, 1664525, 1013904223;
	and.b32  	%r10, %r9, 16777215;
	cvt.rn.f32.u32	%f6, %r10;
	mov.f32 	%f7, 0f4B800000;
	div.approx.ftz.f32 	%f8, %f6, %f7;
	mad.lo.s32 	%r11, %r9, 1664525, 1013904223;
	st.u32 	[%rd1+28], %r11;
	and.b32  	%r12, %r11, 16777215;
	cvt.rn.f32.u32	%f9, %r12;
	div.approx.ftz.f32 	%f1, %f9, %f7;
	fma.rn.ftz.f32 	%f10, %f8, 0fC0000000, 0f3F800000;
	st.f32 	[%rd1+136], %f10;
	mul.ftz.f32 	%f11, %f10, %f10;
	mov.f32 	%f12, 0f3F800000;
	sub.ftz.f32 	%f2, %f12, %f11;
	mov.f32 	%f65, 0f00000000;
	setp.leu.ftz.f32	%p2, %f2, 0f00000000;
	@%p2 bra 	BB2_3;

	sqrt.approx.ftz.f32 	%f65, %f2;

BB2_3:
	add.ftz.f32 	%f13, %f1, %f1;
	mul.ftz.f32 	%f14, %f13, 0f40490FDB;
	cos.approx.ftz.f32 	%f15, %f14;
	sin.approx.ftz.f32 	%f16, %f14;
	mul.ftz.f32 	%f17, %f65, %f16;
	mul.ftz.f32 	%f18, %f65, %f15;
	st.v2.f32 	[%rd1+128], {%f18, %f17};
	ld.v4.f32 	{%f19, %f20, %f21, %f22}, [%rd1+80];
	mul.ftz.f32 	%f27, %f22, %f19;
	mul.ftz.f32 	%f28, %f22, %f20;
	mul.ftz.f32 	%f29, %f22, %f21;
	or.b32  	%r18, %r1, 514;
	mov.b32 	 %r13, %f29;
	mov.b32 	 %r14, %f28;
	mov.b32 	 %r15, %f27;
	st.v4.u32 	[%rd1], {%r15, %r14, %r13, %r18};
	ld.v4.f32 	{%f30, %f31, %f32, %f33}, [%rd1+80];
	st.v4.f32 	[%rd1+48], {%f30, %f31, %f32, %f12};
	bra.uni 	BB2_8;

BB2_4:
	ld.u32 	%r16, [%rd1+44];
	setp.eq.s32	%p3, %r16, 0;
	@%p3 bra 	BB2_6;

	ld.const.v2.f32 	{%f38, %f39}, [params+232];
	ld.const.f32 	%f42, [params+240];
	st.v2.f32 	[%rd1], {%f38, %f39};
	st.f32 	[%rd1+8], %f42;
	bra.uni 	BB2_7;

BB2_6:
	ld.const.v2.f32 	{%f43, %f44}, [params+224];
	ld.const.f32 	%f47, [params+220];
	st.v2.f32 	[%rd1], {%f47, %f43};
	st.f32 	[%rd1+8], %f44;

BB2_7:
	or.b32  	%r18, %r1, -2147483648;
	st.u32 	[%rd2], %r18;

BB2_8:
	and.b32  	%r17, %r18, 16777216;
	setp.eq.s32	%p4, %r17, 0;
	@%p4 bra 	BB2_10;

	ld.v4.f32 	{%f48, %f49, %f50, %f51}, [%rd1+16];
	ld.v4.f32 	{%f55, %f56, %f57, %f58}, [%rd1];
	mul.ftz.f32 	%f60, %f56, %f49;
	mul.ftz.f32 	%f62, %f55, %f48;
	st.v2.f32 	[%rd1+16], {%f62, %f60};
	mul.ftz.f32 	%f64, %f57, %f50;
	st.f32 	[%rd1+24], %f64;

BB2_10:
	ret;
}

	// .globl	__miss__radiance_texturecart
.visible .entry __miss__radiance_texturecart(

)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<71>;
	.reg .b32 	%r<31>;
	.reg .b64 	%rd<11>;


	// inline asm
	call (%r6), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r7), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd3, %r6;
	shl.b64 	%rd4, %rd3, 32;
	cvt.u64.u32	%rd5, %r7;
	or.b64  	%rd1, %rd4, %rd5;
	add.s64 	%rd2, %rd1, 12;
	ld.u32 	%r1, [%rd1+12];
	and.b32  	%r8, %r1, 4096;
	setp.eq.s32	%p1, %r8, 0;
	@%p1 bra 	BB3_4;

	ld.u32 	%r9, [%rd1+28];
	mad.lo.s32 	%r10, %r9, 1664525, 1013904223;
	and.b32  	%r11, %r10, 16777215;
	cvt.rn.f32.u32	%f6, %r11;
	mov.f32 	%f7, 0f4B800000;
	div.approx.ftz.f32 	%f8, %f6, %f7;
	mad.lo.s32 	%r12, %r10, 1664525, 1013904223;
	st.u32 	[%rd1+28], %r12;
	and.b32  	%r13, %r12, 16777215;
	cvt.rn.f32.u32	%f9, %r13;
	div.approx.ftz.f32 	%f1, %f9, %f7;
	fma.rn.ftz.f32 	%f10, %f8, 0fC0000000, 0f3F800000;
	st.f32 	[%rd1+136], %f10;
	mul.ftz.f32 	%f11, %f10, %f10;
	mov.f32 	%f12, 0f3F800000;
	sub.ftz.f32 	%f2, %f12, %f11;
	mov.f32 	%f70, 0f00000000;
	setp.leu.ftz.f32	%p2, %f2, 0f00000000;
	@%p2 bra 	BB3_3;

	sqrt.approx.ftz.f32 	%f70, %f2;

BB3_3:
	add.ftz.f32 	%f13, %f1, %f1;
	mul.ftz.f32 	%f14, %f13, 0f40490FDB;
	cos.approx.ftz.f32 	%f15, %f14;
	sin.approx.ftz.f32 	%f16, %f14;
	mul.ftz.f32 	%f17, %f70, %f16;
	mul.ftz.f32 	%f18, %f70, %f15;
	st.v2.f32 	[%rd1+128], {%f18, %f17};
	ld.v4.f32 	{%f19, %f20, %f21, %f22}, [%rd1+80];
	mul.ftz.f32 	%f27, %f22, %f19;
	mul.ftz.f32 	%f28, %f22, %f20;
	mul.ftz.f32 	%f29, %f22, %f21;
	or.b32  	%r30, %r1, 514;
	mov.b32 	 %r14, %f29;
	mov.b32 	 %r15, %f28;
	mov.b32 	 %r16, %f27;
	st.v4.u32 	[%rd1], {%r16, %r15, %r14, %r30};
	ld.v4.f32 	{%f30, %f31, %f32, %f33}, [%rd1+80];
	st.v4.f32 	[%rd1+48], {%f30, %f31, %f32, %f12};
	bra.uni 	BB3_7;

BB3_4:
	or.b32  	%r30, %r1, -2147483648;
	st.u32 	[%rd2], %r30;
	ld.u32 	%r17, [%rd1+44];
	setp.eq.s32	%p3, %r17, 0;
	@%p3 bra 	BB3_6;

	ld.const.v2.f32 	{%f38, %f39}, [params+232];
	ld.const.f32 	%f42, [params+240];
	st.v2.f32 	[%rd1], {%f38, %f39};
	st.f32 	[%rd1+8], %f42;
	bra.uni 	BB3_7;

BB3_6:
	// inline asm
	call (%r18), _optix_get_launch_index_x, ();
	// inline asm
	ld.const.u64 	%rd6, [params+16];
	cvta.to.global.u64 	%rd7, %rd6;
	mul.wide.u32 	%rd8, %r18, 8;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.v2.u32 	{%r21, %r22}, [%rd9];
	cvt.rn.f32.s32	%f43, %r21;
	cvt.rn.f32.s32	%f44, %r22;
	ld.const.v2.u32 	{%r25, %r26}, [params+64];
	cvt.rn.f32.u32	%f45, %r25;
	cvt.rn.f32.u32	%f46, %r26;
	div.approx.ftz.f32 	%f47, %f43, %f45;
	div.approx.ftz.f32 	%f48, %f44, %f46;
	ld.const.u64 	%rd10, [params+248];
	tex.2d.v4.f32.f32	{%f49, %f50, %f51, %f52}, [%rd10, {%f47, %f48}];
	st.v2.f32 	[%rd1], {%f49, %f50};
	st.f32 	[%rd1+8], %f51;
	ld.u32 	%r30, [%rd2];

BB3_7:
	and.b32  	%r29, %r30, 16777216;
	setp.eq.s32	%p4, %r29, 0;
	@%p4 bra 	BB3_9;

	ld.v4.f32 	{%f53, %f54, %f55, %f56}, [%rd1+16];
	ld.v4.f32 	{%f60, %f61, %f62, %f63}, [%rd1];
	mul.ftz.f32 	%f65, %f61, %f54;
	mul.ftz.f32 	%f67, %f60, %f53;
	st.v2.f32 	[%rd1+16], {%f67, %f65};
	mul.ftz.f32 	%f69, %f62, %f55;
	st.f32 	[%rd1+24], %f69;

BB3_9:
	ret;
}

	// .globl	__miss__radiance_envtexture
.visible .entry __miss__radiance_envtexture(

)
{
	.reg .pred 	%p<15>;
	.reg .f32 	%f<121>;
	.reg .b32 	%r<35>;
	.reg .b64 	%rd<7>;


	// inline asm
	call (%r7), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r8), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd3, %r7;
	shl.b64 	%rd4, %rd3, 32;
	cvt.u64.u32	%rd5, %r8;
	or.b64  	%rd1, %rd4, %rd5;
	add.s64 	%rd2, %rd1, 12;
	ld.u32 	%r1, [%rd1+12];
	and.b32  	%r9, %r1, 4096;
	setp.eq.s32	%p1, %r9, 0;
	@%p1 bra 	BB4_4;

	ld.u32 	%r10, [%rd1+28];
	mad.lo.s32 	%r11, %r10, 1664525, 1013904223;
	and.b32  	%r12, %r11, 16777215;
	cvt.rn.f32.u32	%f21, %r12;
	mov.f32 	%f22, 0f4B800000;
	div.approx.ftz.f32 	%f23, %f21, %f22;
	mad.lo.s32 	%r13, %r11, 1664525, 1013904223;
	st.u32 	[%rd1+28], %r13;
	and.b32  	%r14, %r13, 16777215;
	cvt.rn.f32.u32	%f24, %r14;
	div.approx.ftz.f32 	%f1, %f24, %f22;
	fma.rn.ftz.f32 	%f25, %f23, 0fC0000000, 0f3F800000;
	st.f32 	[%rd2+124], %f25;
	mul.ftz.f32 	%f26, %f25, %f25;
	mov.f32 	%f27, 0f3F800000;
	sub.ftz.f32 	%f2, %f27, %f26;
	mov.f32 	%f116, 0f00000000;
	setp.leu.ftz.f32	%p2, %f2, 0f00000000;
	@%p2 bra 	BB4_3;

	sqrt.approx.ftz.f32 	%f116, %f2;

BB4_3:
	add.ftz.f32 	%f28, %f1, %f1;
	mul.ftz.f32 	%f29, %f28, 0f40490FDB;
	cos.approx.ftz.f32 	%f30, %f29;
	sin.approx.ftz.f32 	%f31, %f29;
	mul.ftz.f32 	%f32, %f116, %f31;
	mul.ftz.f32 	%f33, %f116, %f30;
	st.v2.f32 	[%rd1+128], {%f33, %f32};
	ld.v4.f32 	{%f34, %f35, %f36, %f37}, [%rd1+80];
	mul.ftz.f32 	%f120, %f37, %f34;
	mul.ftz.f32 	%f119, %f37, %f35;
	mul.ftz.f32 	%f118, %f37, %f36;
	or.b32  	%r34, %r1, 514;
	mov.b32 	 %r15, %f118;
	mov.b32 	 %r16, %f119;
	mov.b32 	 %r17, %f120;
	st.v4.u32 	[%rd1], {%r17, %r16, %r15, %r34};
	ld.v4.f32 	{%f42, %f43, %f44, %f45}, [%rd1+80];
	st.v4.f32 	[%rd1+48], {%f42, %f43, %f44, %f27};
	bra.uni 	BB4_10;

BB4_4:
	or.b32  	%r18, %r1, -2147483648;
	st.u32 	[%rd2], %r18;
	ld.f32 	%f50, [%rd1+128];
	abs.ftz.f32 	%f8, %f50;
	ld.f32 	%f51, [%rd2+124];
	abs.ftz.f32 	%f9, %f51;
	setp.eq.ftz.f32	%p3, %f8, 0f00000000;
	setp.eq.ftz.f32	%p4, %f9, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	mov.b32 	 %r3, %f50;
	mov.b32 	 %r19, %f51;
	and.b32  	%r4, %r19, -2147483648;
	@%p5 bra 	BB4_8;
	bra.uni 	BB4_5;

BB4_8:
	shr.s32 	%r26, %r3, 31;
	and.b32  	%r27, %r26, 1078530011;
	or.b32  	%r28, %r27, %r4;
	mov.b32 	 %f117, %r28;
	bra.uni 	BB4_9;

BB4_5:
	setp.eq.ftz.f32	%p6, %f8, 0f7F800000;
	setp.eq.ftz.f32	%p7, %f9, 0f7F800000;
	and.pred  	%p8, %p6, %p7;
	@%p8 bra 	BB4_7;
	bra.uni 	BB4_6;

BB4_7:
	shr.s32 	%r22, %r3, 31;
	and.b32  	%r23, %r22, 13483017;
	add.s32 	%r24, %r23, 1061752795;
	or.b32  	%r25, %r24, %r4;
	mov.b32 	 %f117, %r25;
	bra.uni 	BB4_9;

BB4_6:
	max.ftz.f32 	%f52, %f9, %f8;
	min.ftz.f32 	%f53, %f9, %f8;
	div.full.ftz.f32 	%f54, %f53, %f52;
	mul.rn.ftz.f32 	%f55, %f54, %f54;
	mov.f32 	%f56, 0fC0B59883;
	mov.f32 	%f57, 0fBF52C7EA;
	fma.rn.ftz.f32 	%f58, %f55, %f57, %f56;
	mov.f32 	%f59, 0fC0D21907;
	fma.rn.ftz.f32 	%f60, %f58, %f55, %f59;
	mul.ftz.f32 	%f61, %f55, %f60;
	mul.ftz.f32 	%f62, %f54, %f61;
	add.ftz.f32 	%f63, %f55, 0f41355DC0;
	mov.f32 	%f64, 0f41E6BD60;
	fma.rn.ftz.f32 	%f65, %f63, %f55, %f64;
	mov.f32 	%f66, 0f419D92C8;
	fma.rn.ftz.f32 	%f67, %f65, %f55, %f66;
	rcp.approx.ftz.f32 	%f68, %f67;
	fma.rn.ftz.f32 	%f69, %f62, %f68, %f54;
	mov.f32 	%f70, 0f3FC90FDB;
	sub.ftz.f32 	%f71, %f70, %f69;
	setp.gt.ftz.f32	%p9, %f9, %f8;
	selp.f32	%f72, %f71, %f69, %p9;
	mov.f32 	%f73, 0f40490FDB;
	sub.ftz.f32 	%f74, %f73, %f72;
	setp.lt.s32	%p10, %r3, 0;
	selp.f32	%f75, %f74, %f72, %p10;
	mov.b32 	 %r20, %f75;
	or.b32  	%r21, %r20, %r4;
	mov.b32 	 %f76, %r21;
	add.ftz.f32 	%f77, %f8, %f9;
	setp.gtu.ftz.f32	%p11, %f77, 0f7F800000;
	selp.f32	%f117, %f77, %f76, %p11;

BB4_9:
	fma.rn.ftz.f32 	%f78, %f117, 0f3E22F983, 0f3F000000;
	ld.f32 	%f79, [%rd1+132];
	abs.ftz.f32 	%f80, %f79;
	mov.f32 	%f81, 0f3F800000;
	sub.ftz.f32 	%f82, %f81, %f80;
	mul.ftz.f32 	%f83, %f82, 0f3F000000;
	sqrt.approx.ftz.f32 	%f84, %f83;
	setp.gt.ftz.f32	%p12, %f80, 0f3F11EB85;
	selp.f32	%f85, %f84, %f80, %p12;
	mul.ftz.f32 	%f86, %f85, %f85;
	mov.f32 	%f87, 0f3C94D2E9;
	mov.f32 	%f88, 0f3D53F941;
	fma.rn.ftz.f32 	%f89, %f88, %f86, %f87;
	mov.f32 	%f90, 0f3D3F841F;
	fma.rn.ftz.f32 	%f91, %f89, %f86, %f90;
	mov.f32 	%f92, 0f3D994929;
	fma.rn.ftz.f32 	%f93, %f91, %f86, %f92;
	mov.f32 	%f94, 0f3E2AAB94;
	fma.rn.ftz.f32 	%f95, %f93, %f86, %f94;
	mul.ftz.f32 	%f96, %f86, %f95;
	fma.rn.ftz.f32 	%f97, %f96, %f85, %f85;
	mov.f32 	%f98, 0f3FC90FDB;
	mov.f32 	%f99, 0fC0000000;
	fma.rn.ftz.f32 	%f100, %f99, %f97, %f98;
	selp.f32	%f101, %f100, %f97, %p12;
	setp.gtu.ftz.f32	%p13, %f101, 0f7F800000;
	mov.b32 	 %r29, %f101;
	mov.b32 	 %r30, %f79;
	and.b32  	%r31, %r30, -2147483648;
	or.b32  	%r32, %r29, %r31;
	mov.b32 	 %f102, %r32;
	selp.f32	%f103, %f101, %f102, %p13;
	fma.rn.ftz.f32 	%f104, %f103, 0fBEA2F983, 0f3F000000;
	ld.const.u64 	%rd6, [params+248];
	tex.2d.v4.f32.f32	{%f120, %f119, %f118, %f105}, [%rd6, {%f78, %f104}];
	st.v2.f32 	[%rd1], {%f120, %f119};
	st.f32 	[%rd1+8], %f118;
	ld.u32 	%r34, [%rd2];

BB4_10:
	and.b32  	%r33, %r34, 16777216;
	setp.eq.s32	%p14, %r33, 0;
	@%p14 bra 	BB4_12;

	ld.v4.f32 	{%f106, %f107, %f108, %f109}, [%rd1+16];
	mul.ftz.f32 	%f113, %f119, %f107;
	mul.ftz.f32 	%f114, %f120, %f106;
	st.v2.f32 	[%rd1+16], {%f114, %f113};
	mul.ftz.f32 	%f115, %f118, %f108;
	st.f32 	[%rd1+24], %f115;

BB4_12:
	ret;
}


