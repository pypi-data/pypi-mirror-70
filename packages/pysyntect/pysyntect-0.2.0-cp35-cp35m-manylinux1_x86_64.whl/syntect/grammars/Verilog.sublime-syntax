%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Verilog
file_extensions:
  - v
  - vh
scope: source.verilog
contexts:
  main:
    - include: comments
    - include: module_pattern
    - include: keywords
    - include: constants
    - include: strings
    - include: operators
  comments:
    - match: '(^[ \t]+)?(?=//)'
      captures:
        1: punctuation.whitespace.comment.leading.verilog
      push:
        - match: (?!\G)
          pop: true
        - match: //
          captures:
            0: punctuation.definition.comment.verilog
          push:
            - meta_scope: comment.line.double-slash.verilog
            - match: \n
              pop: true
    - match: /\*
      push:
        - meta_scope: comment.block.c-style.verilog
        - match: \*/
          pop: true
  constants:
    - match: '\b[0-9]+''[bBoOdDhH][a-fA-F0-9_xXzZ]+\b'
      scope: constant.numeric.sized_integer.verilog
    - match: \b(\d+)(:)(\d+)\b
      scope: meta.block.numeric.range.verilog
      captures:
        1: constant.numeric.integer.verilog
        2: punctuation.separator.range.verilog
        3: constant.numeric.integer.verilog
    - match: \b\d+(?i:e\d+)?\b
      scope: constant.numeric.integer.verilog
    - match: \b\d+\.\d+(?i:e\d+)?\b
      scope: constant.numeric.real.verilog
    - match: '#\d+'
      scope: constant.numeric.delay.verilog
    - match: '\b[01xXzZ]+\b'
      scope: constant.numeric.logic.verilog
  instantiation_patterns:
    - include: keywords
    - match: '^\s*([a-zA-Z][a-zA-Z0-9_]*)\s+([a-zA-Z][a-zA-Z0-9_]*)(?<!begin|if)\s*(?=\(|$)'
      captures:
        1: entity.name.tag.module.reference.verilog
        2: entity.name.tag.module.identifier.verilog
      push:
        - meta_scope: meta.block.instantiation.parameterless.verilog
        - match: ;
          captures:
            0: punctuation.terminator.expression.verilog
          pop: true
        - include: comments
        - include: constants
        - include: strings
    - match: '^\s*([a-zA-Z][a-zA-Z0-9_]*)\s*(#)(?=\s*\()'
      captures:
        1: entity.name.tag.module.reference.verilog
      push:
        - meta_scope: meta.block.instantiation.with.parameters.verilog
        - match: ;
          captures:
            0: punctuation.terminator.expression.verilog
          pop: true
        - include: parenthetical_list
        - match: "[a-zA-Z][a-zA-Z0-9_]*"
          scope: entity.name.tag.module.identifier.verilog
  keywords:
    - match: \b(always|and|assign|attribute|begin|buf|bufif0|bufif1|case(xz)?|cmos|deassign|default|defparam|disable|edge|else|end(attribute|case|function|generate|module|primitive|specify|table|task)?|event|for|force|forever|fork|function|generate|genvar|highz(01)|if(none)?|initial|inout|input|integer|join|localparam|medium|module|large|macromodule|nand|negedge|nmos|nor|not|notif(01)|or|output|parameter|pmos|posedge|primitive|pull0|pull1|pulldown|pullup|rcmos|real|realtime|reg|release|repeat|rnmos|rpmos|rtran|rtranif(01)|scalared|signed|small|specify|specparam|strength|strong0|strong1|supply0|supply1|table|task|time|tran|tranif(01)|tri(01)?|tri(and|or|reg)|unsigned|vectored|wait|wand|weak(01)|while|wire|wor|xnor|xor)\b
      scope: keyword.other.verilog
    - match: ^\s*`((cell)?define|default_(decay_time|nettype|trireg_strength)|delay_mode_(path|unit|zero)|ifdef|include|end(if|celldefine)|else|(no)?unconnected_drive|resetall|timescale|undef)\b
      scope: keyword.other.compiler.directive.verilog
    - match: \$(f(open|close)|readmem(b|h)|timeformat|printtimescale|stop|finish|(s|real)?time|realtobits|bitstoreal|rtoi|itor|(f)?(display|write(h|b)))\b
      scope: support.function.system.console.tasks.verilog
    - match: \$(random|dist_(chi_square|erlang|exponential|normal|poisson|t|uniform))\b
      scope: support.function.system.random_number.tasks.verilog
    - match: \$((a)?sync\$((n)?and|(n)or)\$(array|plane))\b
      scope: support.function.system.pld_modeling.tasks.verilog
    - match: \$(q_(initialize|add|remove|full|exam))\b
      scope: support.function.system.stochastic.tasks.verilog
    - match: \$(hold|nochange|period|recovery|setup(hold)?|skew|width)\b
      scope: support.function.system.timing.tasks.verilog
    - match: \$(dump(file|vars|off|on|all|limit|flush))\b
      scope: support.function.system.vcd.tasks.verilog
    - match: \$(countdrivers|list|input|scope|showscopes|(no)?(key|log)|reset(_count|_value)?|(inc)?save|restart|showvars|getpattern|sreadmem(b|h)|scale)
      scope: support.function.non-standard.tasks.verilog
  module_pattern:
    - match: '\b(module)\s+([a-zA-Z][a-zA-Z0-9_]*)'
      captures:
        1: storage.type.module.verilog
        2: entity.name.type.module.verilog
      push:
        - meta_scope: meta.block.module.verilog
        - match: \bendmodule\b
          captures:
            0: storage.type.module.verilog
          pop: true
        - include: comments
        - include: keywords
        - include: constants
        - include: strings
        - include: instantiation_patterns
        - include: operators
  operators:
    - match: \+|-|\*|/|%|(<|>)=?|(!|=)?==?|!|&&?|\|\|?|\^?~|~\^?
      scope: keyword.operator.verilog
  parenthetical_list:
    - match: \(
      captures:
        0: punctuation.section.list.verilog
      push:
        - meta_scope: meta.block.parenthetical_list.verilog
        - match: \)
          captures:
            0: punctuation.section.list.verilog
          pop: true
        - include: parenthetical_list
        - include: comments
        - include: keywords
        - include: constants
        - include: strings
  strings:
    - match: '"'
      push:
        - meta_scope: string.quoted.double.verilog
        - match: '"'
          pop: true
        - match: \\.
          scope: constant.character.escape.verilog
