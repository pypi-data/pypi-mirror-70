%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: CoffeeScript
file_extensions:
  - coffee
  - Cakefile
  - coffee.erb
  - cson
  - _coffee
  - cjsx
first_line_match: |-
  (?x)
  	# Hashbang
  	^\#!.*(?:\s|\/)
  	  coffee
  	(?:$|\s)
  	|
  	# Modeline
  	(?i:
  	  # Emacs
  	  -\*-(?:\s*(?=[^:;\s]+\s*-\*-)|(?:.*?[;\s]|(?<=-\*-))mode\s*:\s*)
  	    coffee
  	  (?=[\s;]|(?<![-*])-\*-).*?-\*-
  	  |
  	  # Vim
  	  (?:(?:\s|^)vi(?:m[<=>]?\d+|m)?|\sex)(?=:(?=\s*set?\s[^\n:]+:)|:(?!\s*set?\s))(?:(?:\s|\s*:\s*)\w*(?:\s*=(?:[^\n\\\s]|\\.)*)?)*[\s:](?:filetype|ft|syntax)\s*=
  	    coffee
  	  (?=\s|:|$)
  	)
scope: source.coffee
contexts:
  main:
    - include: jsx
    - match: (new)\s+(?:(?:(class)\s+(\w+(?:\.\w*)*)?)|(\w+(?:\.\w*)*))
      scope: meta.class.instance.constructor.coffee
      captures:
        1: keyword.operator.new.coffee
        2: storage.type.class.coffee
        3: entity.name.type.instance.coffee
        4: entity.name.type.instance.coffee
    - match: "'''"
      captures:
        0: punctuation.definition.string.begin.coffee
      push:
        - meta_scope: string.quoted.single.heredoc.coffee
        - match: "'''"
          captures:
            0: punctuation.definition.string.end.coffee
          pop: true
        - match: (\\).
          scope: constant.character.escape.backslash.coffee
          captures:
            1: punctuation.definition.escape.backslash.coffee
    - match: '"""'
      captures:
        0: punctuation.definition.string.begin.coffee
      push:
        - meta_scope: string.quoted.double.heredoc.coffee
        - match: '"""'
          captures:
            0: punctuation.definition.string.end.coffee
          pop: true
        - match: (\\).
          scope: constant.character.escape.backslash.coffee
          captures:
            1: punctuation.definition.escape.backslash.coffee
        - include: interpolated_coffee
    - match: (`)(.*)(`)
      scope: string.quoted.script.coffee
      captures:
        1: punctuation.definition.string.begin.coffee
        2: source.js.embedded.coffee
        3: punctuation.definition.string.end.coffee
    - match: (?<!#)###(?!#)
      captures:
        0: punctuation.definition.comment.coffee
      push:
        - meta_scope: comment.block.coffee
        - match: "###"
          captures:
            0: punctuation.definition.comment.coffee
          pop: true
        - match: (?<=^|\s)@\w*(?=\s)
          scope: storage.type.annotation.coffee
    - match: "#"
      captures:
        0: punctuation.definition.comment.coffee
      push:
        - meta_scope: comment.line.number-sign.coffee
        - match: $
          pop: true
    - match: ///
      captures:
        0: punctuation.definition.string.begin.coffee
      push:
        - meta_scope: string.regexp.multiline.coffee
        - match: "(///)[gimuy]*"
          captures:
            1: punctuation.definition.string.end.coffee
          pop: true
        - include: heregexp
    - match: '(?<![\w$])(/)(?=(?![/*+?])(.+)(/)[gimuy]*(?!\s*[\w$/(]))'
      captures:
        1: punctuation.definition.string.begin.coffee
      push:
        - meta_scope: string.regexp.coffee
        - match: '(/)[gimuy]*(?!\s*[\w$/(])'
          captures:
            1: punctuation.definition.string.end.coffee
          pop: true
        - include: scope:source.js.regexp
    - match: '\b(?<![\.\$])(break|by|catch|continue|else|finally|for|in|of|if|return|switch|then|throw|try|unless|when|while|until|loop|do|export|import|default|from|as|yield|async|await|(?<=for)\s+own)(?!\s*:)\b'
      scope: keyword.control.coffee
    - match: '\b(?<![\.\$])(delete|instanceof|new|typeof)(?!\s*:)\b'
      scope: keyword.operator.$1.coffee
    - match: '\b(?<![\.\$])(case|function|var|void|with|const|let|enum|native|__hasProp|__extends|__slice|__bind|__indexOf|implements|interface|package|private|protected|public|static)(?!\s*:)\b'
      scope: keyword.reserved.coffee
    - match: |-
        (?x)
        (?<=\s|^)((@)?[a-zA-Z_$][\w$]*)
        \s*([:=])\s*
        (?=(\([^\(\)]*\)\s*)?[=-]>)
      captures:
        1: entity.name.function.coffee
        2: variable.other.readwrite.instance.coffee
        3: keyword.operator.assignment.coffee
      push:
        - meta_scope: meta.function.coffee
        - match: "[=-]>"
          captures:
            0: storage.type.function.coffee
          pop: true
        - include: function_params
    - match: |-
        (?x)
        (?<=\s|^)(?:((')([^']*?)('))|((")([^"]*?)(")))
        \s*([:=])\s*
        (?=(\([^\(\)]*\)\s*)?[=-]>)
      captures:
        1: string.quoted.single.coffee
        2: punctuation.definition.string.begin.coffee
        3: entity.name.function.coffee
        4: punctuation.definition.string.end.coffee
        5: string.quoted.double.coffee
        6: punctuation.definition.string.begin.coffee
        7: entity.name.function.coffee
        8: punctuation.definition.string.end.coffee
        9: keyword.operator.assignment.coffee
      push:
        - meta_scope: meta.function.coffee
        - match: "[=-]>"
          captures:
            0: storage.type.function.coffee
          pop: true
        - include: function_params
    - match: '(?=(\([^\(\)]*\)\s*)?[=-]>)'
      push:
        - meta_scope: meta.function.inline.coffee
        - match: "[=-]>"
          captures:
            0: storage.type.function.coffee
          pop: true
        - include: function_params
    - match: '(?<=\s|^)({)(?=[^''"#]+?}[\s\]}]*=)'
      captures:
        1: punctuation.definition.destructuring.begin.bracket.curly.coffee
      push:
        - meta_scope: meta.variable.assignment.destructured.object.coffee
        - match: "}"
          captures:
            0: punctuation.definition.destructuring.end.bracket.curly.coffee
          pop: true
        - include: main
        - match: '[a-zA-Z$_]\w*'
          scope: variable.assignment.coffee
    - match: '(?<=\s|^)(\[)(?=[^''"#]+?\][\s\]}]*=)'
      captures:
        1: punctuation.definition.destructuring.begin.bracket.square.coffee
      push:
        - meta_scope: meta.variable.assignment.destructured.array.coffee
        - match: '\]'
          captures:
            0: punctuation.definition.destructuring.end.bracket.square.coffee
          pop: true
        - include: main
        - match: '[a-zA-Z$_]\w*'
          scope: variable.assignment.coffee
    - match: '\b(?<!\.|::)(true|on|yes)(?!\s*[:=][^=])\b'
      scope: constant.language.boolean.true.coffee
    - match: '\b(?<!\.|::)(false|off|no)(?!\s*[:=][^=])\b'
      scope: constant.language.boolean.false.coffee
    - match: '\b(?<!\.|::)null(?!\s*[:=][^=])\b'
      scope: constant.language.null.coffee
    - match: '\b(?<!\.|::)extends(?!\s*[:=])\b'
      scope: variable.language.coffee
    - match: '(?<!\.)\b(?<!\$)(super|this|arguments)(?!\s*[:=][^=]|\$)\b'
      scope: variable.language.$1.coffee
    - match: '(?<=\s|^|\[|\()(class)\s+(extends)\s+(@?[a-zA-Z\$\._][\w\.]*)'
      scope: meta.class.coffee
      captures:
        1: storage.type.class.coffee
        2: keyword.control.inheritance.coffee
        3: entity.other.inherited-class.coffee
    - match: '(?<=\s|^|\[|\()(class\b)\s+(@?[a-zA-Z\$_][\w\.]*)?(?:\s+(extends)\s+(@?[a-zA-Z\$\._][\w\.]*))?'
      scope: meta.class.coffee
      captures:
        1: storage.type.class.coffee
        2: entity.name.type.class.coffee
        3: keyword.control.inheritance.coffee
        4: entity.other.inherited-class.coffee
    - match: \b(debugger|\\)\b
      scope: keyword.other.coffee
    - match: \b(Array|ArrayBuffer|Blob|Boolean|Date|document|Function|Int(8|16|32|64)Array|Math|Map|Number|Object|Proxy|RegExp|Set|String|WeakMap|window|Uint(8|16|32|64)Array|XMLHttpRequest)\b
      scope: support.class.coffee
    - match: \b(console)\b
      scope: entity.name.type.object.coffee
    - match: ((?<=console\.)(debug|warn|info|log|error|time|timeEnd|assert))\b
      scope: support.function.console.coffee
    - match: ((?<=\.)(apply|call|concat|every|filter|forEach|from|hasOwnProperty|indexOf|isPrototypeOf|join|lastIndexOf|map|of|pop|propertyIsEnumerable|push|reduce(Right)?|reverse|shift|slice|some|sort|splice|to(Locale)?String|unshift|valueOf))\b
      scope: support.function.method.array.coffee
    - match: ((?<=Array\.)(isArray))\b
      scope: support.function.static.array.coffee
    - match: ((?<=Object\.)(create|definePropert(ies|y)|freeze|getOwnProperty(Descriptors?|Names)|getProperty(Descriptor|Names)|getPrototypeOf|is(Extensible|Frozen|Sealed)?|isnt|keys|preventExtensions|seal))\b
      scope: support.function.static.object.coffee
    - match: ((?<=Math\.)(abs|acos|acosh|asin|asinh|atan|atan2|atanh|ceil|cos|cosh|exp|expm1|floor|hypot|log|log10|log1p|log2|max|min|pow|random|round|sign|sin|sinh|sqrt|tan|tanh|trunc))\b
      scope: support.function.static.math.coffee
    - match: ((?<=Number\.)(is(Finite|Integer|NaN)|toInteger))\b
      scope: support.function.static.number.coffee
    - match: (?<!\.)\b(module|exports|__filename|__dirname|global|process)(?!\s*:)\b
      scope: support.variable.coffee
    - match: \b(Infinity|NaN|undefined)\b
      scope: constant.language.coffee
    - include: operators
    - include: method_calls
    - include: function_calls
    - include: numbers
    - include: objects
    - include: properties
    - match: "::"
      scope: keyword.operator.prototype.coffee
    - match: '(?<!\$)\b[0-9]+[\w$]*'
      scope: invalid.illegal.identifier.coffee
    - match: ;
      scope: punctuation.terminator.statement.coffee
    - match: ","
      scope: punctuation.separator.delimiter.coffee
    - match: "{"
      captures:
        0: meta.brace.curly.coffee
      push:
        - match: "}"
          captures:
            0: meta.brace.curly.coffee
          pop: true
        - include: main
    - match: '\['
      captures:
        0: punctuation.definition.array.begin.bracket.square.coffee
      push:
        - match: '\]'
          captures:
            0: punctuation.definition.array.end.bracket.square.coffee
          pop: true
        - match: '(?<!\.)\.{3}'
          scope: keyword.operator.slice.exclusive.coffee
        - match: '(?<!\.)\.{2}'
          scope: keyword.operator.slice.inclusive.coffee
        - include: main
    - match: \(
      captures:
        0: meta.brace.round.coffee
      push:
        - match: \)
          captures:
            0: meta.brace.round.coffee
          pop: true
        - include: main
    - include: instance_variable
    - include: single_quoted_string
    - include: double_quoted_string
  arguments:
    - match: \(
      captures:
        0: punctuation.definition.arguments.begin.bracket.round.coffee
      push:
        - meta_scope: meta.arguments.coffee
        - match: \)
          captures:
            0: punctuation.definition.arguments.end.bracket.round.coffee
          pop: true
        - include: main
    - match: '(?=(@|@?[\w$]+|[=-]>|\-\d|\[|{|"|''))'
      push:
        - meta_scope: meta.arguments.coffee
        - match: '(?=\s*(?<![\w$])(of|in|then|is|isnt|and|or|for|else|when|if|unless|by|instanceof)(?![\w$]))|(?=\s*(}|\]|\)|#|$))'
          pop: true
        - include: main
  double_quoted_string:
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.coffee
      push:
        - meta_scope: string.quoted.double.coffee
        - match: '"'
          captures:
            0: punctuation.definition.string.end.coffee
          pop: true
        - match: '(\\)(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)'
          scope: constant.character.escape.backslash.coffee
          captures:
            1: punctuation.definition.escape.backslash.coffee
        - include: interpolated_coffee
  embedded_comment:
    - match: (?<!\\)(#).*$\n?
      scope: comment.line.number-sign.coffee
      captures:
        1: punctuation.definition.comment.coffee
  function_calls:
    - match: '(@)?([\w$]+)(?=\()'
      captures:
        1: variable.other.readwrite.instance.coffee
      push:
        - meta_scope: meta.function-call.coffee
        - match: (?<=\))
          pop: true
        - include: arguments
    - match: |-
        (?x)
        (@)?([\w$]+)
        \s*
        (?=\s+(?!(?<![\w$])(of|in|then|is|isnt|and|or|for|else|when|if|unless|by|instanceof)(?![\w$]))(?=(@?[\w$]+|[=-]>|\-\d|\[|{|"|')))
      captures:
        1: variable.other.readwrite.instance.coffee
      push:
        - meta_scope: meta.function-call.coffee
        - match: '(?=\s*(?<![\w$])(of|in|then|is|isnt|and|or|for|else|when|if|unless|by|instanceof)(?![\w$]))|(?=\s*(}|\]|\)|#|$))'
          pop: true
        - include: arguments
  function_names:
    - match: |-
        (?x)
        \b(isNaN|isFinite|eval|uneval|parseInt|parseFloat|decodeURI|
        decodeURIComponent|encodeURI|encodeURIComponent|escape|unescape|
        require|set(Interval|Timeout)|clear(Interval|Timeout))\b
      scope: support.function.coffee
    - match: '[a-zA-Z_$][\w$]*'
      scope: entity.name.function.coffee
    - match: '\d[\w$]*'
      scope: invalid.illegal.identifier.coffee
  function_params:
    - match: \(
      captures:
        0: punctuation.definition.parameters.begin.bracket.round.coffee
      push:
        - meta_scope: meta.parameters.coffee
        - match: \)
          captures:
            0: punctuation.definition.parameters.end.bracket.round.coffee
          pop: true
        - match: '([a-zA-Z_$][\w$]*)(\.\.\.)?'
          captures:
            1: variable.parameter.function.coffee
            2: keyword.operator.splat.coffee
        - match: '(@(?:[a-zA-Z_$][\w$]*)?)(\.\.\.)?'
          captures:
            1: variable.parameter.function.readwrite.instance.coffee
            2: keyword.operator.splat.coffee
        - include: main
  heregexp:
    - match: '\\[bB]|\^|\$'
      scope: keyword.control.anchor.regexp
    - match: '\\[1-9]\d*'
      scope: keyword.other.back-reference.regexp
    - match: '[?+*]|\{(\d+,\d+|\d+,|,\d+|\d+)\}\??'
      scope: keyword.operator.quantifier.regexp
    - match: \|
      scope: keyword.operator.or.regexp
    - match: (\()((\?=)|(\?!))
      captures:
        1: punctuation.definition.group.regexp
        3: meta.assertion.look-ahead.regexp
        4: meta.assertion.negative-look-ahead.regexp
      push:
        - meta_scope: meta.group.assertion.regexp
        - match: (\))
          captures:
            1: punctuation.definition.group.regexp
          pop: true
        - include: heregexp
    - match: \((\?:)?
      captures:
        0: punctuation.definition.group.regexp
      push:
        - meta_scope: meta.group.regexp
        - match: \)
          captures:
            0: punctuation.definition.group.regexp
          pop: true
        - include: heregexp
    - match: '(\[)(\^)?'
      captures:
        1: punctuation.definition.character-class.regexp
        2: keyword.operator.negation.regexp
      push:
        - meta_scope: constant.other.character-class.set.regexp
        - match: '(\])'
          captures:
            1: punctuation.definition.character-class.regexp
          pop: true
        - match: '(?:.|(\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\c[A-Z])|(\\.))\-(?:[^\]\\]|(\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\c[A-Z])|(\\.))'
          scope: constant.other.character-class.range.regexp
          captures:
            1: constant.character.numeric.regexp
            2: constant.character.control.regexp
            3: constant.character.escape.backslash.regexp
            4: constant.character.numeric.regexp
            5: constant.character.control.regexp
            6: constant.character.escape.backslash.regexp
        - include: regex-character-class
    - include: regex-character-class
    - include: interpolated_coffee
    - include: embedded_comment
  instance_variable:
    - match: '(@)([a-zA-Z_\$]\w*)?'
      scope: variable.other.readwrite.instance.coffee
  interpolated_coffee:
    - match: '\#\{'
      captures:
        0: punctuation.section.embedded.coffee
      push:
        - meta_scope: source.coffee.embedded.source
        - match: '\}'
          captures:
            0: punctuation.section.embedded.coffee
          pop: true
        - include: main
  jsx:
    - include: jsx-tag
    - include: jsx-end-tag
  jsx-attribute:
    - match: '(?:^|\s+)([-\w.]+)\s*(=)'
      captures:
        1: entity.other.attribute-name.coffee
        2: keyword.operator.assignment.coffee
    - include: double_quoted_string
    - include: single_quoted_string
    - include: jsx-expression
  jsx-end-tag:
    - match: '(</)([-\w\.]+)'
      captures:
        1: punctuation.definition.tag.coffee
        2: entity.name.tag.coffee
      push:
        - meta_scope: meta.tag.coffee
        - match: (/?>)
          pop: true
  jsx-expression:
    - match: "{"
      captures:
        0: meta.brace.curly.coffee
      push:
        - match: "}"
          captures:
            0: meta.brace.curly.coffee
          pop: true
        - include: double_quoted_string
        - include: main
  jsx-tag:
    - match: '(<)([-\w\.]+)'
      captures:
        1: punctuation.definition.tag.coffee
        2: entity.name.tag.coffee
      push:
        - meta_scope: meta.tag.coffee
        - match: (/?>)
          pop: true
        - include: jsx-attribute
  method_calls:
    - match: '(?:(\.)|(::))\s*([\w$]+)\s*(?=\()'
      captures:
        1: punctuation.separator.method.period.coffee
        2: keyword.operator.prototype.coffee
      push:
        - meta_scope: meta.method-call.coffee
        - match: (?<=\))
          pop: true
        - include: arguments
    - match: '(?:(\.)|(::))\s*([\w$]+)\s*(?=\s+(?!(?<![\w$])(of|in|then|is|isnt|and|or|for|else|when|if|unless|by|instanceof)(?![\w$]))(?=(@|@?[\w$]+|[=-]>|\-\d|\[|{|"|'')))'
      captures:
        1: punctuation.separator.method.period.coffee
        2: keyword.operator.prototype.coffee
      push:
        - meta_scope: meta.method-call.coffee
        - match: '(?=\s*(?<![\w$])(of|in|then|is|isnt|and|or|for|else|when|if|unless|by|instanceof)(?![\w$]))|(?=\s*(}|\]|\)|#|$))'
          pop: true
        - include: arguments
  method_names:
    - match: |-
        (?x)
        \bon(Rowsinserted|Rowsdelete|Rowenter|Rowexit|Resize|Resizestart|Resizeend|Reset|
        Readystatechange|Mouseout|Mouseover|Mousedown|Mouseup|Mousemove|
        Before(cut|deactivate|unload|update|paste|print|editfocus|activate)|
        Blur|Scrolltop|Submit|Select|Selectstart|Selectionchange|Hover|Help|
        Change|Contextmenu|Controlselect|Cut|Cellchange|Clock|Close|Deactivate|
        Datasetchanged|Datasetcomplete|Dataavailable|Drop|Drag|Dragstart|Dragover|
        Dragdrop|Dragenter|Dragend|Dragleave|Dblclick|Unload|Paste|Propertychange|Error|
        Errorupdate|Keydown|Keyup|Keypress|Focus|Load|Activate|Afterupdate|Afterprint|Abort)\b
      scope: support.function.event-handler.coffee
    - match: |-
        (?x)
        \b(shift|showModelessDialog|showModalDialog|showHelp|scroll|scrollX|scrollByPages|
        scrollByLines|scrollY|scrollTo|stop|strike|sizeToContent|sidebar|signText|sort|
        sup|sub|substr|substring|splice|split|send|set(Milliseconds|Seconds|Minutes|Hours|
        Month|Year|FullYear|Date|UTC(Milliseconds|Seconds|Minutes|Hours|Month|FullYear|Date)|
        Time|Hotkeys|Cursor|ZOptions|Active|Resizable|RequestHeader)|search|slice|
        savePreferences|small|home|handleEvent|navigate|char|charCodeAt|charAt|concat|
        contextual|confirm|compile|clear|captureEvents|call|createStyleSheet|createPopup|
        createEventObject|to(GMTString|UTCString|String|Source|UpperCase|LowerCase|LocaleString)|
        test|taint|taintEnabled|indexOf|italics|disableExternalCapture|dump|detachEvent|unshift|
        untaint|unwatch|updateCommands|join|javaEnabled|pop|push|plugins.refresh|paddings|parse|
        print|prompt|preference|enableExternalCapture|exec|execScript|valueOf|UTC|find|file|
        fileModifiedDate|fileSize|fileCreatedDate|fileUpdatedDate|fixed|fontsize|fontcolor|
        forward|fromCharCode|watch|link|load|lastIndexOf|anchor|attachEvent|atob|apply|alert|
        abort|routeEvents|resize|resizeBy|resizeTo|recalc|returnValue|replace|reverse|reload|
        releaseCapture|releaseEvents|go|get(Milliseconds|Seconds|Minutes|Hours|Month|Day|Year|FullYear|
        Time|Date|TimezoneOffset|UTC(Milliseconds|Seconds|Minutes|Hours|Day|Month|FullYear|Date)|
        Attention|Selection|ResponseHeader|AllResponseHeaders)|moveBy|moveBelow|moveTo|
        moveToAbsolute|moveAbove|mergeAttributes|match|margins|btoa|big|bold|borderWidths|blink|back)\b
      scope: support.function.coffee
    - match: |-
        (?x)
        \b(acceptNode|add|addEventListener|addTextTrack|adoptNode|after|animate|append|
        appendChild|appendData|before|blur|canPlayType|captureStream|
        caretPositionFromPoint|caretRangeFromPoint|checkValidity|clear|click|
        cloneContents|cloneNode|cloneRange|close|closest|collapse|
        compareBoundaryPoints|compareDocumentPosition|comparePoint|contains|
        convertPointFromNode|convertQuadFromNode|convertRectFromNode|createAttribute|
        createAttributeNS|createCaption|createCDATASection|createComment|
        createContextualFragment|createDocument|createDocumentFragment|
        createDocumentType|createElement|createElementNS|createEntityReference|
        createEvent|createExpression|createHTMLDocument|createNodeIterator|
        createNSResolver|createProcessingInstruction|createRange|createShadowRoot|
        createTBody|createTextNode|createTFoot|createTHead|createTreeWalker|delete|
        deleteCaption|deleteCell|deleteContents|deleteData|deleteRow|deleteTFoot|
        deleteTHead|detach|disconnect|dispatchEvent|elementFromPoint|elementsFromPoint|
        enableStyleSheetsForSet|entries|evaluate|execCommand|exitFullscreen|
        exitPointerLock|expand|extractContents|fastSeek|firstChild|focus|forEach|get|
        getAll|getAnimations|getAttribute|getAttributeNames|getAttributeNode|
        getAttributeNodeNS|getAttributeNS|getBoundingClientRect|getBoxQuads|
        getClientRects|getContext|getDestinationInsertionPoints|getElementById|
        getElementsByClassName|getElementsByName|getElementsByTagName|
        getElementsByTagNameNS|getItem|getNamedItem|getSelection|getStartDate|
        getVideoPlaybackQuality|has|hasAttribute|hasAttributeNS|hasAttributes|
        hasChildNodes|hasFeature|hasFocus|importNode|initEvent|insertAdjacentElement|
        insertAdjacentHTML|insertAdjacentText|insertBefore|insertCell|insertData|
        insertNode|insertRow|intersectsNode|isDefaultNamespace|isEqualNode|
        isPointInRange|isSameNode|item|key|keys|lastChild|load|lookupNamespaceURI|
        lookupPrefix|matches|move|moveAttribute|moveAttributeNode|moveChild|
        moveNamedItem|namedItem|nextNode|nextSibling|normalize|observe|open|
        parentNode|pause|play|postMessage|prepend|preventDefault|previousNode|
        previousSibling|probablySupportsContext|queryCommandEnabled|
        queryCommandIndeterm|queryCommandState|queryCommandSupported|queryCommandValue|
        querySelector|querySelectorAll|registerContentHandler|registerElement|
        registerProtocolHandler|releaseCapture|releaseEvents|remove|removeAttribute|
        removeAttributeNode|removeAttributeNS|removeChild|removeEventListener|
        removeItem|replace|replaceChild|replaceData|replaceWith|reportValidity|
        requestFullscreen|requestPointerLock|reset|scroll|scrollBy|scrollIntoView|
        scrollTo|seekToNextFrame|select|selectNode|selectNodeContents|set|setAttribute|
        setAttributeNode|setAttributeNodeNS|setAttributeNS|setCapture|
        setCustomValidity|setEnd|setEndAfter|setEndBefore|setItem|setNamedItem|
        setRangeText|setSelectionRange|setSinkId|setStart|setStartAfter|setStartBefore|
        slice|splitText|stepDown|stepUp|stopImmediatePropagation|stopPropagation|
        submit|substringData|supports|surroundContents|takeRecords|terminate|toBlob|
        toDataURL|toggle|toString|values|write|writeln)\b
      scope: support.function.dom.coffee
    - match: '[a-zA-Z_$][\w$]*'
      scope: entity.name.function.coffee
    - match: '\d[\w$]*'
      scope: invalid.illegal.identifier.coffee
  numbers:
    - match: '\b(?<!\$)0(x|X)[0-9a-fA-F]+\b(?!\$)'
      scope: constant.numeric.hex.coffee
    - match: '\b(?<!\$)0(b|B)[01]+\b(?!\$)'
      scope: constant.numeric.binary.coffee
    - match: '\b(?<!\$)0(o|O)?[0-7]+\b(?!\$)'
      scope: constant.numeric.octal.coffee
    - match: |-
        (?x)
        (?<!\$)(?:
          (?:\b[0-9]+(\.)[0-9]+[eE][+-]?[0-9]+\b)| # 1.1E+3
          (?:\b[0-9]+(\.)[eE][+-]?[0-9]+\b)|       # 1.E+3
          (?:\B(\.)[0-9]+[eE][+-]?[0-9]+\b)|       # .1E+3
          (?:\b[0-9]+[eE][+-]?[0-9]+\b)|            # 1E+3
          (?:\b[0-9]+(\.)[0-9]+\b)|                # 1.1
          (?:\b[0-9]+(?=\.{2,3}))|                  # 1 followed by a slice
          (?:\b[0-9]+(\.)\B)|                      # 1.
          (?:\B(\.)[0-9]+\b)|                      # .1
          (?:\b[0-9]+\b(?!\.))                     # 1
        )(?!\$)
      captures:
        0: constant.numeric.decimal.coffee
        1: punctuation.separator.decimal.period.coffee
        2: punctuation.separator.decimal.period.coffee
        3: punctuation.separator.decimal.period.coffee
        4: punctuation.separator.decimal.period.coffee
        5: punctuation.separator.decimal.period.coffee
        6: punctuation.separator.decimal.period.coffee
  objects:
    - match: '[A-Z][A-Z0-9_$]*(?=\s*\??(\.\s*[a-zA-Z_$]\w*|::))'
      scope: constant.other.object.coffee
    - match: '[a-zA-Z_$][\w$]*(?=\s*\??(\.\s*[a-zA-Z_$]\w*|::))'
      scope: variable.other.object.coffee
  operators:
    - match: '(?:([a-zA-Z$_][\w$]*)?\s+|(?<![\w$]))(and=|or=)'
      captures:
        1: variable.assignment.coffee
        2: keyword.operator.assignment.compound.coffee
    - match: '([a-zA-Z$_][\w$]*)?\s*(%=|\+=|-=|\*=|&&=|\|\|=|\?=|(?<!\()/=)'
      captures:
        1: variable.assignment.coffee
        2: keyword.operator.assignment.compound.coffee
    - match: '([a-zA-Z$_][\w$]*)?\s*(&=|\^=|<<=|>>=|>>>=|\|=)'
      captures:
        1: variable.assignment.coffee
        2: keyword.operator.assignment.compound.bitwise.coffee
    - match: "<<|>>>|>>"
      scope: keyword.operator.bitwise.shift.coffee
    - match: "!=|<=|>=|==|<|>"
      scope: keyword.operator.comparison.coffee
    - match: '&&|!|\|\|'
      scope: keyword.operator.logical.coffee
    - match: '&|\||\^|~'
      scope: keyword.operator.bitwise.coffee
    - match: '([a-zA-Z$_][\w$]*)?\s*(=|:(?!:))(?![>=])'
      captures:
        1: variable.assignment.coffee
        2: keyword.operator.assignment.coffee
    - match: "--"
      scope: keyword.operator.decrement.coffee
    - match: \+\+
      scope: keyword.operator.increment.coffee
    - match: \.\.\.
      scope: keyword.operator.splat.coffee
    - match: \?
      scope: keyword.operator.existential.coffee
    - match: '%|\*|/|-|\+'
      scope: keyword.operator.coffee
    - match: |-
        (?x)
        \b(?<![\.\$])
        (?:
          (and|or|not) # logical
          |
          (is|isnt) # comparison
        )
        (?!\s*:)\b
      captures:
        1: keyword.operator.logical.coffee
        2: keyword.operator.comparison.coffee
  properties:
    - match: '(?:(\.)|(::))\s*([A-Z][A-Z0-9_$]*\b\$*)(?=\s*\??(\.\s*[a-zA-Z_$]\w*|::))'
      captures:
        1: punctuation.separator.property.period.coffee
        2: keyword.operator.prototype.coffee
        3: constant.other.object.property.coffee
    - match: '(?:(\.)|(::))\s*(\$*[a-zA-Z_$][\w$]*)(?=\s*\??(\.\s*[a-zA-Z_$]\w*|::))'
      captures:
        1: punctuation.separator.property.period.coffee
        2: keyword.operator.prototype.coffee
        3: variable.other.object.property.coffee
    - match: '(?:(\.)|(::))\s*([A-Z][A-Z0-9_$]*\b\$*)'
      captures:
        1: punctuation.separator.property.period.coffee
        2: keyword.operator.prototype.coffee
        3: constant.other.property.coffee
    - match: '(?:(\.)|(::))\s*(\$*[a-zA-Z_$][\w$]*)'
      captures:
        1: punctuation.separator.property.period.coffee
        2: keyword.operator.prototype.coffee
        3: variable.other.property.coffee
    - match: '(?:(\.)|(::))\s*([0-9][\w$]*)'
      captures:
        1: punctuation.separator.property.period.coffee
        2: keyword.operator.prototype.coffee
        3: invalid.illegal.identifier.coffee
  regex-character-class:
    - match: '\\[wWsSdD]|\.'
      scope: constant.character.character-class.regexp
    - match: '\\([0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4})'
      scope: constant.character.numeric.regexp
    - match: '\\c[A-Z]'
      scope: constant.character.control.regexp
    - match: \\.
      scope: constant.character.escape.backslash.regexp
  single_quoted_string:
    - match: "'"
      captures:
        0: punctuation.definition.string.begin.coffee
      push:
        - meta_scope: string.quoted.single.coffee
        - match: "'"
          captures:
            0: punctuation.definition.string.end.coffee
          pop: true
        - match: '(\\)(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)'
          scope: constant.character.escape.backslash.coffee
          captures:
            1: punctuation.definition.escape.backslash.coffee
