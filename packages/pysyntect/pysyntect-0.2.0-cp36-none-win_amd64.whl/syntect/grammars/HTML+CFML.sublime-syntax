%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: ColdFusion Markup
file_extensions:
  - cfm
  - cfml
first_line_match: <!(?i:DOCTYPE)|<(?i:html)|<\?(?i:php)
scope: text.html.cfm
contexts:
  main:
    - include: scope:text.cfml.basic
    - match: (<\?)(xml)
      captures:
        1: punctuation.definition.tag.html
        2: entity.name.tag.xml.html
      push:
        - meta_scope: meta.tag.preprocessor.xml.html
        - match: (\?>)
          captures:
            1: punctuation.definition.tag.html
            2: entity.name.tag.xml.html
          pop: true
        - include: tag-generic-attribute
        - include: string-double-quoted
        - include: string-single-quoted
    - match: <!--+
      captures:
        0: punctuation.definition.comment.html
      push:
        - meta_scope: comment.block.html
        - match: '--+\s*>'
          captures:
            0: punctuation.definition.comment.html
          pop: true
        - match: "--"
          scope: invalid.illegal.bad-comments-or-CDATA.html
        - include: embedded-code
    - match: <!
      captures:
        0: punctuation.definition.tag.html
      push:
        - meta_scope: meta.tag.sgml.html
        - match: ">"
          captures:
            0: punctuation.definition.tag.html
          pop: true
        - match: (?i:DOCTYPE)
          captures:
            1: entity.name.tag.doctype.html
          push:
            - meta_scope: meta.tag.sgml.doctype.html
            - match: (?=>)
              captures:
                1: entity.name.tag.doctype.html
              pop: true
            - match: '"[^">]*"'
              scope: string.quoted.double.doctype.identifiers-and-DTDs.html
        - match: '\[CDATA\['
          push:
            - meta_scope: constant.other.inline-data.html
            - match: "]](?=>)"
              pop: true
        - match: (\s*)(?!--|>)\S(\s*)
          scope: invalid.illegal.bad-comments-or-CDATA.html
    - include: embedded-code
    - match: '(?:^\s+)?(<)((?i:style))\b(?![^>]*/>)'
      captures:
        1: punctuation.definition.tag.html
        2: entity.name.tag.style.html
        3: punctuation.definition.tag.html
      push:
        - meta_scope: source.css.embedded.html
        - match: (</)((?i:style))(>)(?:\s*\n)?
          captures:
            1: punctuation.definition.tag.html
            2: entity.name.tag.style.html
            3: punctuation.definition.tag.html
          pop: true
        - include: tag-stuff
        - match: (>)
          captures:
            1: punctuation.definition.tag.html
          push:
            - match: (?=</(?i:style))
              pop: true
            - include: scope:text.html.cfm
            - include: embedded-code
            - include: scope:source.css
    - match: '(?:^\s+)?(<)((?i:script))\b(?![^>]*/>)'
      captures:
        1: punctuation.definition.tag.html
        2: entity.name.tag.script.html
      push:
        - meta_scope: source.js.embedded.html
        - match: (?<=</(script|SCRIPT))(>)(?:\s*\n)?
          captures:
            2: punctuation.definition.tag.html
          pop: true
        - include: tag-stuff
        - match: (?<!</(?:script|SCRIPT))(>)
          captures:
            1: punctuation.definition.tag.html
            2: entity.name.tag.script.html
          push:
            - match: (</)((?i:script))
              captures:
                1: punctuation.definition.tag.html
                2: entity.name.tag.script.html
              pop: true
            - match: (//).*?((?=</script)|$\n?)
              scope: comment.line.double-slash.js
              captures:
                1: punctuation.definition.comment.js
            - match: /\*
              captures:
                0: punctuation.definition.comment.js
              push:
                - meta_scope: comment.block.js
                - match: \*/|(?=</script)
                  captures:
                    0: punctuation.definition.comment.js
                  pop: true
            - include: scope:text.cfml.basic
            - include: php
            - include: nest-hash
            - include: scope:source.js
    - match: (</?)((?i:body|head|html)\b)
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.structure.any.html
      push:
        - meta_scope: meta.tag.structure.any.html
        - match: (>)
          captures:
            1: punctuation.definition.tag.end.html
          pop: true
        - include: tag-stuff
    - match: (</?)((?i:form|fieldset|textarea)\b)
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.block.form.html
      push:
        - meta_scope: meta.tag.block.form.html
        - match: (>)
          captures:
            1: punctuation.definition.tag.end.html
          pop: true
        - include: tag-stuff
    - match: (</?)((?i:object|applet)\b)
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.block.object.html
      push:
        - meta_scope: meta.tag.block.object.html
        - match: (>)
          captures:
            1: punctuation.definition.tag.end.html
          pop: true
        - include: tag-stuff
    - match: (</?)((?i:address|blockquote|dd|div|dl|dt|frame|frameset|h1|h2|h3|h4|h5|h6|iframe|noframes|ol|p|ul|center|dir|hr|menu|pre)\b)
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.block.any.html
      push:
        - meta_scope: meta.tag.block.any.html
        - match: (>)
          captures:
            1: punctuation.definition.tag.end.html
          pop: true
        - include: tag-stuff
    - match: (</?)((?i:img|area|map|param)\b)
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.img.html
      push:
        - meta_scope: meta.tag.inline.img.html
        - match: "((?: ?/)?>)"
          captures:
            1: punctuation.definition.tag.end.html
          pop: true
        - include: tag-stuff
    - match: (</?)((?i:a|base)\b)
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.link.html
      push:
        - meta_scope: meta.tag.inline.link.html
        - match: "((?: ?/)?>)"
          captures:
            1: punctuation.definition.tag.end.html
          pop: true
        - include: tag-stuff
    - match: (</?)((?i:table|tr|td|th|tbody|thead|tfoot|col|colgroup|caption)\b)
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.table.html
      push:
        - meta_scope: meta.tag.inline.table.html
        - match: "((?: ?/)?>)"
          captures:
            1: punctuation.definition.tag.end.html
          pop: true
        - include: tag-stuff
    - match: (</?)((?i:input|select|option|optgroup|button|label|legend)\b)
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.form.html
      push:
        - meta_scope: meta.tag.inline.form.html
        - match: "((?: ?/)?>)"
          captures:
            1: punctuation.definition.tag.end.html
          pop: true
        - include: tag-stuff
    - match: (</?)((?i:abbr|acronym|b|basefont|bdo|big|br|cite|code|del|dfn|em|font|head|html|i|ins|isindex|kbd|li|link|meta|noscript|q|s|samp|script|small|span|strike|strong|style|sub|sup|title|tt|u|var)\b)
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.inline.any.html
      push:
        - meta_scope: meta.tag.inline.any.html
        - match: "((?: ?/)?>)"
          captures:
            1: punctuation.definition.tag.end.html
          pop: true
        - include: tag-stuff
    - match: "(</?)([a-zA-Z0-9:]+)"
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.other.html
      push:
        - meta_scope: meta.tag.other.html
        - match: (>)
          captures:
            1: punctuation.definition.tag.end.html
          pop: true
        - include: tag-stuff
    - match: '(<)([a-zA-Z0-9:]++)(?=[^>]*></\2>)'
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.html
      push:
        - meta_scope: meta.tag.any.html
        - match: (>)(<)(/)(\2)(>)
          captures:
            1: punctuation.definition.tag.end.html
            2: punctuation.definition.tag.begin.html meta.scope.between-tag-pair.html
            3: punctuation.definition.tag.begin.html
            4: entity.name.tag.html
            5: punctuation.definition.tag.end.html
          pop: true
        - include: tag-stuff
    - include: entities
    - match: <>
      scope: invalid.illegal.incomplete.html
    - match: <
      scope: invalid.illegal.bad-angle-bracket.html
  cfcomments:
    - match: <!---.*?--->
      scope: comment.line.cfml
    - match: <!---
      captures:
        0: punctuation.definition.comment.cfml
      push:
        - meta_scope: comment.block.cfml
        - match: "--->"
          captures:
            0: punctuation.definition.comment.cfml
          pop: true
        - include: cfcomments
  embedded-code:
    - include: ruby
    - include: php
    - include: python
  entities:
    - match: "(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)"
      scope: constant.character.entity.html
      captures:
        1: punctuation.definition.entity.html
        3: punctuation.definition.entity.html
    - match: "&"
      scope: invalid.illegal.bad-ampersand.html
  nest-hash:
    - match: "##"
      scope: string.escaped.hash.html
    - match: |-
        (?x)
        (\#)
        (?!		# zero width negative lookahead assertion
        	(
        		([\w$]+	# assertion for plain variables or function names including currency symbol "$"
        			(
        				(\[.*\])				# asserts a match for anything in square brackets
        				|
        				(\(.*\))				# or anything in parens
        				|
        				(\.[\w$]+)				# or zero or more "dot" notated variables
        				|
        				(\s*[\+\-\*\/&]\s*[\w$]+)	# or simple arithmentic operators + concatenation
        				|
        				(\s*&\s*["|'].+["|']) 	# or concatenation with a quoted string
        			)*		# asserts preceeding square brackets, parens, dot notated vars or arithmetic zero or more times
        		)
        		|
        		(\(.*\))	 # asserts a match for anything in parens
        	)\#		# asserts closing hash
        )
      scope: invalid.illegal.unescaped.hash.html
    - match: |-
        (?x)
        (\#)
        (?=		# zero width negative lookahead assertion
        	(
        		([\w$]+	# assertion for plain variables or function names including currency symbol "$"
        			(
        				(\[.*\])				# asserts a match for anything in square brackets
        				|
        				(\(.*\))				# or anything in parens
        				|
        				(\.[\w$]+)				# or zero or more "dot" notated variables
        				|
        				(\s*[\+\-\*\/&]\s*[\w$]+)	# or simple arithmentic operators + concatenation
        				|
        				(\s*&\s*["|'].+["|']) 	# or concatenation with a quoted string
        			)*		# asserts preceeding square brackets, parens, dot notated vars or arithmetic zero or more times
        		)
        		|
        		(\(.*\))	 # asserts a match for anything in parens
        	)\#		# asserts closing hash
        )
      captures:
        1: punctuation.definition.hash.begin.html
      push:
        - meta_scope: meta.name.interpolated.hash.html
        - meta_content_scope: source.cfscript.embedded.html
        - match: (#)
          captures:
            1: punctuation.definition.hash.end.html
          pop: true
        - include: scope:source.cfscript
  php:
    - match: (?=(^\s*)?<\?)
      push:
        - match: (?!(^\s*)?<\?)
          pop: true
        - include: scope:source.php
  python:
    - match: (?:^\s*)<\?python(?!.*\?>)
      push:
        - meta_scope: source.python.embedded.html
        - match: \?>(?:\s*$\n)?
          pop: true
        - include: scope:source.python
  ruby:
    - match: "<%+#"
      captures:
        0: punctuation.definition.comment.erb
      push:
        - meta_scope: comment.block.erb
        - match: "%>"
          captures:
            0: punctuation.definition.comment.erb
          pop: true
    - match: <%+(?!>)=?
      captures:
        0: punctuation.section.embedded.ruby
      push:
        - meta_scope: source.ruby.embedded.html
        - match: "-?%>"
          captures:
            0: punctuation.section.embedded.ruby
          pop: true
        - match: (#).*?(?=-?%>)
          scope: comment.line.number-sign.ruby
          captures:
            1: punctuation.definition.comment.ruby
        - include: scope:source.ruby
    - match: <\?r(?!>)=?
      captures:
        0: punctuation.section.embedded.ruby.nitro
      push:
        - meta_scope: source.ruby.nitro.embedded.html
        - match: '-?\?>'
          captures:
            0: punctuation.section.embedded.ruby.nitro
          pop: true
        - match: (#).*?(?=-?\?>)
          scope: comment.line.number-sign.ruby.nitro
          captures:
            1: punctuation.definition.comment.ruby.nitro
        - include: scope:source.ruby
  string-double-quoted:
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.html
      push:
        - meta_scope: string.quoted.double.html
        - match: '"'
          captures:
            0: punctuation.definition.string.end.html
          pop: true
        - include: embedded-code
        - include: entities
        - include: nest-hash
  string-single-quoted:
    - match: "'"
      captures:
        0: punctuation.definition.string.begin.html
      push:
        - meta_scope: string.quoted.single.html
        - match: "'"
          captures:
            0: punctuation.definition.string.end.html
          pop: true
        - include: embedded-code
        - include: entities
        - include: nest-hash
  tag-generic-attribute:
    - match: '\b([a-zA-Z\-:]+)'
      scope: entity.other.attribute-name.html
  tag-id-attribute:
    - match: \b(id)\b\s*(=)
      captures:
        1: entity.other.attribute-name.id.html
        2: punctuation.separator.key-value.html
      push:
        - meta_scope: meta.attribute-with-value.id.html
        - match: (?<='|")
          captures:
            1: entity.other.attribute-name.id.html
            2: punctuation.separator.key-value.html
          pop: true
        - match: '"'
          captures:
            0: punctuation.definition.string.begin.html
          push:
            - meta_scope: string.quoted.double.html
            - meta_content_scope: meta.toc-list.id.html
            - match: '"'
              captures:
                0: punctuation.definition.string.end.html
              pop: true
            - include: embedded-code
            - include: entities
            - include: nest-hash
        - match: "'"
          captures:
            0: punctuation.definition.string.begin.html
          push:
            - meta_scope: string.quoted.single.html
            - meta_content_scope: meta.toc-list.id.html
            - match: "'"
              captures:
                0: punctuation.definition.string.end.html
              pop: true
            - include: embedded-code
            - include: entities
            - include: nest-hash
  tag-stuff:
    - include: nest-hash
    - include: cfcomments
    - include: scope:text.cfml.basic
    - include: tag-id-attribute
    - include: tag-generic-attribute
    - include: string-double-quoted
    - include: string-single-quoted
    - include: embedded-code
