%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Scilab
file_extensions:
  - sce
  - sci
  - tst
  - dem
scope: source.scilab
contexts:
  main:
    - match: '(^[ \t]+)?(?=//)'
      captures:
        1: punctuation.whitespace.comment.leading.scilab
      push:
        - match: (?!\G)
          pop: true
        - match: //
          captures:
            0: punctuation.definition.comment.scilab
          push:
            - meta_scope: comment.line.double-slash.scilab
            - match: \n
              pop: true
    - match: '\b(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?\b'
      scope: constant.numeric.scilab
    - match: (%inf|%i|%pi|%eps|%e|%nan|%s|%t|%f)\b
      scope: support.constant.scilab
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.scilab
      push:
        - meta_scope: string.quoted.double.scilab
        - match: '"(?!")'
          captures:
            0: punctuation.definition.string.end.scilab
          pop: true
        - match: '''''|""'
          scope: constant.character.escape.scilab
    - match: '(?<![\w\]\)])'''
      captures:
        0: punctuation.definition.string.begin.scilab
      push:
        - meta_scope: string.quoted.single.scilab
        - match: "'(?!')"
          captures:
            0: punctuation.definition.string.end.scilab
          pop: true
        - match: '''''|""'
          scope: constant.character.escape.scilab
    - match: '\b(function)\s+(?:[^=]+=\s*)?(\w+)(?:\s*\(.*\))?'
      captures:
        1: keyword.control.scilab
        2: entity.name.function.scilab
    - match: \b(if|then|else|elseif|while|for|function|end|endfunction|return|select|case|break|global)\b
      scope: keyword.control.scilab
    - match: \.\.\.\s*$
      scope: punctuation.separator.continuation.scilab
