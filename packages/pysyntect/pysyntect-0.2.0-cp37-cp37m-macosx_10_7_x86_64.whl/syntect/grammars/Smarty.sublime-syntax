%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Smarty
file_extensions:
  - tpl
scope: text.html.smarty
contexts:
  main:
    - include: scope:text.html.basic
  blocks:
    - match: '(\{)(literal)(\})'
      captures:
        0: meta.embedded.line.tag.literal.smarty
        1: punctuation.definition.tag.begin.smarty
        2: support.function.built-in.smarty
        3: punctuation.definition.tag.end.smarty
      push:
        - meta_scope: meta.block.literal.smarty
        - match: '(\{/)(literal)(\})'
          captures:
            0: meta.embedded.line.tag.literal.smarty
            1: punctuation.definition.tag.begin.smarty
            2: support.function.built-in.smarty
            3: punctuation.definition.tag.end.smarty
          pop: true
        - include: scope:text.html.basic
    - match: '(\{%?)'
      captures:
        0: source.smarty
        1: punctuation.section.embedded.begin.smarty
      push:
        - meta_scope: meta.embedded.line.tag.smarty
        - meta_content_scope: source.smarty
        - match: '(%?\})'
          captures:
            0: source.smarty
            1: punctuation.section.embedded.end.smarty
          pop: true
        - include: strings
        - include: variables
        - include: lang
  comments:
    - match: '(\{%?)\*'
      captures:
        1: punctuation.definition.comment.smarty
      push:
        - meta_scope: comment.block.smarty
        - match: '\*(%?\})'
          pop: true
  lang:
    - match: (!==|!=|!|<=|>=|<|>|===|==|%|&&|\|\|)|\b(and|or|eq|neq|ne|gte|gt|ge|lte|lt|le|not|mod)\b
      scope: keyword.operator.smarty
    - match: \b(TRUE|FALSE|true|false)\b
      scope: constant.language.smarty
    - match: \b(if|else|elseif|foreach|foreachelse|section|switch|case|break|default)\b
      scope: keyword.control.smarty
    - match: '\b([a-zA-Z]+)='
      scope: meta.attribute.smarty
      captures:
        0: variable.parameter.smarty
    - match: '\b(capture|config_load|counter|cycle|debug|eval|fetch|include_php|include|insert|literal|math|strip|rdelim|ldelim|assign|constant|block|html_[a-z_]*)\b'
      scope: support.function.built-in.smarty
    - match: \|(capitalize|cat|count_characters|count_paragraphs|count_sentences|count_words|date_format|default|escape|indent|lower|nl2br|regex_replace|replace|spacify|string_format|strip_tags|strip|truncate|upper|wordwrap)
      scope: support.function.variable-modifier.smarty
  strings:
    - match: "'"
      captures:
        0: punctuation.definition.string.begin.smarty
      push:
        - meta_scope: string.quoted.single.smarty
        - match: "'"
          captures:
            0: punctuation.definition.string.end.smarty
          pop: true
        - match: \\.
          scope: constant.character.escape.smarty
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.smarty
      push:
        - meta_scope: string.quoted.double.smarty
        - match: '"'
          captures:
            0: punctuation.definition.string.end.smarty
          pop: true
        - match: \\.
          scope: constant.character.escape.smarty
  variables:
    - match: \b(\$)Smarty\.
      scope: variable.other.global.smarty
      captures:
        1: punctuation.definition.variable.smarty
    - match: '(\$)([a-zA-Z_][a-zA-Z0-9_]*)\b'
      scope: variable.other.smarty
      captures:
        1: punctuation.definition.variable.smarty
        2: variable.other.smarty
    - match: '(->)([a-zA-Z_][a-zA-Z0-9_]*)\b'
      scope: variable.other.smarty
      captures:
        1: keyword.operator.smarty
        2: variable.other.property.smarty
    - match: '(->)([a-zA-Z_][a-zA-Z0-9_]*)(\().*?(\))'
      scope: variable.other.smarty
      captures:
        1: keyword.operator.smarty
        2: meta.function-call.object.smarty
        3: punctuation.definition.variable.smarty
        4: punctuation.definition.variable.smarty
