%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: SassDoc
scope: source.sassdoc
contexts:
  main:
    - match: |-
        (?x)
        ((@)(?:access))
        \s+
        (private|public)
        \b
      captures:
        1: storage.type.class.sassdoc
        2: punctuation.definition.block.tag.sassdoc
        3: constant.language.access-type.sassdoc
    - match: |-
        (?x)
        ((@)author)
        \s+
        (
          [^@\s<>*/]
          (?:[^@<>*/]|\*[^/])*
        )
        (?:
          \s*
          (<)
          ([^>\s]+)
          (>)
        )?
      captures:
        1: storage.type.class.sassdoc
        2: punctuation.definition.block.tag.sassdoc
        3: entity.name.type.instance.sassdoc
        4: punctuation.definition.bracket.angle.begin.sassdoc
        5: constant.other.email.link.underline.sassdoc
        6: punctuation.definition.bracket.angle.end.sassdoc
    - match: |-
        (?x)
        ((@)example)
        \s+
        (css|scss)
      captures:
        1: storage.type.class.sassdoc
        2: punctuation.definition.block.tag.sassdoc
        3: variable.other.sassdoc
      push:
        - meta_scope: meta.example.css.scss.sassdoc
        - match: (?=@|///$)
          pop: true
        - match: ^///\s+
        - match: '[^\s@*](?:[^*]|\*[^/])*'
          captures:
            0: source.embedded.css.scss
    - match: |-
        (?x)
        ((@)example)
        \s+
        (markup)
      captures:
        1: storage.type.class.sassdoc
        2: punctuation.definition.block.tag.sassdoc
        3: variable.other.sassdoc
      push:
        - meta_scope: meta.example.html.sassdoc
        - match: (?=@|///$)
          pop: true
        - match: ^///\s+
        - match: '[^\s@*](?:[^*]|\*[^/])*'
          captures:
            0: source.embedded.html
    - match: |-
        (?x)
        ((@)example)
        \s+
        (javascript)
      captures:
        1: storage.type.class.sassdoc
        2: punctuation.definition.block.tag.sassdoc
        3: variable.other.sassdoc
      push:
        - meta_scope: meta.example.js.sassdoc
        - match: (?=@|///$)
          pop: true
        - match: ^///\s+
        - match: '[^\s@*](?:[^*]|\*[^/])*'
          captures:
            0: source.embedded.js
    - match: |-
        (?x)
        ((@)link)
        \s+
        (?:
          # URL
          (
            (?=https?://)
            (?:[^\s*]|\*[^/])+
          )
        )
      captures:
        1: storage.type.class.sassdoc
        2: punctuation.definition.block.tag.sassdoc
        3: variable.other.link.underline.sassdoc
        4: entity.name.type.instance.sassdoc
    - match: |-
        (?x)
        (
          (@)
          (?:arg|argument|param|parameter|requires?|see|colors?|fonts?|ratios?|sizes?)
        )
        \s+
        (
          [A-Za-z_$%]
          [\-\w$.\[\]]*
        )
      captures:
        1: storage.type.class.sassdoc
        2: punctuation.definition.block.tag.sassdoc
        3: variable.other.sassdoc
    - match: '((@)(?:arg|argument|param|parameter|prop|property|requires?|see|sizes?))\s+(?={)'
      captures:
        1: storage.type.class.sassdoc
        2: punctuation.definition.block.tag.sassdoc
      push:
        - match: '(?=\s|\*/|[^{}\[\]A-Za-z_$])'
          pop: true
        - include: sassdoctype
        - match: '([A-Za-z_$%][\-\w$.\[\]]*)'
          scope: variable.other.sassdoc
        - match: |-
            (?x)
            (\[)\s*
            [\w$]+
            (?:
              (?:\[\])?                                        # Foo[].bar properties within an array
              \.                                                # Foo.Bar namespaced parameter
              [\w$]+
            )*
            (?:
              \s*
              (=)                                                # [foo=bar] Default parameter value
              \s*
              (
                # The inner regexes are to stop the match early at */ and to not stop at escaped quotes
                (?>
                  "(?:(?:\*(?!/))|(?:\\(?!"))|[^*\\])*?" |  # [foo="bar"] Double-quoted
                  '(?:(?:\*(?!/))|(?:\\(?!'))|[^*\\])*?' |  # [foo='bar'] Single-quoted
                  \[ (?:(?:\*(?!/))|[^*])*? \] |              # [foo=[1,2]] Array literal
                  (?:(?:\*(?!/))|\s(?!\s*\])|\[.*?(?:\]|(?=\*/))|[^*\s\[\]])* # Everything else (sorry)
                )*
              )
            )?
            \s*(?:(\])((?:[^*\s]|\*[^\s/])+)?|(?=\*/))
          scope: variable.other.sassdoc
          captures:
            1: punctuation.definition.optional-value.begin.bracket.square.sassdoc
            2: keyword.operator.assignment.sassdoc
            3: source.embedded.js
            4: punctuation.definition.optional-value.end.bracket.square.sassdoc
            5: invalid.illegal.syntax.sassdoc
    - match: |-
        (?x)
        (
          (@)
          (?:returns?|throws?|exception|outputs?)
        )
        \s+(?={)
      captures:
        1: storage.type.class.sassdoc
        2: punctuation.definition.block.tag.sassdoc
      push:
        - match: '(?=\s|[^{}\[\]A-Za-z_$])'
          pop: true
        - include: sassdoctype
    - match: |-
        (?x)
        (
          (@)
          (?:type)
        )
        \s+
        (
          (?:
            [A-Za-z |]+
          )
        )
      captures:
        1: storage.type.class.sassdoc
        2: punctuation.definition.block.tag.sassdoc
        3: entity.name.type.instance.sassdoc
    - match: |-
        (?x)
        (
          (@)
          (?:alias|group|name|requires?|see|icons?)
        )
        \s+
        (
          (?:
            [^{}@\s*] | \*[^/]
          )+
        )
      captures:
        1: storage.type.class.sassdoc
        2: punctuation.definition.block.tag.sassdoc
        3: entity.name.type.instance.sassdoc
    - match: |-
        (?x)
        (@)
        (?:access|alias|author|content|deprecated|example|exception|group
        |ignore|name|prop|property|requires?|returns?|see|since|throws?|todo
        |type|outputs?)
        \b
      scope: storage.type.class.sassdoc
      captures:
        1: punctuation.definition.block.tag.sassdoc
  brackets:
    - match: "{"
      push:
        - match: "}|(?=$)"
          pop: true
        - include: brackets
    - match: '\['
      push:
        - match: '\]|(?=$)'
          pop: true
        - include: brackets
  sassdoctype:
    - match: '\G{(?:[^}*]|\*[^/}])+$'
      scope: invalid.illegal.type.sassdoc
    - match: '\G({)'
      captures:
        0: entity.name.type.instance.sassdoc
        1: punctuation.definition.bracket.curly.begin.sassdoc
      push:
        - meta_content_scope: entity.name.type.instance.sassdoc
        - match: '((}))\s*|(?=$)'
          captures:
            1: entity.name.type.instance.sassdoc
            2: punctuation.definition.bracket.curly.end.sassdoc
          pop: true
        - include: brackets
  sassdoctypedelimiter:
    - match: (\|)
      captures:
        1: punctuation.definition.delimiter.sassdoc
