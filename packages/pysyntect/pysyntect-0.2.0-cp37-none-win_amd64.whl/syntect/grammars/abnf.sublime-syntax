%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Augmented Backus-Naur Form
file_extensions:
  - abnf
first_line_match: |-
  (?ix)

  	# Emacs modeline
  	-\*-(?:\s*(?=[^:;\s]+\s*-\*-)|(?:.*?[;\s]|(?<=-\*-))mode\s*:\s*)
  		abnf
  	(?=[\s;]|(?<![-*])-\*-).*?-\*-

  	|

  	# Vim modeline
  	(?:(?:\s|^)vi(?:m[<=>]?\d+|m)?|\sex)(?=:(?=\s*set?\s[^\n:]+:)|:(?!\s* set?\s))(?:(?:\s|\s*:\s*)\w*(?:\s*=(?:[^\n\\\s]|\\.)*)?)*[\s:](?:filetype|ft|syntax)\s*=
  		abnf
  	(?=\s|:|$)
scope: source.abnf
contexts:
  main:
    - include: comment
    - include: rule
  comment:
    - match: ;
      captures:
        0: punctuation.definition.comment.abnf
      push:
        - meta_scope: comment.line.semicolon.abnf
        - match: $
          pop: true
  assignment:
    - match: "=/"
      scope: keyword.operator.assignment.increment.abnf
    - match: ":+="
      scope: keyword.operator.assignment.colon.non-standard.abnf
    - match: "="
      scope: keyword.operator.assignment.abnf
  core-rules:
    - match: |-
        (?x)
        \b (?<!-)
        (ALPHA|BIT|CHAR|CRLF|CR|CTL|DIGIT|DQUOTE
        |HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)
        \b (?!-)
      scope: support.constant.reference.core-rule.abnf
  group:
    - match: \(
      captures:
        0: punctuation.definition.round.bracket.begin.abnf
      push:
        - meta_scope: meta.group.abnf
        - match: \)
          captures:
            0: punctuation.definition.round.bracket.end.abnf
          pop: true
        - include: rhs
  optional:
    - match: '\['
      captures:
        0: punctuation.definition.square.bracket.begin.abnf
      push:
        - meta_scope: meta.optional.abnf
        - match: '\]'
          captures:
            0: punctuation.definition.square.bracket.end.abnf
          pop: true
        - include: rhs
  prose:
    - match: <
      captures:
        0: punctuation.definition.string.begin.abnf
      push:
        - meta_scope: string.other.prose.abnf
        - match: ">"
          captures:
            0: punctuation.definition.string.end.abnf
          pop: true
  quantifier:
    - match: '([0-9]*)(\*)'
      scope: meta.quantifier.abnf
      captures:
        1: constant.numeric.decimal.integer.int.abnf
        2: keyword.operator.logical.repetition.asterisk.star.abnf
  reference:
    - match: "[A-Za-z][-A-Za-z0-9]*"
      scope: variable.parameter.argument.identifier.reference.abnf
  rhs:
    - include: assignment
    - include: string
    - include: terminal
    - include: comment
    - include: quantifier
    - include: group
    - include: optional
    - include: core-rules
    - include: reference
    - include: prose
    - match: /
      scope: keyword.operator.logical.or.alternation.pipe.abnf
  rule:
    - match: '(?:^|\G)(\s*)([A-Za-z][-A-Za-z0-9]*)'
      captures:
        0: meta.lhs.abnf
        1: punctuation.whitespace.leading.abnf
        2: entity.name.rule.identifier.abnf
      push:
        - meta_scope: meta.ruleset.$2.abnf
        - meta_content_scope: meta.rhs.abnf
        - match: ^(?!\1\s+\S)|^(?=\S)
          pop: true
        - include: rhs
  string:
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.abnf
      push:
        - meta_scope: string.quoted.double.abnf
        - match: '"'
          captures:
            0: punctuation.definition.string.end.abnf
          pop: true
  terminal:
    - match: (%)(d|D)
      captures:
        1: punctuation.definition.terminal.percentage-sign.abnf
        2: storage.type.modifier.radix.abnf
      push:
        - meta_scope: meta.terminal.numeric.decimal.abnf
        - match: '(?=$|[;()\[\]{}\s])'
          pop: true
        - match: '[0-9A-Fa-f]*[^-\s0-9.;()\[\]{}][^-.;()\[\]{}]*'
          scope: invalid.illegal.syntax.abnf
        - match: "[0-9]+"
          scope: constant.numeric.integer.int.decimal.abnf
        - match: "-"
          scope: punctuation.separator.range.dash.hyphen.abnf
        - match: \.
          scope: keyword.operator.concatenation.abnf
    - match: (%)(x|X)
      captures:
        1: punctuation.definition.terminal.percentage-sign.abnf
        2: storage.type.modifier.radix.abnf
      push:
        - meta_scope: meta.terminal.numeric.hexadecimal.hex.abnf
        - match: '(?=$|[;()\[\]{}\s])'
          pop: true
        - match: '[0-9A-Fa-f]*[^-\s0-9A-Fa-f.;()\[\]{}][^-.;()\[\]{}]*'
          scope: invalid.illegal.syntax.abnf
        - match: "[0-9A-Fa-f]+"
          scope: constant.numeric.integer.int.hexadecimal.hex.abnf
        - match: "-"
          scope: punctuation.separator.range.dash.hyphen.abnf
        - match: \.
          scope: keyword.operator.concatenation.abnf
    - match: (%)(b|B)
      captures:
        1: punctuation.definition.terminal.percentage-sign.abnf
        2: storage.type.modifier.radix.abnf
      push:
        - meta_scope: meta.terminal.numeric.binary.bin.abnf
        - match: '(?=$|[;()\[\]{}\s])'
          pop: true
        - match: '[0-1]*[^-\s0-1.;()\[\]{}][^-.;()\[\]{}]*'
          scope: invalid.illegal.syntax.abnf
        - match: "[0-1]+"
          scope: constant.numeric.integer.int.binary.bin.abnf
        - match: "-"
          scope: punctuation.separator.range.dash.hyphen.abnf
        - match: \.
          scope: keyword.operator.concatenation.abnf
