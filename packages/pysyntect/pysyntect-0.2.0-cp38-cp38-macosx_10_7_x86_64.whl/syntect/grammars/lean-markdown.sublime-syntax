%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Markdown
scope: source.lean.markdown
contexts:
  main:
    - include: frontMatter
    - include: block
  ampersand:
    - match: "&(?!([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+);)"
      comment: Markdown will convert this for us. We match it so that the HTML grammar will not mark it up as invalid.
      scope: meta.other.valid-ampersand.markdown
  block:
    - include: separator
    - include: heading
    - include: blockquote
    - include: lists
    - include: fenced_code_block
    - include: link-def
    - include: html
    - include: inline
    - include: scope:text.html.derivative
    - include: heading-setext
  blockquote:
    - match: '(^|\G)[ ]{0,3}(>) ?'
      captures:
        2: punctuation.definition.quote.begin.markdown
      push:
        - meta_scope: markup.quote.markdown
        - match: ""
          captures:
            2: punctuation.definition.quote.begin.markdown
          pop: true
        - include: block
  bold:
    - match: |-
        (?x) (\*\*(?=\w)|(?<!\w)\*\*|(?<!\w)\b__)(?=\S) (?=
          (
            <[^>]*+>              # HTML tags
            | (?<raw>`+)([^`]|(?!(?<!`)\k<raw>(?!`))`)*+\k<raw>
                              # Raw
            | \\[\\`*_{}\[\]()#.!+\->]?+      # Escapes
            | \[
            (
                (?<square>          # Named group
                  [^\[\]\\]        # Match most chars
                  | \\.            # Escaped chars
                  | \[ \g<square>*+ \]    # Nested brackets
                )*+
              \]
              (
                (              # Reference Link
                  [ ]?          # Optional space
                  \[[^\]]*+\]        # Ref name
                )
                | (              # Inline Link
                  \(            # Opening paren
                    [ \t]*+        # Optional whitespace
                    <?(.*?)>?      # URL
                    [ \t]*+        # Optional whitespace
                    (          # Optional Title
                      (?<title>['"])
                      (.*?)
                      \k<title>
                    )?
                  \)
                )
              )
            )
            | (?!(?<=\S)\1).            # Everything besides
                              # style closer
          )++
          (?<=\S)(?=__\b|\*\*)\1                # Close
        )
      captures:
        1: punctuation.definition.bold.markdown
      push:
        - meta_scope: markup.bold.markdown
        - match: (?<=\S)(\1)
          captures:
            1: punctuation.definition.bold.markdown
          pop: true
        - match: "(?=<[^>]*?>)"
          push:
            - include: scope:text.html.derivative
            - match: (?<=>)
              pop: true
        - include: escape
        - include: ampersand
        - include: bracket
        - include: raw
        - include: bold
        - include: italic
        - include: image-inline
        - include: link-inline
        - include: link-inet
        - include: link-email
        - include: image-ref
        - include: link-ref-literal
        - include: link-ref
        - include: link-ref-shortcut
  bracket:
    - match: '<(?![a-zA-Z/?\$!])'
      comment: Markdown will convert this for us. We match it so that the HTML grammar will not mark it up as invalid.
      scope: meta.other.valid-bracket.markdown
  escape:
    - match: '\\[-`*_#+.!(){}\[\]\\>]'
      scope: constant.character.escape.markdown
  fenced_code_block:
    - include: fenced_code_block_css
    - include: fenced_code_block_basic
    - include: fenced_code_block_ini
    - include: fenced_code_block_java
    - include: fenced_code_block_lua
    - include: fenced_code_block_makefile
    - include: fenced_code_block_perl
    - include: fenced_code_block_r
    - include: fenced_code_block_ruby
    - include: fenced_code_block_php
    - include: fenced_code_block_sql
    - include: fenced_code_block_vs_net
    - include: fenced_code_block_xml
    - include: fenced_code_block_xsl
    - include: fenced_code_block_yaml
    - include: fenced_code_block_dosbatch
    - include: fenced_code_block_clojure
    - include: fenced_code_block_coffee
    - include: fenced_code_block_c
    - include: fenced_code_block_cpp
    - include: fenced_code_block_diff
    - include: fenced_code_block_dockerfile
    - include: fenced_code_block_git_commit
    - include: fenced_code_block_git_rebase
    - include: fenced_code_block_go
    - include: fenced_code_block_groovy
    - include: fenced_code_block_pug
    - include: fenced_code_block_js
    - include: fenced_code_block_js_regexp
    - include: fenced_code_block_json
    - include: fenced_code_block_jsonc
    - include: fenced_code_block_less
    - include: fenced_code_block_objc
    - include: fenced_code_block_swift
    - include: fenced_code_block_scss
    - include: fenced_code_block_perl6
    - include: fenced_code_block_powershell
    - include: fenced_code_block_python
    - include: fenced_code_block_regexp_python
    - include: fenced_code_block_rust
    - include: fenced_code_block_scala
    - include: fenced_code_block_shell
    - include: fenced_code_block_ts
    - include: fenced_code_block_tsx
    - include: fenced_code_block_csharp
    - include: fenced_code_block_fsharp
    - include: fenced_code_block_dart
    - include: fenced_code_block_handlebars
    - include: fenced_code_block_markdown
    - include: fenced_code_block_log
    - include: fenced_code_block_unknown
  fenced_code_block_basic:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(html|htm|shtml|xhtml|inc|tmpl|tpl)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.html
            - match: ""
              pop: true
            - include: scope:text.html.basic
  fenced_code_block_c:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(c|h)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.c
            - match: ""
              pop: true
            - include: scope:source.c
  fenced_code_block_clojure:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(clj|cljs|clojure)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.clojure
            - match: ""
              pop: true
            - include: scope:source.clojure
  fenced_code_block_coffee:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(coffee|Cakefile|coffee.erb)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.coffee
            - match: ""
              pop: true
            - include: scope:source.coffee
  fenced_code_block_cpp:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(cpp|c\+\+|cxx)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.cpp source.cpp
            - match: ""
              pop: true
            - include: scope:source.cpp
  fenced_code_block_csharp:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(cs|csharp|c#)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.csharp
            - match: ""
              pop: true
            - include: scope:source.cs
  fenced_code_block_css:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(css|css.erb)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.css
            - match: ""
              pop: true
            - include: scope:source.css
  fenced_code_block_dart:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(dart)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.dart
            - match: ""
              pop: true
            - include: scope:source.dart
  fenced_code_block_diff:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(patch|diff|rej)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.diff
            - match: ""
              pop: true
            - include: scope:source.diff
  fenced_code_block_dockerfile:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(dockerfile|Dockerfile)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.dockerfile
            - match: ""
              pop: true
            - include: scope:source.dockerfile
  fenced_code_block_dosbatch:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(bat|batch)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.dosbatch
            - match: ""
              pop: true
            - include: scope:source.batchfile
  fenced_code_block_fsharp:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(fs|fsharp|f#)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.fsharp
            - match: ""
              pop: true
            - include: scope:source.fsharp
  fenced_code_block_git_commit:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(COMMIT_EDITMSG|MERGE_MSG)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.git_commit
            - match: ""
              pop: true
            - include: scope:text.git-commit
  fenced_code_block_git_rebase:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(git-rebase-todo)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.git_rebase
            - match: ""
              pop: true
            - include: scope:text.git-rebase
  fenced_code_block_go:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(go|golang)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.go
            - match: ""
              pop: true
            - include: scope:source.go
  fenced_code_block_groovy:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(groovy|gvy)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.groovy
            - match: ""
              pop: true
            - include: scope:source.groovy
  fenced_code_block_handlebars:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(handlebars|hbs)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.handlebars
            - match: ""
              pop: true
            - include: scope:text.html.handlebars
  fenced_code_block_ini:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(ini|conf)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.ini
            - match: ""
              pop: true
            - include: scope:source.ini
  fenced_code_block_java:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(java|bsh)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.java
            - match: ""
              pop: true
            - include: scope:source.java
  fenced_code_block_js:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(js|jsx|javascript|es6|mjs|cjs|\{\.js.+?\})((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.javascript
            - match: ""
              pop: true
            - include: scope:source.js
  fenced_code_block_js_regexp:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(regexp)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.js_regexp
            - match: ""
              pop: true
            - include: scope:source.js.regexp
  fenced_code_block_json:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(json|json5|sublime-settings|sublime-menu|sublime-keymap|sublime-mousemap|sublime-theme|sublime-build|sublime-project|sublime-completions)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.json
            - match: ""
              pop: true
            - include: scope:source.json
  fenced_code_block_jsonc:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(jsonc)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.jsonc
            - match: ""
              pop: true
            - include: scope:source.json.comments
  fenced_code_block_less:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(less)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.less
            - match: ""
              pop: true
            - include: scope:source.css.less
  fenced_code_block_log:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(log)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.log
            - match: ""
              pop: true
            - include: scope:text.log
  fenced_code_block_lua:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(lua)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.lua
            - match: ""
              pop: true
            - include: scope:source.lua
  fenced_code_block_makefile:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(Makefile|makefile|GNUmakefile|OCamlMakefile)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.makefile
            - match: ""
              pop: true
            - include: scope:source.makefile
  fenced_code_block_markdown:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(markdown|md)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.markdown
            - match: ""
              pop: true
            - include: scope:text.html.markdown
  fenced_code_block_objc:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(objectivec|objective-c|mm|objc|obj-c|m|h)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.objc
            - match: ""
              pop: true
            - include: scope:source.objc
  fenced_code_block_perl:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(perl|pl|pm|pod|t|PL|psgi|vcl)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.perl
            - match: ""
              pop: true
            - include: scope:source.perl
  fenced_code_block_perl6:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(perl6|p6|pl6|pm6|nqp)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.perl6
            - match: ""
              pop: true
            - include: scope:source.perl.6
  fenced_code_block_php:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(php|php3|php4|php5|phpt|phtml|aw|ctp)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.php
            - match: ""
              pop: true
            - include: scope:text.html.basic
            - include: scope:source.php
  fenced_code_block_powershell:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(powershell|ps1|psm1|psd1)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.powershell
            - match: ""
              pop: true
            - include: scope:source.powershell
  fenced_code_block_pug:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(jade|pug)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.pug
            - match: ""
              pop: true
            - include: scope:text.pug
  fenced_code_block_python:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(python|py|py3|rpy|pyw|cpy|SConstruct|Sconstruct|sconstruct|SConscript|gyp|gypi|\{\.python.+?\})((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.python
            - match: ""
              pop: true
            - include: scope:source.python
  fenced_code_block_r:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(R|r|s|S|Rprofile|\{\.r.+?\})((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.r
            - match: ""
              pop: true
            - include: scope:source.r
  fenced_code_block_regexp_python:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(re)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.regexp_python
            - match: ""
              pop: true
            - include: scope:source.regexp.python
  fenced_code_block_ruby:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(ruby|rb|rbx|rjs|Rakefile|rake|cgi|fcgi|gemspec|irbrc|Capfile|ru|prawn|Cheffile|Gemfile|Guardfile|Hobofile|Vagrantfile|Appraisals|Rantfile|Berksfile|Berksfile.lock|Thorfile|Puppetfile)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.ruby
            - match: ""
              pop: true
            - include: scope:source.ruby
  fenced_code_block_rust:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(rust|rs|\{\.rust.+?\})((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.rust
            - match: ""
              pop: true
            - include: scope:source.rust
  fenced_code_block_scala:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(scala|sbt)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.scala
            - match: ""
              pop: true
            - include: scope:source.scala
  fenced_code_block_scss:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(scss)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.scss
            - match: ""
              pop: true
            - include: scope:source.css.scss
  fenced_code_block_shell:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(shell|sh|bash|zsh|bashrc|bash_profile|bash_login|profile|bash_logout|.textmate_init|\{\.bash.+?\})((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.shellscript
            - match: ""
              pop: true
            - include: scope:source.shell
  fenced_code_block_sql:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(sql|ddl|dml)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.sql
            - match: ""
              pop: true
            - include: scope:source.sql
  fenced_code_block_swift:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(swift)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.swift
            - match: ""
              pop: true
            - include: scope:source.swift
  fenced_code_block_ts:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(typescript|ts)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.typescript
            - match: ""
              pop: true
            - include: scope:source.ts
  fenced_code_block_tsx:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(tsx)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.typescriptreact
            - match: ""
              pop: true
            - include: scope:source.tsx
  fenced_code_block_unknown:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?=([^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
  fenced_code_block_vs_net:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(vb)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.vs_net
            - match: ""
              pop: true
            - include: scope:source.asp.vb.net
  fenced_code_block_xml:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(xml|xsd|tld|jsp|pt|cpt|dtml|rss|opml)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.xml
            - match: ""
              pop: true
            - include: scope:text.xml
  fenced_code_block_xsl:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(xsl|xslt)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.xsl
            - match: ""
              pop: true
            - include: scope:text.xml.xsl
  fenced_code_block_yaml:
    - match: '(^|\G)(\s*)(`{3,}|~{3,})\s*(?i:(yaml|yml)((\s+|:|\{)[^`~]*)?$)'
      captures:
        3: punctuation.definition.markdown
        4: fenced_code.block.language.markdown
        5: fenced_code.block.language.attributes.markdown
      push:
        - meta_scope: markup.fenced_code.block.markdown
        - match: '(^|\G)(\2|\s{0,3})(\3)\s*$'
          captures:
            3: punctuation.definition.markdown
          pop: true
        - match: (^|\G)(\s*)(.*)
          push:
            - meta_content_scope: meta.embedded.block.yaml
            - match: ""
              pop: true
            - include: scope:source.yaml
  frontMatter:
    - match: '\A-{3}\s*$'
      push:
        - meta_content_scope: meta.embedded.block.frontmatter
        - match: '(^|\G)-{3}|\.{3}\s*$'
          pop: true
        - include: scope:source.yaml
  heading:
    - match: '(?:^|\G)[ ]{0,3}((#{1,6})\s+(?=[\S[^#]]).*?\s*(#{1,6})?)((?=-/)|$\n?)'
      scope: markup.heading.markdown
      captures:
  heading-setext:
    - match: '^(={3,})(?=[ \t]*$\n?)'
      scope: markup.heading.setext.1.markdown
    - match: '^(-{3,})(?=[ \t]*$\n?)'
      scope: markup.heading.setext.2.markdown
  html:
    - match: (^|\G)\s*(<!--)
      captures:
        1: punctuation.definition.comment.html
        2: punctuation.definition.comment.html
      push:
        - meta_scope: comment.block.html
        - match: (-->)
          captures:
            1: punctuation.definition.comment.html
            2: punctuation.definition.comment.html
          pop: true
    - match: (?i)(^|\G)\s*(?=<(script|style|pre)(\s|$|>)(?!.*?</(script|style|pre)>))
      push:
        - match: (?i)(.*)((</)(script|style|pre)(>))
          captures:
            2: meta.tag.structure.$4.end.html
            3: punctuation.definition.tag.begin.html
            4: entity.name.tag.html
            5: punctuation.definition.tag.end.html
          pop: true
        - match: (\s*|$)
          push:
            - match: ""
              pop: true
            - include: scope:text.html.derivative
    - match: '(?i)(^|\G)\s*(?=</?[a-zA-Z]+[^\s/&gt;]*(\s|$|/?>))'
      push:
        - match: ""
          pop: true
        - include: scope:text.html.derivative
    - match: '(^|\G)\s*(?=(<[a-zA-Z0-9\-](/?>|\s.*?>)|</[a-zA-Z0-9\-]>)\s*$)'
      push:
        - match: ""
          pop: true
        - include: scope:text.html.derivative
  image-inline:
    - match: |-
        (?x)
          (\!\[)((?<square>[^\[\]\\]|\\.|\[\g<square>*+\])*+)(\])
                        # Match the link text.
          (\()            # Opening paren for url
            (<?)(\S+?)(>?)      # The url
            [ \t]*          # Optional whitespace
            (?:
                ((\().+?(\)))    # Match title in parens…
              | ((").+?("))    # or in quotes.
            )?            # Title is optional
            \s*            # Optional whitespace
          (\))
      scope: meta.image.inline.markdown
      captures:
        1: punctuation.definition.string.begin.markdown
        10: punctuation.definition.string.markdown
        11: punctuation.definition.string.markdown
        12: string.other.link.description.title.markdown
        13: punctuation.definition.string.markdown
        14: punctuation.definition.string.markdown
        15: punctuation.definition.metadata.markdown
        2: string.other.link.description.markdown
        4: punctuation.definition.string.end.markdown
        5: punctuation.definition.metadata.markdown
        6: punctuation.definition.link.markdown
        7: markup.underline.link.image.markdown
        8: punctuation.definition.link.markdown
        9: string.other.link.description.title.markdown
  image-ref:
    - match: '(\!\[)((?<square>[^\[\]\\]|\\.|\[\g<square>*+\])*+)(\])[ ]?(\[)(.*?)(\])'
      scope: meta.image.reference.markdown
      captures:
        1: punctuation.definition.string.begin.markdown
        2: string.other.link.description.markdown
        4: punctuation.definition.string.begin.markdown
        5: punctuation.definition.constant.markdown
        6: constant.other.reference.link.markdown
        7: punctuation.definition.constant.markdown
  inline:
    - include: ampersand
    - include: bracket
    - include: bold
    - include: italic
    - include: raw
    - include: escape
    - include: image-inline
    - include: image-ref
    - include: link-email
    - include: link-inet
    - include: link-inline
    - include: link-ref
    - include: link-ref-literal
    - include: link-ref-shortcut
  italic:
    - match: |-
        (?x) (\*(?=\w)|(?<!\w)\*|(?<!\w)\b_)(?=\S)                # Open
          (?=
            (
              <[^>]*+>              # HTML tags
              | (?<raw>`+)([^`]|(?!(?<!`)\k<raw>(?!`))`)*+\k<raw>
                                # Raw
              | \\[\\`*_{}\[\]()#.!+\->]?+      # Escapes
              | \[
              (
                  (?<square>          # Named group
                    [^\[\]\\]        # Match most chars
                    | \\.            # Escaped chars
                    | \[ \g<square>*+ \]    # Nested brackets
                  )*+
                \]
                (
                  (              # Reference Link
                    [ ]?          # Optional space
                    \[[^\]]*+\]        # Ref name
                  )
                  | (              # Inline Link
                    \(            # Opening paren
                      [ \t]*+        # Optional whtiespace
                      <?(.*?)>?      # URL
                      [ \t]*+        # Optional whtiespace
                      (          # Optional Title
                        (?<title>['"])
                        (.*?)
                        \k<title>
                      )?
                    \)
                  )
                )
              )
              | \1\1                # Must be bold closer
              | (?!(?<=\S)\1).            # Everything besides
                                # style closer
            )++
            (?<=\S)(?=_\b|\*)\1                # Close
          )
      captures:
        1: punctuation.definition.italic.markdown
      push:
        - meta_scope: markup.italic.markdown
        - match: (?<=\S)(\1)((?!\1)|(?=\1\1))
          captures:
            1: punctuation.definition.italic.markdown
          pop: true
        - match: "(?=<[^>]*?>)"
          push:
            - include: scope:text.html.derivative
            - match: (?<=>)
              pop: true
        - include: escape
        - include: ampersand
        - include: bracket
        - include: raw
        - include: bold
        - include: image-inline
        - include: link-inline
        - include: link-inet
        - include: link-email
        - include: image-ref
        - include: link-ref-literal
        - include: link-ref
        - include: link-ref-shortcut
  link-def:
    - match: |-
        (?x)
          \s*            # Leading whitespace
          (\[)([^]]+?)(\])(:)    # Reference name
          [ \t]*          # Optional whitespace
          (<?)(\S+?)(>?)      # The url
          [ \t]*          # Optional whitespace
          (?:
              ((\().+?(\)))    # Match title in quotes…
            | ((").+?("))    # or in parens.
          )?            # Title is optional
          \s*            # Optional whitespace
          $
      scope: meta.link.reference.def.markdown
      captures:
        1: punctuation.definition.constant.markdown
        10: punctuation.definition.string.end.markdown
        11: string.other.link.description.title.markdown
        12: punctuation.definition.string.begin.markdown
        13: punctuation.definition.string.end.markdown
        2: constant.other.reference.link.markdown
        3: punctuation.definition.constant.markdown
        4: punctuation.separator.key-value.markdown
        5: punctuation.definition.link.markdown
        6: markup.underline.link.markdown
        7: punctuation.definition.link.markdown
        8: string.other.link.description.title.markdown
        9: punctuation.definition.string.begin.markdown
  link-email:
    - match: '(<)((?:mailto:)?[-.\w]+@[-a-z0-9]+(\.[-a-z0-9]+)*\.[a-z]+)(>)'
      scope: meta.link.email.lt-gt.markdown
      captures:
        1: punctuation.definition.link.markdown
        2: markup.underline.link.markdown
        4: punctuation.definition.link.markdown
  link-inet:
    - match: (<)((?:https?|ftp)://.*?)(>)
      scope: meta.link.inet.markdown
      captures:
        1: punctuation.definition.link.markdown
        2: markup.underline.link.markdown
        3: punctuation.definition.link.markdown
  link-inline:
    - match: |-
        (?x)
          (\[)((?<square>[^\[\]\\]|\\.|\[\g<square>*+\])*+)(\])
                        # Match the link text.
          (\()            # Opening paren for url
            (<?)((?<url>(?>[^\s()]+)|\(\g<url>*\))*)(>?)      # The url
            [ \t]*          # Optional whitespace
            (?:
                ((\().+?(\)))    # Match title in parens…
              | ((").+?("))    # or in quotes.
            )?            # Title is optional
            \s*            # Optional whitespace
          (\))
      scope: meta.link.inline.markdown
      captures:
        1: punctuation.definition.string.begin.markdown
        10: string.other.link.description.title.markdown
        11: punctuation.definition.string.begin.markdown
        12: punctuation.definition.string.end.markdown
        13: string.other.link.description.title.markdown
        14: punctuation.definition.string.begin.markdown
        15: punctuation.definition.string.end.markdown
        16: punctuation.definition.metadata.markdown
        2: string.other.link.title.markdown
        4: punctuation.definition.string.end.markdown
        5: punctuation.definition.metadata.markdown
        6: punctuation.definition.link.markdown
        7: markup.underline.link.markdown
        9: punctuation.definition.link.markdown
  link-ref:
    - match: '(\[)((?<square>[^\[\]\\]|\\.|\[\g<square>*+\])*+)(\])(\[)([^\]]*+)(\])'
      scope: meta.link.reference.markdown
      captures:
        1: punctuation.definition.string.begin.markdown
        2: string.other.link.title.markdown
        4: punctuation.definition.string.end.markdown
        5: punctuation.definition.constant.begin.markdown
        6: constant.other.reference.link.markdown
        7: punctuation.definition.constant.end.markdown
  link-ref-literal:
    - match: '(\[)((?<square>[^\[\]\\]|\\.|\[\g<square>*+\])*+)(\])[ ]?(\[)(\])'
      scope: meta.link.reference.literal.markdown
      captures:
        1: punctuation.definition.string.begin.markdown
        2: string.other.link.title.markdown
        4: punctuation.definition.string.end.markdown
        5: punctuation.definition.constant.begin.markdown
        6: punctuation.definition.constant.end.markdown
  link-ref-shortcut:
    - match: '(\[)(\S+?)(\])'
      scope: meta.link.reference.markdown
      captures:
        1: punctuation.definition.string.begin.markdown
        2: string.other.link.title.markdown
        3: punctuation.definition.string.end.markdown
  list_paragraph:
    - match: '(^|\G)(?=\S)(?![*+->]\s|[0-9]+\.\s)'
      push:
        - meta_scope: meta.paragraph.markdown
        - match: ""
          pop: true
        - include: inline
        - include: scope:text.html.derivative
        - include: heading-setext
  lists:
    - match: '(^|\G)([ ]{0,3})([*+-])([ \t])(?!.*-/)'
      comment: Currently does not support un-indented second lines.
      captures:
        3: punctuation.definition.list.begin.markdown
      push:
        - meta_scope: markup.list.unnumbered.markdown
        - match: ""
          pop: true
        - include: block
        - include: list_paragraph
    - match: '(^|\G)([ ]{0,3})([0-9]+\.)([ \t])(?!.*-/)'
      captures:
        3: punctuation.definition.list.begin.markdown
      push:
        - meta_scope: markup.list.numbered.markdown
        - match: ""
          pop: true
        - include: block
        - include: list_paragraph
  paragraph:
    - match: '(^|\G)[ ]{0,3}(?=\S)'
      push:
        - meta_scope: meta.paragraph.markdown
        - match: ""
          pop: true
        - include: inline
        - include: scope:text.html.derivative
        - include: heading-setext
  raw:
    - match: '(`+)([^`]|(?!(?<!`)\1(?!`))`)*+(\1)'
      scope: markup.inline.raw.string.markdown
      captures:
        1: punctuation.definition.raw.markdown
        3: punctuation.definition.raw.markdown
  raw_block_disabled:
    - match: '(^|\G)([ ]{4}|\t)'
      push:
        - meta_scope: markup.raw.block.markdown
        - match: ""
          pop: true
  separator:
    - match: '(^|\G)[ ]{0,3}([\*\-\_])([ ]{0,2}\2){2,}[ \t]*$\n?'
      scope: meta.separator.markdown
