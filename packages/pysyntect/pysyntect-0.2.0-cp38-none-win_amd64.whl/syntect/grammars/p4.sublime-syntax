%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: P4
file_extensions:
  - p4
scope: source.p4
contexts:
  main:
    - match: /\*
      captures:
        0: punctuation.definition.comment.block.begin.p4
      push:
        - meta_scope: comment.block.p4
        - match: \*/
          captures:
            0: punctuation.definition.comment.block.end.p4
          pop: true
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.p4
      push:
        - meta_scope: string.quoted.double.p4
        - match: '"'
          captures:
            0: punctuation.definition.string.end.p4
          pop: true
    - match: //
      captures:
        0: comment.p4
      push:
        - meta_scope: comment.line.p4
        - match: \n
          pop: true
    - match: \b(header_type|header|metadata|field_list|field_list_calculation|parser|parser_exception|parser_value_set|counter|meter|register|action|action_profile|table|control|extern)\b
      scope: storage.type.object.p4
    - match: \b(bool|bit|varbit|int)\b
      scope: storage.data.type.p4
    - match: \b(hit|miss|latest|return|default)\b
      scope: variable.language.p4
    - match: \b(if|else if|else|return|hit|miss|true|false)\b
      scope: keyword.control.p4
    - match: \b(and|or)\b
      scope: keyword.operator.p4
    - match: \b(exact|ternary|lpm|range|valid|mask)\b
      comment: table field match type
      scope: entity.name.type.p4
    - match: \b(reads|actions|min_size|max_size|size|support_timeout|action_profile)\b
      comment: table elements
      scope: storage.type.p4
    - match: \b(bytes|packets)\b
      comment: counter/meter/register types
      scope: storage.type.p4
    - match: \b(width|layout|attributes|type|static|result|direct|instance_count|min_width|saturating)\b
      comment: counter/meter/register fields
      scope: entity.name.type.p4
    - match: \b(length|fields|max_length)\b
      comment: header fields
      scope: entity.name.type.p4
    - match: \#include
      scope: meta.preprocessor.include.p4
    - match: \#define
      scope: meta.preprocessor.define.p4
    - match: \b(apply|valid|select|current|extract|add_header|copy_header|remove_header|modify_field|add_to_field|add|set_field_to_hash_index|truncate|drop|no_op|push|pop|count|meter|generate_digest|resubmit|recirculate|clone_ingress_pkt_to_ingress|clone_egress_pkt_to_ingress|clone_ingress_pkt_to_egress|clone_egress_pkt_to_egress|register_write|register_read)\b
      comment: primitive actions/builtin functions
      scope: support.function.primitive.p4
    - match: "[a-zA-Z_][0-9a-zA-Z_]*"
      scope: support.any-method.p4
    - match: '[\+|-]?[0-9]+''[0-9]+'
      comment: const value
      scope: constant.numeric.p4
    - match: "0(x|X)[0-9a-fA-F]+"
      scope: constant.numeric.p4
    - match: "0(b|B)[01]+"
      scope: constant.numeric.p4
    - match: "[0-9]+"
      scope: constant.numeric.p4
    - match: \b(true|false)\b
      scope: constant.language.p4
