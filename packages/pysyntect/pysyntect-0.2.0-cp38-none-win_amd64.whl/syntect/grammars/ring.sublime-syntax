%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: ring
file_extensions:
  - ring
  - rh
scope: source.ring
contexts:
  main:
    - include: block_doc_comment
    - include: block_comment
    - include: line_doc_comment
    - include: line_comment
    - include: sigils
    - match: '#\!?\['
      comment: Attribute
      push:
        - meta_scope: meta.attribute.ring
        - match: '\]'
          pop: true
        - include: string_literal
    - match: '''([^''\\]|\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.))'''
      comment: Single-quote string (character literal)
      scope: string.quoted.single.ring
    - include: string_literal
    - match: '\b[0-9][0-9_]*\.[0-9][0-9_]*([eE][+-][0-9_]+)?(f32|f64)?\b'
      comment: Floating point number (fraction)
      scope: constant.numeric.float.ring
    - match: '\b[0-9][0-9_]*([ui](8|16|32|64)?)?\b'
      comment: Integer number (decimal)
      scope: constant.numeric.integer.decimal.ring
    - match: \b(PRIVATE|private|Private)\b
      comment: Static storage modifier
      scope: storage.modifier.static.ring
    - match: (TRUE|true|True|FALSE|false|False)
      comment: Boolean constant
      scope: constant.language.boolean.ring
    - match: '\b_[a-z][A-Za-z0-9_]*|\s(i|j)\s\b'
      comment: variable name
      scope: variable.name.special.ring
    - match: \b(EXIT|exit|Exit|LOOP|loop|Loop|BUT|but|But|ELSE|else|Else|IF|if|If|FOR|for|For|IN|in|In|TO|to|To|STEP|step|Step|NEXT|next|Next|SWITCH|switch|Switch|OFF|off|Off|ON|on|On|OTHER|other|Other|RETURN|return|Return|WHILE|while|While|DO|do|Do|END|end|End|AGAIN|again|Again|Try|try|Try|CATCH|catch|Catch|DONE|done|Done)\b
      comment: Control keyword
      scope: keyword.control.ring
    - match: \b(IF|if|If|TO|to|To|OR|or|Or|AND|and|And|NOT|not|Not|FOR|for|For|NEW|new|New|FUNC|func|Func|FROM|from|From|NEXT|next|Next|LOAD|load|Load|ELSE|else|Else|SEE|see|See|WHILE|while|While|OK|ok|Ok|CLASS|class|Class|BREAK|break|Break|RETURN|return|Return|BUT|but|But|END|end|End|GIVE|give|Give|BYE|bye|Bye|EXIT|exit|Exit|TRY|try|Try|CATCH|catch|Catch|DONE|done|Done|SWITCH|switch|Switch|ON|on|On|OTHER|other|Other|OFF|off|Off|IN|in|In|LOOP|loop|Loop|PACKAGE|package|Package|IMPORT|import|Import|PRIVATE|private|Private|STEP|step|Step|DO|do|Do|AGAIN|again|Again|CALL|call|Call)\b
      comment: ring keywords
      scope: keyword.command.ring
    - include: self
    - include: "null"
    - match: (=|\+=|-=)
      scope: keyword.operator.assignment.ring
    - match: (\<=|>=|==|!=|NOT|not|Not|\<>|\<|>|\$|\sOR\s|\sAND\s|\sNOT\s|\sand\s|\sor\s|\snot\s)
      scope: keyword.operator.comparison.ring
    - match: \b(len|add|del|get|clock|lower|upper|input|ascii|char|date|time|filename|getchar|system|random|timelist|adddays|diffdays|isstring|isnumber|islist|type|isnull|isobject|hex|dec|number|string|str2hex|hex2str|str2list|list2str|left|right|trim|copy|substr|lines|strcmp|eval|raise|assert|isalnum|isalpha|iscntrl|isdigit|isgraph|islower|isprint|ispunct|isspace|isupper|isxdigit|locals|globals|functions|cfunctions|islocal|isglobal|isfunction|iscfunction|packages|ispackage|classes|isclass|packageclasses|ispackageclass|classname|objectid|attributes|methods|isattribute|ismethod|isprivateattribute|isprivatemethod|addattribute|addmethod|getattribute|setattribute|mergemethods|list|find|min|max|insert|sort|reverse|binarysearch|sin|cos|tan|asin|acos|atan|atan2|sinh|cosh|tanh|exp|log|log10|ceil|floor|fabs|pow|sqrt|unsigned|decimals|murmur3hash|fopen|fclose|fflush|freopen|tempfile|tempname|fseek|ftell|rewind|fgetpos|fsetpos|clearerr|feof|ferror|perror|rename|remove|fgetc|fgets|fputc|fputs|ungetc|fread|fwrite|dir|read|write|fexists|ismsdos|iswindows|iswindows64|isunix|ismacosx|islinux|isfreebsd|isandroid|windowsnl|mysql_info|mysql_init|mysql_error|mysql_connect|mysql_close|mysql_query|mysql_result|mysql_insert_id|mysql_columns|mysql_result2|mysql_next_result|mysql_escape_string|mysql_autocommit|mysql_commit|mysql_rollback|odbc_init|odbc_drivers|odbc_datasources|odbc_close|odbc_connect|odbc_disconnect|odbc_execute|odbc_colcount|odbc_fetch|odbc_getdata|odbc_tables|odbc_columns|odbc_autocommit|odbc_commit|odbc_rollback|md5|sha1|sha256|sha512|sha384|sha224|encrypt|decrypt|randbytes|download|sendemail|loadlib|closelib|callgc|varptr|intvalue)!
      comment: Standard library macro
      scope: support.function.std.ring
    - match: '\b([a-zA-Z_][a-zA-Z0-9_]*)\s*\('
      comment: Function call
      captures:
        1: entity.name.function.ring
    - match: '\b([a-zA-Z_][a-zA-Z0-9_]*).([a-zA-Z_][a-zA-Z0-9_]*)\s*\('
      comment: Method call
      captures:
        1: entity.name.method.ring
    - match: '\b([a-zA-Z_][a-zA-Z0-9_]*).([a-zA-Z_][a-zA-Z0-9_]*)'
      comment: Class variable usage
      captures:
        1: variable.name.object.ring
        2: variable.name.member.ring
    - match: '\b(FUNC|func|Func)\s+([a-zA-Z_][a-zA-Z0-9_]*)'
      comment: Function definition
      captures:
        1: keyword.other.fn.ring
        2: entity.name.function.ring
      push:
        - match: '[\n]'
          pop: true
        - include: main
    - match: '\b(CLASS|class|Class)\s+([a-zA-Z_][a-zA-Z0-9_]*)(?:\s+(FROM|from|From)\s+([a-zA-Z_][a-zA-Z0-9_]*))?'
      comment: CLASS definition
      captures:
        1: keyword.class.ring
        2: entity.name.class.ring
        3: keyword.class.inherit.ring
        4: entity.name.parent.class.ring
      push:
        - match: '[\n]'
          pop: true
        - include: main
    - match: '\b(FUNC|func|Func)\s+((?:(?:[a-zA-Z_][a-zA-Z0-9_]*):)?(?:[a-zA-Z_][a-zA-Z0-9_]*))'
      comment: Method definition
      captures:
        1: keyword.method.fn.ring
        2: entity.name.method.ring
      push:
        - match: '[\n]'
          pop: true
        - include: main
    - match: "="
      comment: Variable declaration
      push:
        - match: ""
          pop: true
        - include: main
  block_comment:
    - match: /\*
      comment: Block comment
      push:
        - meta_scope: comment.block.ring
        - match: \*/
          pop: true
        - include: block_doc_comment
        - include: block_comment
  block_doc_comment:
    - match: '/\*[!\*][^\*]'
      comment: Block documentation comment
      push:
        - meta_scope: comment.block.documentation.ring
        - match: \*/
          pop: true
        - include: block_doc_comment
        - include: block_comment
  escaped_character:
    - match: '\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)'
      scope: constant.character.escape.ring
  line_comment:
    - match: "//[#].*$"
      comment: Single-line comment
      scope: comment.line.double-slash.ring
  line_doc_comment:
    - match: "//[!/][^/].*$"
      comment: Single-line documentation comment
      scope: comment.line.documentation.ring
  "null":
    - match: \b(NULL|null|Null)\b
      comment: null variable
      scope: variable.null.language.ring
  self:
    - match: \b(Self|SELF|self)\b
      comment: Self variable
      scope: variable.self.language.ring
  sigils:
    - match: '[@]|[:]{2}|[+]{2}(?=[a-zA-Z0-9_\(\[\|\"]+)'
      comment: Sigil
      scope: keyword.operator.sigil.ring
  string_literal:
    - match: '"'
      comment: Double-quote string
      push:
        - meta_scope: string.quoted.double.ring
        - match: '"'
          pop: true
        - include: escaped_character
