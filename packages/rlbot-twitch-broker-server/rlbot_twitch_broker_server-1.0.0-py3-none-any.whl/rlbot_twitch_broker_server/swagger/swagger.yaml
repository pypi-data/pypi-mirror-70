openapi: 3.0.0
info:
  title: RLBot Twitch Broker
  description: Allows custom Rocket League bots to register themselves with a central
    broker.
  contact:
    email: rlbotofficial@gmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
externalDocs:
  description: Find out more about RLBot
  url: http://www.rlbot.org/
servers:
- url: /
tags:
- name: register
  description: Allows bots to register themselves
- name: chat
  description: Operations that allow chat interaction. A useful substitute for twitch
    chat when testing.
- name: static
  description: Serves static assets.
paths:
  /register/actionServer:
    post:
      tags:
      - register
      operationId: register_action_server
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionServerRegistration'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        "400":
          description: Invalid status value
      x-openapi-router-controller: rlbot_twitch_broker_server.controllers.register_controller
  /chat:
    post:
      tags:
      - chat
      operationId: send_chat
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatLine'
        required: true
      responses:
        "200":
          description: successfully received chat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      x-openapi-router-controller: rlbot_twitch_broker_server.controllers.chat_controller
  /static/{filename}:
    get:
      tags:
      - static
      operationId: static_filename_get
      parameters:
      - name: filename
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: load static assets
          content:
            text/html:
              schema:
                type: string
                x-content-type: text/html
      x-openapi-router-controller: rlbot_twitch_broker_server.controllers.static_controller
components:
  schemas:
    ActionServerRegistration:
      type: object
      properties:
        baseUrl:
          type: string
          example: http://127.0.0.1:8080
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        message:
          type: string
          example: Succesfully processed operation
      example:
        code: 200
        message: Succesfully processed operation
    ChatLine:
      type: object
      properties:
        username:
          type: string
          example: GooseFairy
        message:
          type: string
          example: XT6 is the command I want!

