# coding: utf-8

"""
    Tator REST API

    Interface to the Tator backend.  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import tator
from tator.models.media import Media  # noqa: E501
from tator.rest import ApiException

class TestMedia(unittest.TestCase):
    """Media unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Media
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = tator.models.media.Media()  # noqa: E501
        if include_optional :
            return Media(
                attributes = { }, 
                codec = '0', 
                created_by = 56, 
                created_datetime = '0', 
                file = '0', 
                fps = 56, 
                height = 56, 
                id = 56, 
                last_edit_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                last_edit_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                md5 = '0', 
                media_files = [
                    '0'
                    ], 
                meta = 56, 
                modified_by = 56, 
                modified_datetime = '0', 
                name = '0', 
                num_frames = 56, 
                original = '0', 
                project = 56, 
                segment_info = '0', 
                thumbnail = '0', 
                thumbnail_gif = '0', 
                width = 56
            )
        else :
            return Media(
        )

    def testMedia(self):
        """Test Media"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
