# coding: utf-8

"""
    Tator REST API

    Interface to the Tator backend.  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import tator
from tator.models.localization_type_spec import LocalizationTypeSpec  # noqa: E501
from tator.rest import ApiException

class TestLocalizationTypeSpec(unittest.TestCase):
    """LocalizationTypeSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test LocalizationTypeSpec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = tator.models.localization_type_spec.LocalizationTypeSpec()  # noqa: E501
        if include_optional :
            return LocalizationTypeSpec(
                attribute_types = [
                    tator.models.attribute_type.AttributeType(
                        autocomplete = tator.models.autocomplete_service.AutocompleteService(
                            service_url = '0', ), 
                        choices = [
                            '0'
                            ], 
                        default = null, 
                        description = '0', 
                        dtype = 'bool', 
                        labels = [
                            '0'
                            ], 
                        maximum = 1.337, 
                        minimum = 1.337, 
                        name = '0', 
                        order = 56, 
                        required = True, 
                        use_current = True, )
                    ], 
                color_map = tator.models.color_map.ColorMap(
                    alpha_ranges = {
                        'key' : [
                            1.337
                            ]
                        }, 
                    default = null, 
                    key = '0', 
                    map = {
                        'key' : null
                        }, 
                    version = {
                        'key' : null
                        }, ), 
                description = '0', 
                dtype = 'box', 
                line_width = 1, 
                media_types = [
                    1
                    ], 
                name = '0', 
                visible = True
            )
        else :
            return LocalizationTypeSpec(
                dtype = 'box',
                media_types = [
                    1
                    ],
                name = '0',
        )

    def testLocalizationTypeSpec(self):
        """Test LocalizationTypeSpec"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
