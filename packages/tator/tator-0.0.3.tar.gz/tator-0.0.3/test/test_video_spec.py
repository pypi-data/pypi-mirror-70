# coding: utf-8

"""
    Tator REST API

    Interface to the Tator backend.  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import tator
from tator.models.video_spec import VideoSpec  # noqa: E501
from tator.rest import ApiException

class TestVideoSpec(unittest.TestCase):
    """VideoSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test VideoSpec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = tator.models.video_spec.VideoSpec()  # noqa: E501
        if include_optional :
            return VideoSpec(
                codec = '0', 
                fps = 1.337, 
                gid = '0', 
                height = 56, 
                md5 = '0', 
                media_files = [
                    '0'
                    ], 
                name = '0', 
                num_frames = 0, 
                progress_name = '0', 
                section = '0', 
                thumbnail_gif_url = '0', 
                thumbnail_url = '0', 
                type = -1, 
                uid = '0', 
                width = 56
            )
        else :
            return VideoSpec(
                codec = '0',
                fps = 1.337,
                gid = '0',
                height = 56,
                md5 = '0',
                media_files = [
                    '0'
                    ],
                name = '0',
                num_frames = 0,
                section = '0',
                thumbnail_gif_url = '0',
                thumbnail_url = '0',
                type = -1,
                uid = '0',
                width = 56,
        )

    def testVideoSpec(self):
        """Test VideoSpec"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
