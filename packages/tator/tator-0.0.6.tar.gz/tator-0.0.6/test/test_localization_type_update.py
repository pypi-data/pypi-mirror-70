# coding: utf-8

"""
    Tator REST API

    Interface to the Tator backend.  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import tator
from tator.models.localization_type_update import LocalizationTypeUpdate  # noqa: E501
from tator.rest import ApiException

class TestLocalizationTypeUpdate(unittest.TestCase):
    """LocalizationTypeUpdate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test LocalizationTypeUpdate
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = tator.models.localization_type_update.LocalizationTypeUpdate()  # noqa: E501
        if include_optional :
            return LocalizationTypeUpdate(
                color_map = tator.models.color_map.ColorMap(
                    alpha_ranges = {
                        'key' : [
                            1.337
                            ]
                        }, 
                    default = null, 
                    key = '0', 
                    map = {
                        'key' : null
                        }, 
                    version = {
                        'key' : null
                        }, ), 
                description = '0', 
                line_width = 1, 
                name = '0', 
                visible = True
            )
        else :
            return LocalizationTypeUpdate(
        )

    def testLocalizationTypeUpdate(self):
        """Test LocalizationTypeUpdate"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
