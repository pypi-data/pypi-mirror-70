# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: org/xrpl/rpc/v1/account.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='org/xrpl/rpc/v1/account.proto',
  package='org.xrpl.rpc.v1',
  syntax='proto3',
  serialized_options=b'\n\017org.xrpl.rpc.v1P\001',
  serialized_pb=b'\n\x1dorg/xrpl/rpc/v1/account.proto\x12\x0forg.xrpl.rpc.v1\"!\n\x0e\x41\x63\x63ountAddress\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\tB\x13\n\x0forg.xrpl.rpc.v1P\x01\x62\x06proto3'
)




_ACCOUNTADDRESS = _descriptor.Descriptor(
  name='AccountAddress',
  full_name='org.xrpl.rpc.v1.AccountAddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='address', full_name='org.xrpl.rpc.v1.AccountAddress.address', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=50,
  serialized_end=83,
)

DESCRIPTOR.message_types_by_name['AccountAddress'] = _ACCOUNTADDRESS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AccountAddress = _reflection.GeneratedProtocolMessageType('AccountAddress', (_message.Message,), {
  'DESCRIPTOR' : _ACCOUNTADDRESS,
  '__module__' : 'org.xrpl.rpc.v1.account_pb2'
  # @@protoc_insertion_point(class_scope:org.xrpl.rpc.v1.AccountAddress)
  })
_sym_db.RegisterMessage(AccountAddress)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
