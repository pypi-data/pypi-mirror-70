# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/00_cache.ipynb (unless otherwise specified).

__all__ = ['Cache', 'PickleCache', 'Cache', 'PickleCache']

# Cell
import pickle
from pathlib import Path

# Cell
class Cache:
    "Base class for caching. It defines the empty `save` and `load` methods. "
    def __init__(self,path):
        self.cache_dir=path

    def save(self, obj_name, obj):
        pass

    def load(self, obj_name):
        pass

# Cell
class PickleCache(Cache):
    "An implementation of Cache using Pickle library"
    def __init__(self,path):
        "Init the class with a path to the cache dir"
        super().__init__(path)
        self.cache_dir.mkdir(exist_ok=True)

    def load(self, obj_name):
        "load json object from cache dir to memory"
        pf=self.cache_dir/(obj_name+'.pkl')
        with pf.open(mode='rb') as f:
            obj=pickle.load(f)
            return obj

    def save(self, obj_name, obj):
        "save json object from memory to cache dir in binary format"
        pf=self.cache_dir/(obj_name+'.pkl')
        with pf.open(mode='wb+') as f:
            pickle.dump(obj,f,-1)
